{"cells":[{"cell_type":"markdown","source":["# Практикум Python\n","\n","\n","<img src=\"https://www.python.org/static/community_logos/python-logo-master-v3-TM.png\" align=\"right\" style=\"height: 200px;\"/>"],"metadata":{"id":"Hbbnl-ENj9I-"}},{"cell_type":"markdown","metadata":{"id":"LlmAifELkU13"},"source":["# Работа с табличными данными. Pandas"]},{"cell_type":"markdown","metadata":{"id":"8H8hsSdkkU16"},"source":["В этом ноутбуке мы познакомимся с основными фичами `pandas`. Эта библиотека огромна, поэтому мы сможем лишь немного поиграться с доступной функциональностью. Для детального ознакомления стоит почитать [документацию](https://pandas.pydata.org/docs/reference/index.html)"]},{"cell_type":"markdown","metadata":{"id":"EOktXh-FYdei"},"source":["# Первое знакомство"]},{"cell_type":"markdown","source":["Импортируем `pandas`:"],"metadata":{"id":"ud-4JAmw8hla"}},{"cell_type":"code","metadata":{"id":"xyofEpclYdei"},"source":["import pandas as pd  # Стандартный алиас для pandas"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Читаем датасет из csv-файла:"],"metadata":{"id":"qqUhPY_e8myo"}},{"cell_type":"code","metadata":{"scrolled":false,"id":"gi6t59OoYdej"},"source":["coins = pd.read_csv('/content/coins.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.read_csv?"],"metadata":{"id":"vntK22uFv4nq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Посмотрим что хранится в переменной:"],"metadata":{"id":"j_-SC97n8s6P"}},{"cell_type":"code","metadata":{"scrolled":false,"id":"f_eVbG_NYdej","colab":{"base_uri":"https://localhost:8080/","height":661},"executionInfo":{"status":"ok","timestamp":1666023904882,"user_tz":-180,"elapsed":382,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2bd53b3c-ffff-4b6b-83df-2c1a724fe148"},"source":["coins"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date       price  txCount      txVolume  activeAddresses symbol  \\\n","0      2013-04-28  135.300000  41702.0  6.879868e+07         117984.0    BTC   \n","1      2013-04-28    4.300000   9174.0  4.431952e+07          17216.0    LTC   \n","2      2013-04-29  134.440000  51602.0  1.138128e+08          86925.0    BTC   \n","3      2013-04-29    4.370000   9275.0  3.647810e+07          18395.0    LTC   \n","4      2013-04-30  144.000000  47450.0  8.426632e+07          76871.0    BTC   \n","...           ...         ...      ...           ...              ...    ...   \n","37583  2018-06-06    0.293325   4830.0  2.312763e+05            659.0    XLM   \n","37584  2018-06-06    0.039586   7205.0  4.947760e+06          18228.0    XVG   \n","37585  2018-06-06  239.760000  10687.0  3.986308e+07          96516.0    ZEC   \n","37586  2018-06-06    0.127555   1313.0  1.596436e+07            733.0    ZIL   \n","37587  2018-06-06    1.270000    795.0  6.094435e+06            599.0    ZRX   \n","\n","           name        open        high         low       close      volume  \\\n","0       Bitcoin  135.300000  135.980000  132.100000  134.210000         0.0   \n","1      Litecoin    4.300000    4.400000    4.180000    4.350000         0.0   \n","2       Bitcoin  134.440000  147.490000  134.000000  144.540000         0.0   \n","3      Litecoin    4.370000    4.570000    4.230000    4.380000         0.0   \n","4       Bitcoin  144.000000  146.930000  134.050000  139.000000         0.0   \n","...         ...         ...         ...         ...         ...         ...   \n","37583   Stellar    0.293325    0.299955    0.289500    0.298269  51165000.0   \n","37584     Verge    0.039586    0.039737    0.037680    0.038797   9307450.0   \n","37585     Zcash  239.750000  240.340000  229.210000  236.050000  56887000.0   \n","37586   Zilliqa    0.127555    0.133254    0.124194    0.131766  54667900.0   \n","37587        0x    1.270000    1.340000    1.250000    1.330000  17778000.0   \n","\n","             market  \n","0      1.500520e+09  \n","1      7.377340e+07  \n","2      1.491160e+09  \n","3      7.495270e+07  \n","4      1.597780e+09  \n","...             ...  \n","37583  5.450080e+09  \n","37584  5.959400e+08  \n","37585  9.769940e+08  \n","37586  9.348810e+08  \n","37587  6.741510e+08  \n","\n","[37588 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-e05e3da2-efd6-4e85-9ab5-0377f9d0a605\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.300000</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.300000</td>\n","      <td>135.980000</td>\n","      <td>132.100000</td>\n","      <td>134.210000</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.300000</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.300000</td>\n","      <td>4.400000</td>\n","      <td>4.180000</td>\n","      <td>4.350000</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.440000</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.440000</td>\n","      <td>147.490000</td>\n","      <td>134.000000</td>\n","      <td>144.540000</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.370000</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.370000</td>\n","      <td>4.570000</td>\n","      <td>4.230000</td>\n","      <td>4.380000</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.000000</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.000000</td>\n","      <td>146.930000</td>\n","      <td>134.050000</td>\n","      <td>139.000000</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37583</th>\n","      <td>2018-06-06</td>\n","      <td>0.293325</td>\n","      <td>4830.0</td>\n","      <td>2.312763e+05</td>\n","      <td>659.0</td>\n","      <td>XLM</td>\n","      <td>Stellar</td>\n","      <td>0.293325</td>\n","      <td>0.299955</td>\n","      <td>0.289500</td>\n","      <td>0.298269</td>\n","      <td>51165000.0</td>\n","      <td>5.450080e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37584</th>\n","      <td>2018-06-06</td>\n","      <td>0.039586</td>\n","      <td>7205.0</td>\n","      <td>4.947760e+06</td>\n","      <td>18228.0</td>\n","      <td>XVG</td>\n","      <td>Verge</td>\n","      <td>0.039586</td>\n","      <td>0.039737</td>\n","      <td>0.037680</td>\n","      <td>0.038797</td>\n","      <td>9307450.0</td>\n","      <td>5.959400e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37585</th>\n","      <td>2018-06-06</td>\n","      <td>239.760000</td>\n","      <td>10687.0</td>\n","      <td>3.986308e+07</td>\n","      <td>96516.0</td>\n","      <td>ZEC</td>\n","      <td>Zcash</td>\n","      <td>239.750000</td>\n","      <td>240.340000</td>\n","      <td>229.210000</td>\n","      <td>236.050000</td>\n","      <td>56887000.0</td>\n","      <td>9.769940e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37586</th>\n","      <td>2018-06-06</td>\n","      <td>0.127555</td>\n","      <td>1313.0</td>\n","      <td>1.596436e+07</td>\n","      <td>733.0</td>\n","      <td>ZIL</td>\n","      <td>Zilliqa</td>\n","      <td>0.127555</td>\n","      <td>0.133254</td>\n","      <td>0.124194</td>\n","      <td>0.131766</td>\n","      <td>54667900.0</td>\n","      <td>9.348810e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37587</th>\n","      <td>2018-06-06</td>\n","      <td>1.270000</td>\n","      <td>795.0</td>\n","      <td>6.094435e+06</td>\n","      <td>599.0</td>\n","      <td>ZRX</td>\n","      <td>0x</td>\n","      <td>1.270000</td>\n","      <td>1.340000</td>\n","      <td>1.250000</td>\n","      <td>1.330000</td>\n","      <td>17778000.0</td>\n","      <td>6.741510e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37588 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e05e3da2-efd6-4e85-9ab5-0377f9d0a605')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e05e3da2-efd6-4e85-9ab5-0377f9d0a605 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e05e3da2-efd6-4e85-9ab5-0377f9d0a605');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}]},{"cell_type":"markdown","source":["Посмотрим на тип переменной:"],"metadata":{"id":"wsMwE47L80xk"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vQKU_Wb8gRMq","executionInfo":{"status":"ok","timestamp":1666023792976,"user_tz":-180,"elapsed":631,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c354f1bd-7b90-4f11-fa49-950701856965"},"source":["type(coins)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","metadata":{"id":"D4BaWi0bYdel"},"source":["Поясним значения, хранящиеся в колонках:\n"," - *date* - дата измерений\n"," - *name* - полное название монеты\n"," - *symbol* - сокращенное название монеты\n"," - *price* - средняя цена монеты за торговый день в USD\n"," - *txCount* - количество транзакций в сети данной монеты\n"," - *txVolume* - объем монет переведенных между адресами в сети данной монеты\n"," - *activeAddresses* - количество адресов совершавших а данный день транзации в сети данной монеты\n"," - *open* - цена монеты в начале торгов данного дня\n"," - *close* - цена монеты в конце торгов данного дня\n"," - *high* - самая высокая цена данной монеты в течение данного торгового дня\n"," - *low* - самая низкая цена данной монеты в течение данного торгового дня\n"," - *volume* - объем торгов данной монетой на биржах в данный день\n"," - *market* - капитализация данной монеты в данный день"]},{"cell_type":"markdown","metadata":{"id":"FBN73J0cYdem"},"source":["По выводу можно получить общее представление о таблице. Видно, что в таблице могут храниться как числовые так и категориальные (строковые) данные, количество строк и столбцов. Всю эту информацию и многое другое можно получить и в коде."]},{"cell_type":"markdown","metadata":{"id":"tPFd3iKkYdem"},"source":["Для удобства мы далее ограничим размер вывода pandas в jupyter notebook:"]},{"cell_type":"code","metadata":{"id":"pX-fsXASYden"},"source":["pd.set_option('display.max_rows', 10)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Можем посмотреть на размер таблицы:"],"metadata":{"id":"-O_MAN7H9RF0"}},{"cell_type":"code","metadata":{"id":"FCsr7xAhYdeo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666023922956,"user_tz":-180,"elapsed":274,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ba837c80-ed6d-4bde-9a22-bb1c5c9a0574"},"source":["coins.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(37588, 13)"]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["Чтобы вывести лишь несколько первых строк таблицы, воспользуемся методом `head`:"],"metadata":{"id":"RsnAIO3L9YfM"}},{"cell_type":"code","metadata":{"id":"NFZB99u-Ydeo","colab":{"base_uri":"https://localhost:8080/","height":434},"executionInfo":{"status":"ok","timestamp":1666024092713,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"309c5fb7-6988-4d3f-a9bd-29fbec5a3447"},"source":["coins.head(7)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date   price  txCount      txVolume  activeAddresses symbol  \\\n","0  2013-04-28  135.30  41702.0  6.879868e+07         117984.0    BTC   \n","1  2013-04-28    4.30   9174.0  4.431952e+07          17216.0    LTC   \n","2  2013-04-29  134.44  51602.0  1.138128e+08          86925.0    BTC   \n","3  2013-04-29    4.37   9275.0  3.647810e+07          18395.0    LTC   \n","4  2013-04-30  144.00  47450.0  8.426632e+07          76871.0    BTC   \n","5  2013-04-30    4.40   9099.0  4.039166e+07          17810.0    LTC   \n","6  2013-05-01  139.00  55176.0  1.206825e+08          83564.0    BTC   \n","\n","       name    open    high     low   close  volume        market  \n","0   Bitcoin  135.30  135.98  132.10  134.21     0.0  1.500520e+09  \n","1  Litecoin    4.30    4.40    4.18    4.35     0.0  7.377340e+07  \n","2   Bitcoin  134.44  147.49  134.00  144.54     0.0  1.491160e+09  \n","3  Litecoin    4.37    4.57    4.23    4.38     0.0  7.495270e+07  \n","4   Bitcoin  144.00  146.93  134.05  139.00     0.0  1.597780e+09  \n","5  Litecoin    4.40    4.57    4.17    4.30     0.0  7.572680e+07  \n","6   Bitcoin  139.00  139.89  107.72  116.99     0.0  1.542820e+09  "],"text/html":["\n","  <div id=\"df-6d6f3c59-1170-4153-84f5-760478a0b83c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.30</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.30</td>\n","      <td>135.98</td>\n","      <td>132.10</td>\n","      <td>134.21</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.30</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.30</td>\n","      <td>4.40</td>\n","      <td>4.18</td>\n","      <td>4.35</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.44</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.44</td>\n","      <td>147.49</td>\n","      <td>134.00</td>\n","      <td>144.54</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.37</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.37</td>\n","      <td>4.57</td>\n","      <td>4.23</td>\n","      <td>4.38</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.00</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.00</td>\n","      <td>146.93</td>\n","      <td>134.05</td>\n","      <td>139.00</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2013-04-30</td>\n","      <td>4.40</td>\n","      <td>9099.0</td>\n","      <td>4.039166e+07</td>\n","      <td>17810.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.40</td>\n","      <td>4.57</td>\n","      <td>4.17</td>\n","      <td>4.30</td>\n","      <td>0.0</td>\n","      <td>7.572680e+07</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2013-05-01</td>\n","      <td>139.00</td>\n","      <td>55176.0</td>\n","      <td>1.206825e+08</td>\n","      <td>83564.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>139.00</td>\n","      <td>139.89</td>\n","      <td>107.72</td>\n","      <td>116.99</td>\n","      <td>0.0</td>\n","      <td>1.542820e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d6f3c59-1170-4153-84f5-760478a0b83c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6d6f3c59-1170-4153-84f5-760478a0b83c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6d6f3c59-1170-4153-84f5-760478a0b83c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"F0fpgnh_h_ep","executionInfo":{"status":"ok","timestamp":1666024097657,"user_tz":-180,"elapsed":272,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"7291ce9e-b471-4d65-c7ec-e8e874bf5601"},"source":["coins.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date   price  txCount      txVolume  activeAddresses symbol  \\\n","0  2013-04-28  135.30  41702.0  6.879868e+07         117984.0    BTC   \n","1  2013-04-28    4.30   9174.0  4.431952e+07          17216.0    LTC   \n","2  2013-04-29  134.44  51602.0  1.138128e+08          86925.0    BTC   \n","3  2013-04-29    4.37   9275.0  3.647810e+07          18395.0    LTC   \n","4  2013-04-30  144.00  47450.0  8.426632e+07          76871.0    BTC   \n","\n","       name    open    high     low   close  volume        market  \n","0   Bitcoin  135.30  135.98  132.10  134.21     0.0  1.500520e+09  \n","1  Litecoin    4.30    4.40    4.18    4.35     0.0  7.377340e+07  \n","2   Bitcoin  134.44  147.49  134.00  144.54     0.0  1.491160e+09  \n","3  Litecoin    4.37    4.57    4.23    4.38     0.0  7.495270e+07  \n","4   Bitcoin  144.00  146.93  134.05  139.00     0.0  1.597780e+09  "],"text/html":["\n","  <div id=\"df-97532ca5-3b67-4f67-b473-f057b725221f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.30</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.30</td>\n","      <td>135.98</td>\n","      <td>132.10</td>\n","      <td>134.21</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.30</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.30</td>\n","      <td>4.40</td>\n","      <td>4.18</td>\n","      <td>4.35</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.44</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.44</td>\n","      <td>147.49</td>\n","      <td>134.00</td>\n","      <td>144.54</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.37</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.37</td>\n","      <td>4.57</td>\n","      <td>4.23</td>\n","      <td>4.38</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.00</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.00</td>\n","      <td>146.93</td>\n","      <td>134.05</td>\n","      <td>139.00</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97532ca5-3b67-4f67-b473-f057b725221f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97532ca5-3b67-4f67-b473-f057b725221f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97532ca5-3b67-4f67-b473-f057b725221f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HIeodMEQiYL4","executionInfo":{"status":"ok","timestamp":1666024103776,"user_tz":-180,"elapsed":394,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1332bbc1-d7ba-472d-f010-4107e76f6e1a"},"source":["type(coins.head())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":94}]},{"cell_type":"markdown","source":["Чтобы посмотреть информацию о содержимом таблицы, воспользуемся методом `info`:"],"metadata":{"id":"uYePb4XY9iHC"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rDm5eooPtNy8","executionInfo":{"status":"ok","timestamp":1666024115807,"user_tz":-180,"elapsed":454,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e36ba324-f617-4ad6-9133-628501311462"},"source":["coins.info()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37588 entries, 0 to 37587\n","Data columns (total 13 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   date             37588 non-null  object \n"," 1   price            37261 non-null  float64\n"," 2   txCount          36068 non-null  float64\n"," 3   txVolume         35758 non-null  float64\n"," 4   activeAddresses  36068 non-null  float64\n"," 5   symbol           37588 non-null  object \n"," 6   name             37588 non-null  object \n"," 7   open             37588 non-null  float64\n"," 8   high             37588 non-null  float64\n"," 9   low              37588 non-null  float64\n"," 10  close            37588 non-null  float64\n"," 11  volume           37588 non-null  float64\n"," 12  market           37588 non-null  float64\n","dtypes: float64(10), object(3)\n","memory usage: 3.7+ MB\n"]}]},{"cell_type":"markdown","source":["Посмотрим простейшие статистики для числовых колонок (метод `describe`):"],"metadata":{"id":"bXgHKbXZ9pam"}},{"cell_type":"code","metadata":{"id":"LvDSbmZNYdeo","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1666016679999,"user_tz":-180,"elapsed":752,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"34f6cb41-d765-494a-d6f7-94b7a3261017"},"source":["coins.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              price       txCount      txVolume  activeAddresses  \\\n","count  37261.000000  3.606800e+04  3.575800e+04     3.606800e+04   \n","mean     127.395042  1.960144e+04  4.745076e+53     3.295039e+04   \n","std      859.109058  7.702995e+04  8.972837e+55     1.143196e+05   \n","min        0.000002  0.000000e+00  0.000000e+00     0.000000e+00   \n","25%        0.059871  3.410000e+02  2.751161e+05     2.920000e+02   \n","50%        1.020000  1.214500e+03  2.007019e+06     1.388000e+03   \n","75%        8.710000  6.247000e+03  1.425408e+07     1.173400e+04   \n","max    19475.800000  1.349890e+06  1.696744e+58     1.283929e+06   \n","\n","               open          high           low         close        volume  \\\n","count  37588.000000  37588.000000  37588.000000  37588.000000  3.758800e+04   \n","mean     125.652051    131.127449    119.791636    125.771519  1.302249e+08   \n","std      855.436562    890.527305    813.697042    855.954704  8.042239e+08   \n","min        0.000002      0.000003      0.000002      0.000002  0.000000e+00   \n","25%        0.053032      0.057809      0.049289      0.053147  8.794400e+04   \n","50%        1.000000      1.050000      1.000000      1.000000  1.949815e+06   \n","75%        8.772500      9.480000      8.150000      8.810000  1.770732e+07   \n","max    19475.800000  20089.000000  18974.100000  19497.400000  2.384090e+10   \n","\n","             market  \n","count  3.758800e+04  \n","mean   2.720948e+09  \n","std    1.534546e+10  \n","min    0.000000e+00  \n","25%    1.356655e+07  \n","50%    1.323890e+08  \n","75%    5.156410e+08  \n","max    3.261410e+11  "],"text/html":["\n","  <div id=\"df-dcaa8f61-5edb-4d84-84f7-07c7ccfd37ae\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>37261.000000</td>\n","      <td>3.606800e+04</td>\n","      <td>3.575800e+04</td>\n","      <td>3.606800e+04</td>\n","      <td>37588.000000</td>\n","      <td>37588.000000</td>\n","      <td>37588.000000</td>\n","      <td>37588.000000</td>\n","      <td>3.758800e+04</td>\n","      <td>3.758800e+04</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>127.395042</td>\n","      <td>1.960144e+04</td>\n","      <td>4.745076e+53</td>\n","      <td>3.295039e+04</td>\n","      <td>125.652051</td>\n","      <td>131.127449</td>\n","      <td>119.791636</td>\n","      <td>125.771519</td>\n","      <td>1.302249e+08</td>\n","      <td>2.720948e+09</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>859.109058</td>\n","      <td>7.702995e+04</td>\n","      <td>8.972837e+55</td>\n","      <td>1.143196e+05</td>\n","      <td>855.436562</td>\n","      <td>890.527305</td>\n","      <td>813.697042</td>\n","      <td>855.954704</td>\n","      <td>8.042239e+08</td>\n","      <td>1.534546e+10</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000002</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000002</td>\n","      <td>0.000003</td>\n","      <td>0.000002</td>\n","      <td>0.000002</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.059871</td>\n","      <td>3.410000e+02</td>\n","      <td>2.751161e+05</td>\n","      <td>2.920000e+02</td>\n","      <td>0.053032</td>\n","      <td>0.057809</td>\n","      <td>0.049289</td>\n","      <td>0.053147</td>\n","      <td>8.794400e+04</td>\n","      <td>1.356655e+07</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.020000</td>\n","      <td>1.214500e+03</td>\n","      <td>2.007019e+06</td>\n","      <td>1.388000e+03</td>\n","      <td>1.000000</td>\n","      <td>1.050000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.949815e+06</td>\n","      <td>1.323890e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8.710000</td>\n","      <td>6.247000e+03</td>\n","      <td>1.425408e+07</td>\n","      <td>1.173400e+04</td>\n","      <td>8.772500</td>\n","      <td>9.480000</td>\n","      <td>8.150000</td>\n","      <td>8.810000</td>\n","      <td>1.770732e+07</td>\n","      <td>5.156410e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>19475.800000</td>\n","      <td>1.349890e+06</td>\n","      <td>1.696744e+58</td>\n","      <td>1.283929e+06</td>\n","      <td>19475.800000</td>\n","      <td>20089.000000</td>\n","      <td>18974.100000</td>\n","      <td>19497.400000</td>\n","      <td>2.384090e+10</td>\n","      <td>3.261410e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dcaa8f61-5edb-4d84-84f7-07c7ccfd37ae')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dcaa8f61-5edb-4d84-84f7-07c7ccfd37ae button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dcaa8f61-5edb-4d84-84f7-07c7ccfd37ae');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["Можем выбрать отдельную колонку, обратившись к DataFrame по имени столбца:"],"metadata":{"id":"EGJTpSzf9xPg"}},{"cell_type":"code","metadata":{"id":"-JfUac4dYdep","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666016689029,"user_tz":-180,"elapsed":258,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"945e1af4-1336-4938-a990-33b46d43f4db"},"source":["coins['price']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        135.300000\n","1          4.300000\n","2        134.440000\n","3          4.370000\n","4        144.000000\n","            ...    \n","37583      0.293325\n","37584      0.039586\n","37585    239.760000\n","37586      0.127555\n","37587      1.270000\n","Name: price, Length: 37588, dtype: float64"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["С колонками можно выполнять поэлементные операции:"],"metadata":{"id":"FJIB6X1j99H6"}},{"cell_type":"code","metadata":{"id":"POEyG5xaYdep","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666016691689,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"82648689-d99d-4036-addf-425de60925cc"},"source":["coins['high'] - coins['low']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         3.880000\n","1         0.220000\n","2        13.490000\n","3         0.340000\n","4        12.880000\n","           ...    \n","37583     0.010455\n","37584     0.002057\n","37585    11.130000\n","37586     0.009060\n","37587     0.090000\n","Length: 37588, dtype: float64"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["Можем добавить новые колонки в таблицу:"],"metadata":{"id":"efW6wK-8-EQE"}},{"cell_type":"code","metadata":{"id":"mGePP6cRYdeq","colab":{"base_uri":"https://localhost:8080/","height":162},"executionInfo":{"status":"ok","timestamp":1666024449984,"user_tz":-180,"elapsed":319,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"faae7c31-15e5-40a7-b7d1-843117613614"},"source":["coins['spread'] = coins['high'] - coins['low']\n","coins.head(1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date  price  txCount      txVolume  activeAddresses symbol     name  \\\n","0  2013-04-28  135.3  41702.0  6.879868e+07         117984.0    BTC  Bitcoin   \n","\n","    open    high    low   close  volume        market  spread  \n","0  135.3  135.98  132.1  134.21     0.0  1.500520e+09    3.88  "],"text/html":["\n","  <div id=\"df-6ff15155-f0f8-4090-a8b5-9c204eb01fe1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","      <th>spread</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.3</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.3</td>\n","      <td>135.98</td>\n","      <td>132.1</td>\n","      <td>134.21</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","      <td>3.88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ff15155-f0f8-4090-a8b5-9c204eb01fe1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ff15155-f0f8-4090-a8b5-9c204eb01fe1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ff15155-f0f8-4090-a8b5-9c204eb01fe1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":97}]},{"cell_type":"markdown","source":["Все изменения таблицы будут лишь в оперативной памяти (в переменных Python), на данные в файлах это не влияет:"],"metadata":{"id":"5sxBvaIE-MPi"}},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DTMZUbgimSru","executionInfo":{"status":"ok","timestamp":1666024476866,"user_tz":-180,"elapsed":287,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"77839308-d2f4-4ab0-b0c5-ac7dd86d0229"},"source":["demo_coins = pd.read_csv('coins.csv')\n","demo_coins.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['date', 'price', 'txCount', 'txVolume', 'activeAddresses', 'symbol',\n","       'name', 'open', 'high', 'low', 'close', 'volume', 'market'],\n","      dtype='object')"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["Можем и удалить колонки с помощью `del` или метода `pop`:"],"metadata":{"id":"rGvTyrIB-gJ5"}},{"cell_type":"code","metadata":{"id":"RDv4kt8uYdeq"},"source":["del coins['spread']  # Можно иначе: coins.pop('spread')"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["coins.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"1f6DVr6rz7Nq","executionInfo":{"status":"ok","timestamp":1666024722375,"user_tz":-180,"elapsed":14,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"08c83e52-ed24-4c06-d8b6-56e4c7913897"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         date   price  txCount      txVolume  activeAddresses symbol  \\\n","0  2013-04-28  135.30  41702.0  6.879868e+07         117984.0    BTC   \n","1  2013-04-28    4.30   9174.0  4.431952e+07          17216.0    LTC   \n","2  2013-04-29  134.44  51602.0  1.138128e+08          86925.0    BTC   \n","3  2013-04-29    4.37   9275.0  3.647810e+07          18395.0    LTC   \n","4  2013-04-30  144.00  47450.0  8.426632e+07          76871.0    BTC   \n","\n","       name    open    high     low   close  volume        market  \n","0   Bitcoin  135.30  135.98  132.10  134.21     0.0  1.500520e+09  \n","1  Litecoin    4.30    4.40    4.18    4.35     0.0  7.377340e+07  \n","2   Bitcoin  134.44  147.49  134.00  144.54     0.0  1.491160e+09  \n","3  Litecoin    4.37    4.57    4.23    4.38     0.0  7.495270e+07  \n","4   Bitcoin  144.00  146.93  134.05  139.00     0.0  1.597780e+09  "],"text/html":["\n","  <div id=\"df-4834ac0b-6d96-4ab8-aa74-798551bfcba8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.30</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.30</td>\n","      <td>135.98</td>\n","      <td>132.10</td>\n","      <td>134.21</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.30</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.30</td>\n","      <td>4.40</td>\n","      <td>4.18</td>\n","      <td>4.35</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.44</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.44</td>\n","      <td>147.49</td>\n","      <td>134.00</td>\n","      <td>144.54</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.37</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.37</td>\n","      <td>4.57</td>\n","      <td>4.23</td>\n","      <td>4.38</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.00</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.00</td>\n","      <td>146.93</td>\n","      <td>134.05</td>\n","      <td>139.00</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4834ac0b-6d96-4ab8-aa74-798551bfcba8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4834ac0b-6d96-4ab8-aa74-798551bfcba8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4834ac0b-6d96-4ab8-aa74-798551bfcba8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":100}]},{"cell_type":"markdown","metadata":{"id":"-HO6cnxFYdeq"},"source":["Колонки в таблицах pandas ведут себя как массивы неизменяемой длины. Приятное отличие состоит в том, что колонки имеют много полезных для аналитики методов:"]},{"cell_type":"code","source":["coins['symbol']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hzIUpGi5tv1m","executionInfo":{"status":"ok","timestamp":1666016701841,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5e529e7a-ceca-4d60-f961-418ae8384455"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        BTC\n","1        LTC\n","2        BTC\n","3        LTC\n","4        BTC\n","        ... \n","37583    XLM\n","37584    XVG\n","37585    ZEC\n","37586    ZIL\n","37587    ZRX\n","Name: symbol, Length: 37588, dtype: object"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HgmZffd0pGRB","executionInfo":{"status":"ok","timestamp":1666016703764,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"99443788-2c1a-4549-c5ba-05a85a0096ef"},"source":["type(coins['symbol'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"f5SZLR5mpQWl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666016704018,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"75aaa24d-7a97-4316-a08e-436d85d4a616"},"source":["help(pd.core.series.Series.value_counts)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on function value_counts in module pandas.core.base:\n","\n","value_counts(self, normalize: 'bool' = False, sort: 'bool' = True, ascending: 'bool' = False, bins=None, dropna: 'bool' = True)\n","    Return a Series containing counts of unique values.\n","    \n","    The resulting object will be in descending order so that the\n","    first element is the most frequently-occurring element.\n","    Excludes NA values by default.\n","    \n","    Parameters\n","    ----------\n","    normalize : bool, default False\n","        If True then the object returned will contain the relative\n","        frequencies of the unique values.\n","    sort : bool, default True\n","        Sort by frequencies.\n","    ascending : bool, default False\n","        Sort in ascending order.\n","    bins : int, optional\n","        Rather than count values, group them into half-open bins,\n","        a convenience for ``pd.cut``, only works with numeric data.\n","    dropna : bool, default True\n","        Don't include counts of NaN.\n","    \n","    Returns\n","    -------\n","    Series\n","    \n","    See Also\n","    --------\n","    Series.count: Number of non-NA elements in a Series.\n","    DataFrame.count: Number of non-NA elements in a DataFrame.\n","    DataFrame.value_counts: Equivalent method on DataFrames.\n","    \n","    Examples\n","    --------\n","    >>> index = pd.Index([3, 1, 2, 3, 4, np.nan])\n","    >>> index.value_counts()\n","    3.0    2\n","    1.0    1\n","    2.0    1\n","    4.0    1\n","    dtype: int64\n","    \n","    With `normalize` set to `True`, returns the relative frequency by\n","    dividing all values by the sum of values.\n","    \n","    >>> s = pd.Series([3, 1, 2, 3, 4, np.nan])\n","    >>> s.value_counts(normalize=True)\n","    3.0    0.4\n","    1.0    0.2\n","    2.0    0.2\n","    4.0    0.2\n","    dtype: float64\n","    \n","    **bins**\n","    \n","    Bins can be useful for going from a continuous variable to a\n","    categorical variable; instead of counting unique\n","    apparitions of values, divide the index in the specified\n","    number of half-open bins.\n","    \n","    >>> s.value_counts(bins=3)\n","    (0.996, 2.0]    2\n","    (2.0, 3.0]      2\n","    (3.0, 4.0]      1\n","    dtype: int64\n","    \n","    **dropna**\n","    \n","    With `dropna` set to `False` we can also see NaN index values.\n","    \n","    >>> s.value_counts(dropna=False)\n","    3.0    2\n","    1.0    1\n","    2.0    1\n","    4.0    1\n","    NaN    1\n","    dtype: int64\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3aL3inRzpKGg","executionInfo":{"status":"ok","timestamp":1666024774827,"user_tz":-180,"elapsed":725,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d54fc5ee-3b34-4410-af9d-7c0029f1a613"},"source":["type(coins['symbol'].value_counts())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.series.Series"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","metadata":{"id":"IoFaFPdlYdeq"},"source":["variable = coins['symbol'].value_counts() # Количества записей в таблице для каждой монеты"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MPEbGnQZroeS","executionInfo":{"status":"ok","timestamp":1666024785848,"user_tz":-180,"elapsed":1038,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3f76e1c9-8449-4a61-de88-66970895f1ff"},"source":["variable"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC      1866\n","LTC      1866\n","DOGE     1635\n","VTC      1599\n","DGB      1582\n","         ... \n","ZIL       133\n","POLY      125\n","CENNZ      86\n","LOOM       85\n","CTXC       52\n","Name: symbol, Length: 66, dtype: int64"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yvulRaN-qFEt","executionInfo":{"status":"ok","timestamp":1666024842105,"user_tz":-180,"elapsed":250,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2be8e0cc-7334-48b6-a62c-767eb246a923"},"source":["coins['symbol'].value_counts()['BTC']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1866"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","metadata":{"id":"lXRYPqLFYder","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666016746695,"user_tz":-180,"elapsed":301,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a0e09e0c-678b-46ab-a2c3-9d49813d62f6"},"source":["# Самая высокая цена монеты во всей таблице\n","coins['price'].max()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["19475.8"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OADgjEVZsvfQ","executionInfo":{"status":"ok","timestamp":1666024865811,"user_tz":-180,"elapsed":795,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"bde68834-05a0-4fd2-df87-2d0b50a6eb32"},"source":["# Средняя цена монет во всей таблице\n","coins['price'].mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["127.39504201435274"]},"metadata":{},"execution_count":105}]},{"cell_type":"markdown","source":["Для колонок работают стандартные методы индексации списков, но есть и другие:"],"metadata":{"id":"sEvo8nmY_iMQ"}},{"cell_type":"code","metadata":{"id":"fLm1vbWCYder","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666024883191,"user_tz":-180,"elapsed":247,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"40ea81f8-45bd-4d65-d695-cf439de87a5e"},"source":["coins['txVolume'][:5]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    6.879868e+07\n","1    4.431952e+07\n","2    1.138128e+08\n","3    3.647810e+07\n","4    8.426632e+07\n","Name: txVolume, dtype: float64"]},"metadata":{},"execution_count":106}]},{"cell_type":"markdown","metadata":{"id":"rW64YqkeYdes"},"source":["Для колонок определены бинарные операции и методы которые возвращают специальную колонку из булевских значений. Истина будет храниться только для тех индексов для которых выполнено условие. Рассмотрим на примере:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3u-vJuBkuJb-","executionInfo":{"status":"ok","timestamp":1666024917789,"user_tz":-180,"elapsed":256,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ee6978a3-9da7-4513-8c48-bb00d50bb243"},"source":["coins['txCount'].tail(10)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["37578      172.0\n","37579     1275.0\n","37580    59491.0\n","37581      200.0\n","37582     6613.0\n","37583     4830.0\n","37584     7205.0\n","37585    10687.0\n","37586     1313.0\n","37587      795.0\n","Name: txCount, dtype: float64"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","metadata":{"id":"67jL2ZpYYdes","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666024960252,"user_tz":-180,"elapsed":358,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f75a490e-2873-48d2-8423-0f000dcbb426"},"source":["# Строки колонки для которых txCount был больше 1000\n","coins['txCount'] > 1000"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         True\n","1         True\n","2         True\n","3         True\n","4         True\n","         ...  \n","37583     True\n","37584     True\n","37585     True\n","37586     True\n","37587    False\n","Name: txCount, Length: 37588, dtype: bool"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["coins[coins['txCount'] > 1000]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"3OXR5JuTvx6c","executionInfo":{"status":"ok","timestamp":1666024988780,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9dda0d77-3869-4091-874c-06061b6e12d9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date       price  txCount      txVolume  activeAddresses symbol  \\\n","0      2013-04-28  135.300000  41702.0  6.879868e+07         117984.0    BTC   \n","1      2013-04-28    4.300000   9174.0  4.431952e+07          17216.0    LTC   \n","2      2013-04-29  134.440000  51602.0  1.138128e+08          86925.0    BTC   \n","3      2013-04-29    4.370000   9275.0  3.647810e+07          18395.0    LTC   \n","4      2013-04-30  144.000000  47450.0  8.426632e+07          76871.0    BTC   \n","...           ...         ...      ...           ...              ...    ...   \n","37582  2018-06-06    0.252141   6613.0  3.267675e+06           3231.0    XEM   \n","37583  2018-06-06    0.293325   4830.0  2.312763e+05            659.0    XLM   \n","37584  2018-06-06    0.039586   7205.0  4.947760e+06          18228.0    XVG   \n","37585  2018-06-06  239.760000  10687.0  3.986308e+07          96516.0    ZEC   \n","37586  2018-06-06    0.127555   1313.0  1.596436e+07            733.0    ZIL   \n","\n","           name        open        high         low       close      volume  \\\n","0       Bitcoin  135.300000  135.980000  132.100000  134.210000         0.0   \n","1      Litecoin    4.300000    4.400000    4.180000    4.350000         0.0   \n","2       Bitcoin  134.440000  147.490000  134.000000  144.540000         0.0   \n","3      Litecoin    4.370000    4.570000    4.230000    4.380000         0.0   \n","4       Bitcoin  144.000000  146.930000  134.050000  139.000000         0.0   \n","...         ...         ...         ...         ...         ...         ...   \n","37582       NEM    0.252141    0.252469    0.245758    0.250975  16446800.0   \n","37583   Stellar    0.293325    0.299955    0.289500    0.298269  51165000.0   \n","37584     Verge    0.039586    0.039737    0.037680    0.038797   9307450.0   \n","37585     Zcash  239.750000  240.340000  229.210000  236.050000  56887000.0   \n","37586   Zilliqa    0.127555    0.133254    0.124194    0.131766  54667900.0   \n","\n","             market  \n","0      1.500520e+09  \n","1      7.377340e+07  \n","2      1.491160e+09  \n","3      7.495270e+07  \n","4      1.597780e+09  \n","...             ...  \n","37582  2.269270e+09  \n","37583  5.450080e+09  \n","37584  5.959400e+08  \n","37585  9.769940e+08  \n","37586  9.348810e+08  \n","\n","[19365 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-dc05e40a-76f0-4889-a2c8-ba07a9d7e70f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.300000</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.300000</td>\n","      <td>135.980000</td>\n","      <td>132.100000</td>\n","      <td>134.210000</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.300000</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.300000</td>\n","      <td>4.400000</td>\n","      <td>4.180000</td>\n","      <td>4.350000</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.440000</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.440000</td>\n","      <td>147.490000</td>\n","      <td>134.000000</td>\n","      <td>144.540000</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.370000</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.370000</td>\n","      <td>4.570000</td>\n","      <td>4.230000</td>\n","      <td>4.380000</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.000000</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.000000</td>\n","      <td>146.930000</td>\n","      <td>134.050000</td>\n","      <td>139.000000</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37582</th>\n","      <td>2018-06-06</td>\n","      <td>0.252141</td>\n","      <td>6613.0</td>\n","      <td>3.267675e+06</td>\n","      <td>3231.0</td>\n","      <td>XEM</td>\n","      <td>NEM</td>\n","      <td>0.252141</td>\n","      <td>0.252469</td>\n","      <td>0.245758</td>\n","      <td>0.250975</td>\n","      <td>16446800.0</td>\n","      <td>2.269270e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37583</th>\n","      <td>2018-06-06</td>\n","      <td>0.293325</td>\n","      <td>4830.0</td>\n","      <td>2.312763e+05</td>\n","      <td>659.0</td>\n","      <td>XLM</td>\n","      <td>Stellar</td>\n","      <td>0.293325</td>\n","      <td>0.299955</td>\n","      <td>0.289500</td>\n","      <td>0.298269</td>\n","      <td>51165000.0</td>\n","      <td>5.450080e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37584</th>\n","      <td>2018-06-06</td>\n","      <td>0.039586</td>\n","      <td>7205.0</td>\n","      <td>4.947760e+06</td>\n","      <td>18228.0</td>\n","      <td>XVG</td>\n","      <td>Verge</td>\n","      <td>0.039586</td>\n","      <td>0.039737</td>\n","      <td>0.037680</td>\n","      <td>0.038797</td>\n","      <td>9307450.0</td>\n","      <td>5.959400e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37585</th>\n","      <td>2018-06-06</td>\n","      <td>239.760000</td>\n","      <td>10687.0</td>\n","      <td>3.986308e+07</td>\n","      <td>96516.0</td>\n","      <td>ZEC</td>\n","      <td>Zcash</td>\n","      <td>239.750000</td>\n","      <td>240.340000</td>\n","      <td>229.210000</td>\n","      <td>236.050000</td>\n","      <td>56887000.0</td>\n","      <td>9.769940e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37586</th>\n","      <td>2018-06-06</td>\n","      <td>0.127555</td>\n","      <td>1313.0</td>\n","      <td>1.596436e+07</td>\n","      <td>733.0</td>\n","      <td>ZIL</td>\n","      <td>Zilliqa</td>\n","      <td>0.127555</td>\n","      <td>0.133254</td>\n","      <td>0.124194</td>\n","      <td>0.131766</td>\n","      <td>54667900.0</td>\n","      <td>9.348810e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19365 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc05e40a-76f0-4889-a2c8-ba07a9d7e70f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dc05e40a-76f0-4889-a2c8-ba07a9d7e70f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dc05e40a-76f0-4889-a2c8-ba07a9d7e70f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":109}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ylyw_hpxu7lW","executionInfo":{"status":"ok","timestamp":1666025031624,"user_tz":-180,"elapsed":283,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"0a7b2cff-3348-4f99-d8a5-e705df9ccfac"},"source":["coins['symbol']"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        BTC\n","1        LTC\n","2        BTC\n","3        LTC\n","4        BTC\n","        ... \n","37583    XLM\n","37584    XVG\n","37585    ZEC\n","37586    ZIL\n","37587    ZRX\n","Name: symbol, Length: 37588, dtype: object"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","metadata":{"id":"iNycXFjjYdes","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666025073957,"user_tz":-180,"elapsed":255,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a371b736-1d64-4816-b971-995d702d39a3"},"source":["# Строки в которых значение попадает в заранее заданный набор\n","coins['symbol'].isin(['BTC', 'ADA'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         True\n","1        False\n","2         True\n","3        False\n","4         True\n","         ...  \n","37583    False\n","37584    False\n","37585    False\n","37586    False\n","37587    False\n","Name: symbol, Length: 37588, dtype: bool"]},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["coins[coins['symbol'].isin(['BTC', 'ADA'])]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"5fUucUbtFEOt","executionInfo":{"status":"ok","timestamp":1666025081171,"user_tz":-180,"elapsed":304,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9eebe96d-4dbc-4b3f-8080-2a30236ada7d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date        price   txCount      txVolume  activeAddresses  \\\n","0      2013-04-28   135.300000   41702.0  6.879868e+07         117984.0   \n","2      2013-04-29   134.440000   51602.0  1.138128e+08          86925.0   \n","4      2013-04-30   144.000000   47450.0  8.426632e+07          76871.0   \n","6      2013-05-01   139.000000   55176.0  1.206825e+08          83564.0   \n","8      2013-05-02   116.380000   55295.0  9.337533e+07          81920.0   \n","...           ...          ...       ...           ...              ...   \n","37385  2018-06-04  7722.530000  209733.0  7.925997e+09         702904.0   \n","37448  2018-06-05     0.214247    1652.0  3.081912e+08           3682.0   \n","37455  2018-06-05  7500.900000  212726.0  5.821974e+09         655694.0   \n","37518  2018-06-06     0.220565    1572.0  2.439159e+08           3802.0   \n","37525  2018-06-06  7625.970000  206270.0  5.055067e+09         651145.0   \n","\n","      symbol     name         open         high          low        close  \\\n","0        BTC  Bitcoin   135.300000   135.980000   132.100000   134.210000   \n","2        BTC  Bitcoin   134.440000   147.490000   134.000000   144.540000   \n","4        BTC  Bitcoin   144.000000   146.930000   134.050000   139.000000   \n","6        BTC  Bitcoin   139.000000   139.890000   107.720000   116.990000   \n","8        BTC  Bitcoin   116.380000   125.600000    92.280000   105.210000   \n","...      ...      ...          ...          ...          ...          ...   \n","37385    BTC  Bitcoin  7722.530000  7753.820000  7474.040000  7514.470000   \n","37448    ADA  Cardano     0.214247     0.221728     0.204815     0.220467   \n","37455    BTC  Bitcoin  7500.900000  7643.230000  7397.000000  7633.760000   \n","37518    ADA  Cardano     0.220565     0.220862     0.210708     0.215721   \n","37525    BTC  Bitcoin  7625.970000  7680.430000  7502.010000  7653.980000   \n","\n","             volume        market  \n","0      0.000000e+00  1.500520e+09  \n","2      0.000000e+00  1.491160e+09  \n","4      0.000000e+00  1.597780e+09  \n","6      0.000000e+00  1.542820e+09  \n","8      0.000000e+00  1.292190e+09  \n","...             ...           ...  \n","37385  4.993170e+09  1.318470e+11  \n","37448  1.198460e+08  5.554790e+09  \n","37455  4.961740e+09  1.280810e+11  \n","37518  8.476630e+07  5.718610e+09  \n","37525  4.692260e+09  1.302330e+11  \n","\n","[2115 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-96d419f8-4838-49df-8d69-1aec93c975de\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.300000</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.300000</td>\n","      <td>135.980000</td>\n","      <td>132.100000</td>\n","      <td>134.210000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.440000</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.440000</td>\n","      <td>147.490000</td>\n","      <td>134.000000</td>\n","      <td>144.540000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.000000</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.000000</td>\n","      <td>146.930000</td>\n","      <td>134.050000</td>\n","      <td>139.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2013-05-01</td>\n","      <td>139.000000</td>\n","      <td>55176.0</td>\n","      <td>1.206825e+08</td>\n","      <td>83564.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>139.000000</td>\n","      <td>139.890000</td>\n","      <td>107.720000</td>\n","      <td>116.990000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.542820e+09</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2013-05-02</td>\n","      <td>116.380000</td>\n","      <td>55295.0</td>\n","      <td>9.337533e+07</td>\n","      <td>81920.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>116.380000</td>\n","      <td>125.600000</td>\n","      <td>92.280000</td>\n","      <td>105.210000</td>\n","      <td>0.000000e+00</td>\n","      <td>1.292190e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37385</th>\n","      <td>2018-06-04</td>\n","      <td>7722.530000</td>\n","      <td>209733.0</td>\n","      <td>7.925997e+09</td>\n","      <td>702904.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7722.530000</td>\n","      <td>7753.820000</td>\n","      <td>7474.040000</td>\n","      <td>7514.470000</td>\n","      <td>4.993170e+09</td>\n","      <td>1.318470e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37448</th>\n","      <td>2018-06-05</td>\n","      <td>0.214247</td>\n","      <td>1652.0</td>\n","      <td>3.081912e+08</td>\n","      <td>3682.0</td>\n","      <td>ADA</td>\n","      <td>Cardano</td>\n","      <td>0.214247</td>\n","      <td>0.221728</td>\n","      <td>0.204815</td>\n","      <td>0.220467</td>\n","      <td>1.198460e+08</td>\n","      <td>5.554790e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37455</th>\n","      <td>2018-06-05</td>\n","      <td>7500.900000</td>\n","      <td>212726.0</td>\n","      <td>5.821974e+09</td>\n","      <td>655694.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7500.900000</td>\n","      <td>7643.230000</td>\n","      <td>7397.000000</td>\n","      <td>7633.760000</td>\n","      <td>4.961740e+09</td>\n","      <td>1.280810e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37518</th>\n","      <td>2018-06-06</td>\n","      <td>0.220565</td>\n","      <td>1572.0</td>\n","      <td>2.439159e+08</td>\n","      <td>3802.0</td>\n","      <td>ADA</td>\n","      <td>Cardano</td>\n","      <td>0.220565</td>\n","      <td>0.220862</td>\n","      <td>0.210708</td>\n","      <td>0.215721</td>\n","      <td>8.476630e+07</td>\n","      <td>5.718610e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37525</th>\n","      <td>2018-06-06</td>\n","      <td>7625.970000</td>\n","      <td>206270.0</td>\n","      <td>5.055067e+09</td>\n","      <td>651145.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7625.970000</td>\n","      <td>7680.430000</td>\n","      <td>7502.010000</td>\n","      <td>7653.980000</td>\n","      <td>4.692260e+09</td>\n","      <td>1.302330e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2115 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-96d419f8-4838-49df-8d69-1aec93c975de')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-96d419f8-4838-49df-8d69-1aec93c975de button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-96d419f8-4838-49df-8d69-1aec93c975de');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":112}]},{"cell_type":"code","metadata":{"id":"dZ7ZHVZKYdet","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666016773947,"user_tz":-180,"elapsed":13,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"09d25429-b54a-4a88-fbab-e6e3bc4de2fc"},"source":["# Строки колонки в которых имя монеты содержит букву 'C'\n","coins['symbol'].str.contains('C')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         True\n","1         True\n","2         True\n","3         True\n","4         True\n","         ...  \n","37583    False\n","37584    False\n","37585     True\n","37586    False\n","37587    False\n","Name: symbol, Length: 37588, dtype: bool"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["coins[coins['symbol'].str.contains('C')]"],"metadata":{"id":"xVVAkGOyFSC8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Для колонок можно составлять сложные логические выражения (скобки обязательны!):"],"metadata":{"id":"YCNu6fE5AseF"}},{"cell_type":"code","metadata":{"id":"e4viLSLOYdet","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666025262829,"user_tz":-180,"elapsed":276,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"89c77ed1-b29a-4bcb-fa4a-74482b4d7b8d"},"source":["((coins['price'] > 18000) | (coins['market'] > 200_000)) & (coins['symbol'] == 'BTC')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         True\n","1        False\n","2         True\n","3        False\n","4         True\n","         ...  \n","37583    False\n","37584    False\n","37585    False\n","37586    False\n","37587    False\n","Length: 37588, dtype: bool"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","source":["coins[((coins['price'] > 18000) | (coins['market'] > 200_000)) & (coins['symbol'] == 'BTC')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"Y8yIps1bFltu","executionInfo":{"status":"ok","timestamp":1666025291679,"user_tz":-180,"elapsed":283,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5c518003-a0b4-4649-f939-78600a51b5b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date    price   txCount      txVolume  activeAddresses symbol  \\\n","0      2013-04-28   135.30   41702.0  6.879868e+07         117984.0    BTC   \n","2      2013-04-29   134.44   51602.0  1.138128e+08          86925.0    BTC   \n","4      2013-04-30   144.00   47450.0  8.426632e+07          76871.0    BTC   \n","6      2013-05-01   139.00   55176.0  1.206825e+08          83564.0    BTC   \n","8      2013-05-02   116.38   55295.0  9.337533e+07          81920.0    BTC   \n","...           ...      ...       ...           ...              ...    ...   \n","37245  2018-06-02  7536.72  174345.0  4.151723e+09         521910.0    BTC   \n","37315  2018-06-03  7632.09  163280.0  4.477652e+09         531463.0    BTC   \n","37385  2018-06-04  7722.53  209733.0  7.925997e+09         702904.0    BTC   \n","37455  2018-06-05  7500.90  212726.0  5.821974e+09         655694.0    BTC   \n","37525  2018-06-06  7625.97  206270.0  5.055067e+09         651145.0    BTC   \n","\n","          name     open     high      low    close        volume        market  \n","0      Bitcoin   135.30   135.98   132.10   134.21  0.000000e+00  1.500520e+09  \n","2      Bitcoin   134.44   147.49   134.00   144.54  0.000000e+00  1.491160e+09  \n","4      Bitcoin   144.00   146.93   134.05   139.00  0.000000e+00  1.597780e+09  \n","6      Bitcoin   139.00   139.89   107.72   116.99  0.000000e+00  1.542820e+09  \n","8      Bitcoin   116.38   125.60    92.28   105.21  0.000000e+00  1.292190e+09  \n","...        ...      ...      ...      ...      ...           ...           ...  \n","37245  Bitcoin  7536.72  7695.83  7497.26  7643.45  4.939300e+09  1.286450e+11  \n","37315  Bitcoin  7632.09  7754.89  7613.04  7720.25  4.851760e+09  1.302880e+11  \n","37385  Bitcoin  7722.53  7753.82  7474.04  7514.47  4.993170e+09  1.318470e+11  \n","37455  Bitcoin  7500.90  7643.23  7397.00  7633.76  4.961740e+09  1.280810e+11  \n","37525  Bitcoin  7625.97  7680.43  7502.01  7653.98  4.692260e+09  1.302330e+11  \n","\n","[1866 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-7daf2ab9-a7e6-467a-9e6f-937acb2e9e86\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.30</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.30</td>\n","      <td>135.98</td>\n","      <td>132.10</td>\n","      <td>134.21</td>\n","      <td>0.000000e+00</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.44</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.44</td>\n","      <td>147.49</td>\n","      <td>134.00</td>\n","      <td>144.54</td>\n","      <td>0.000000e+00</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.00</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.00</td>\n","      <td>146.93</td>\n","      <td>134.05</td>\n","      <td>139.00</td>\n","      <td>0.000000e+00</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2013-05-01</td>\n","      <td>139.00</td>\n","      <td>55176.0</td>\n","      <td>1.206825e+08</td>\n","      <td>83564.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>139.00</td>\n","      <td>139.89</td>\n","      <td>107.72</td>\n","      <td>116.99</td>\n","      <td>0.000000e+00</td>\n","      <td>1.542820e+09</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2013-05-02</td>\n","      <td>116.38</td>\n","      <td>55295.0</td>\n","      <td>9.337533e+07</td>\n","      <td>81920.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>116.38</td>\n","      <td>125.60</td>\n","      <td>92.28</td>\n","      <td>105.21</td>\n","      <td>0.000000e+00</td>\n","      <td>1.292190e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37245</th>\n","      <td>2018-06-02</td>\n","      <td>7536.72</td>\n","      <td>174345.0</td>\n","      <td>4.151723e+09</td>\n","      <td>521910.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7536.72</td>\n","      <td>7695.83</td>\n","      <td>7497.26</td>\n","      <td>7643.45</td>\n","      <td>4.939300e+09</td>\n","      <td>1.286450e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37315</th>\n","      <td>2018-06-03</td>\n","      <td>7632.09</td>\n","      <td>163280.0</td>\n","      <td>4.477652e+09</td>\n","      <td>531463.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7632.09</td>\n","      <td>7754.89</td>\n","      <td>7613.04</td>\n","      <td>7720.25</td>\n","      <td>4.851760e+09</td>\n","      <td>1.302880e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37385</th>\n","      <td>2018-06-04</td>\n","      <td>7722.53</td>\n","      <td>209733.0</td>\n","      <td>7.925997e+09</td>\n","      <td>702904.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7722.53</td>\n","      <td>7753.82</td>\n","      <td>7474.04</td>\n","      <td>7514.47</td>\n","      <td>4.993170e+09</td>\n","      <td>1.318470e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37455</th>\n","      <td>2018-06-05</td>\n","      <td>7500.90</td>\n","      <td>212726.0</td>\n","      <td>5.821974e+09</td>\n","      <td>655694.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7500.90</td>\n","      <td>7643.23</td>\n","      <td>7397.00</td>\n","      <td>7633.76</td>\n","      <td>4.961740e+09</td>\n","      <td>1.280810e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37525</th>\n","      <td>2018-06-06</td>\n","      <td>7625.97</td>\n","      <td>206270.0</td>\n","      <td>5.055067e+09</td>\n","      <td>651145.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7625.97</td>\n","      <td>7680.43</td>\n","      <td>7502.01</td>\n","      <td>7653.98</td>\n","      <td>4.692260e+09</td>\n","      <td>1.302330e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1866 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7daf2ab9-a7e6-467a-9e6f-937acb2e9e86')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7daf2ab9-a7e6-467a-9e6f-937acb2e9e86 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7daf2ab9-a7e6-467a-9e6f-937acb2e9e86');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":114}]},{"cell_type":"code","source":["money_mask = ((coins['price'] > 18000) | (coins['market'] > 200_000))\n","coins[money_mask & (coins['symbol'] == 'BTC')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":661},"id":"kubMrGNu27_w","executionInfo":{"status":"ok","timestamp":1666025529513,"user_tz":-180,"elapsed":264,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"447efce6-3c4b-4f88-c7ce-0136b55f2727"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date    price   txCount      txVolume  activeAddresses symbol  \\\n","0      2013-04-28   135.30   41702.0  6.879868e+07         117984.0    BTC   \n","2      2013-04-29   134.44   51602.0  1.138128e+08          86925.0    BTC   \n","4      2013-04-30   144.00   47450.0  8.426632e+07          76871.0    BTC   \n","6      2013-05-01   139.00   55176.0  1.206825e+08          83564.0    BTC   \n","8      2013-05-02   116.38   55295.0  9.337533e+07          81920.0    BTC   \n","...           ...      ...       ...           ...              ...    ...   \n","37245  2018-06-02  7536.72  174345.0  4.151723e+09         521910.0    BTC   \n","37315  2018-06-03  7632.09  163280.0  4.477652e+09         531463.0    BTC   \n","37385  2018-06-04  7722.53  209733.0  7.925997e+09         702904.0    BTC   \n","37455  2018-06-05  7500.90  212726.0  5.821974e+09         655694.0    BTC   \n","37525  2018-06-06  7625.97  206270.0  5.055067e+09         651145.0    BTC   \n","\n","          name     open     high      low    close        volume        market  \n","0      Bitcoin   135.30   135.98   132.10   134.21  0.000000e+00  1.500520e+09  \n","2      Bitcoin   134.44   147.49   134.00   144.54  0.000000e+00  1.491160e+09  \n","4      Bitcoin   144.00   146.93   134.05   139.00  0.000000e+00  1.597780e+09  \n","6      Bitcoin   139.00   139.89   107.72   116.99  0.000000e+00  1.542820e+09  \n","8      Bitcoin   116.38   125.60    92.28   105.21  0.000000e+00  1.292190e+09  \n","...        ...      ...      ...      ...      ...           ...           ...  \n","37245  Bitcoin  7536.72  7695.83  7497.26  7643.45  4.939300e+09  1.286450e+11  \n","37315  Bitcoin  7632.09  7754.89  7613.04  7720.25  4.851760e+09  1.302880e+11  \n","37385  Bitcoin  7722.53  7753.82  7474.04  7514.47  4.993170e+09  1.318470e+11  \n","37455  Bitcoin  7500.90  7643.23  7397.00  7633.76  4.961740e+09  1.280810e+11  \n","37525  Bitcoin  7625.97  7680.43  7502.01  7653.98  4.692260e+09  1.302330e+11  \n","\n","[1866 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-c1bb8c6e-8504-46a3-a8ec-396faccb6fc9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.30</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.30</td>\n","      <td>135.98</td>\n","      <td>132.10</td>\n","      <td>134.21</td>\n","      <td>0.000000e+00</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.44</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.44</td>\n","      <td>147.49</td>\n","      <td>134.00</td>\n","      <td>144.54</td>\n","      <td>0.000000e+00</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.00</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.00</td>\n","      <td>146.93</td>\n","      <td>134.05</td>\n","      <td>139.00</td>\n","      <td>0.000000e+00</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2013-05-01</td>\n","      <td>139.00</td>\n","      <td>55176.0</td>\n","      <td>1.206825e+08</td>\n","      <td>83564.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>139.00</td>\n","      <td>139.89</td>\n","      <td>107.72</td>\n","      <td>116.99</td>\n","      <td>0.000000e+00</td>\n","      <td>1.542820e+09</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2013-05-02</td>\n","      <td>116.38</td>\n","      <td>55295.0</td>\n","      <td>9.337533e+07</td>\n","      <td>81920.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>116.38</td>\n","      <td>125.60</td>\n","      <td>92.28</td>\n","      <td>105.21</td>\n","      <td>0.000000e+00</td>\n","      <td>1.292190e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37245</th>\n","      <td>2018-06-02</td>\n","      <td>7536.72</td>\n","      <td>174345.0</td>\n","      <td>4.151723e+09</td>\n","      <td>521910.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7536.72</td>\n","      <td>7695.83</td>\n","      <td>7497.26</td>\n","      <td>7643.45</td>\n","      <td>4.939300e+09</td>\n","      <td>1.286450e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37315</th>\n","      <td>2018-06-03</td>\n","      <td>7632.09</td>\n","      <td>163280.0</td>\n","      <td>4.477652e+09</td>\n","      <td>531463.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7632.09</td>\n","      <td>7754.89</td>\n","      <td>7613.04</td>\n","      <td>7720.25</td>\n","      <td>4.851760e+09</td>\n","      <td>1.302880e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37385</th>\n","      <td>2018-06-04</td>\n","      <td>7722.53</td>\n","      <td>209733.0</td>\n","      <td>7.925997e+09</td>\n","      <td>702904.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7722.53</td>\n","      <td>7753.82</td>\n","      <td>7474.04</td>\n","      <td>7514.47</td>\n","      <td>4.993170e+09</td>\n","      <td>1.318470e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37455</th>\n","      <td>2018-06-05</td>\n","      <td>7500.90</td>\n","      <td>212726.0</td>\n","      <td>5.821974e+09</td>\n","      <td>655694.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7500.90</td>\n","      <td>7643.23</td>\n","      <td>7397.00</td>\n","      <td>7633.76</td>\n","      <td>4.961740e+09</td>\n","      <td>1.280810e+11</td>\n","    </tr>\n","    <tr>\n","      <th>37525</th>\n","      <td>2018-06-06</td>\n","      <td>7625.97</td>\n","      <td>206270.0</td>\n","      <td>5.055067e+09</td>\n","      <td>651145.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>7625.97</td>\n","      <td>7680.43</td>\n","      <td>7502.01</td>\n","      <td>7653.98</td>\n","      <td>4.692260e+09</td>\n","      <td>1.302330e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1866 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1bb8c6e-8504-46a3-a8ec-396faccb6fc9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c1bb8c6e-8504-46a3-a8ec-396faccb6fc9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c1bb8c6e-8504-46a3-a8ec-396faccb6fc9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":117}]},{"cell_type":"markdown","metadata":{"id":"IsOKQxuXYdet"},"source":["Основное назначение получающихся булевых колонок в том, что они могут быть использованы как индексирующий объект. Эдакий продвинутый slicing для колонок и таблиц."]},{"cell_type":"code","metadata":{"id":"zM4nAtXYYdet","colab":{"base_uri":"https://localhost:8080/","height":641},"executionInfo":{"status":"ok","timestamp":1666025385551,"user_tz":-180,"elapsed":271,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"088714d5-c4fc-461c-e8a7-e713ff258d6f"},"source":["# Выбрать из таблицы записи когда цена биткоина была меньше 100 USD\n","coins[(coins['price'] < 100) & (coins['symbol'] == 'BTC')]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           date  price  txCount      txVolume  activeAddresses symbol  \\\n","12   2013-05-04  98.10  50102.0  3.896570e+07          69959.0    BTC   \n","98   2013-06-16  99.80  42781.0  4.696943e+07          48785.0    BTC   \n","100  2013-06-17  99.90  45798.0  5.455223e+07          56902.0    BTC   \n","124  2013-06-29  94.66  36376.0  4.519440e+07          60980.0    BTC   \n","126  2013-06-30  95.00  30800.0  3.584930e+07          50485.0    BTC   \n","..          ...    ...      ...           ...              ...    ...   \n","176  2013-07-25  94.50  42384.0  7.153660e+07          66440.0    BTC   \n","178  2013-07-26  96.95  37209.0  7.056459e+07          62558.0    BTC   \n","180  2013-07-27  96.02  36711.0  4.158844e+07          52438.0    BTC   \n","182  2013-07-28  94.40  37134.0  5.463939e+07          49179.0    BTC   \n","184  2013-07-29  98.60  41634.0  7.030931e+07          67473.0    BTC   \n","\n","        name   open    high    low   close  volume        market  \n","12   Bitcoin  98.10  115.00  92.50  112.50     0.0  1.089890e+09  \n","98   Bitcoin  99.80  101.60  98.95   99.51     0.0  1.127120e+09  \n","100  Bitcoin  99.90  102.21  99.00  101.70     0.0  1.128720e+09  \n","124  Bitcoin  94.66   99.99  93.00   94.99     0.0  1.074010e+09  \n","126  Bitcoin  95.00   98.12  94.22   96.61     0.0  1.078260e+09  \n","..       ...    ...     ...    ...     ...     ...           ...  \n","176  Bitcoin  94.50   97.33  93.87   96.90     0.0  1.082800e+09  \n","178  Bitcoin  96.95   97.47  96.00   96.02     0.0  1.111160e+09  \n","180  Bitcoin  96.02   97.00  93.00   94.12     0.0  1.100900e+09  \n","182  Bitcoin  94.40  100.58  94.00   99.76     0.0  1.082750e+09  \n","184  Bitcoin  98.60  102.50  98.45  101.20     0.0  1.131340e+09  \n","\n","[34 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-6718be19-de79-47e3-aae6-066230893431\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>12</th>\n","      <td>2013-05-04</td>\n","      <td>98.10</td>\n","      <td>50102.0</td>\n","      <td>3.896570e+07</td>\n","      <td>69959.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>98.10</td>\n","      <td>115.00</td>\n","      <td>92.50</td>\n","      <td>112.50</td>\n","      <td>0.0</td>\n","      <td>1.089890e+09</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>2013-06-16</td>\n","      <td>99.80</td>\n","      <td>42781.0</td>\n","      <td>4.696943e+07</td>\n","      <td>48785.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>99.80</td>\n","      <td>101.60</td>\n","      <td>98.95</td>\n","      <td>99.51</td>\n","      <td>0.0</td>\n","      <td>1.127120e+09</td>\n","    </tr>\n","    <tr>\n","      <th>100</th>\n","      <td>2013-06-17</td>\n","      <td>99.90</td>\n","      <td>45798.0</td>\n","      <td>5.455223e+07</td>\n","      <td>56902.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>99.90</td>\n","      <td>102.21</td>\n","      <td>99.00</td>\n","      <td>101.70</td>\n","      <td>0.0</td>\n","      <td>1.128720e+09</td>\n","    </tr>\n","    <tr>\n","      <th>124</th>\n","      <td>2013-06-29</td>\n","      <td>94.66</td>\n","      <td>36376.0</td>\n","      <td>4.519440e+07</td>\n","      <td>60980.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>94.66</td>\n","      <td>99.99</td>\n","      <td>93.00</td>\n","      <td>94.99</td>\n","      <td>0.0</td>\n","      <td>1.074010e+09</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>2013-06-30</td>\n","      <td>95.00</td>\n","      <td>30800.0</td>\n","      <td>3.584930e+07</td>\n","      <td>50485.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>95.00</td>\n","      <td>98.12</td>\n","      <td>94.22</td>\n","      <td>96.61</td>\n","      <td>0.0</td>\n","      <td>1.078260e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>2013-07-25</td>\n","      <td>94.50</td>\n","      <td>42384.0</td>\n","      <td>7.153660e+07</td>\n","      <td>66440.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>94.50</td>\n","      <td>97.33</td>\n","      <td>93.87</td>\n","      <td>96.90</td>\n","      <td>0.0</td>\n","      <td>1.082800e+09</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>2013-07-26</td>\n","      <td>96.95</td>\n","      <td>37209.0</td>\n","      <td>7.056459e+07</td>\n","      <td>62558.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>96.95</td>\n","      <td>97.47</td>\n","      <td>96.00</td>\n","      <td>96.02</td>\n","      <td>0.0</td>\n","      <td>1.111160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>2013-07-27</td>\n","      <td>96.02</td>\n","      <td>36711.0</td>\n","      <td>4.158844e+07</td>\n","      <td>52438.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>96.02</td>\n","      <td>97.00</td>\n","      <td>93.00</td>\n","      <td>94.12</td>\n","      <td>0.0</td>\n","      <td>1.100900e+09</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>2013-07-28</td>\n","      <td>94.40</td>\n","      <td>37134.0</td>\n","      <td>5.463939e+07</td>\n","      <td>49179.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>94.40</td>\n","      <td>100.58</td>\n","      <td>94.00</td>\n","      <td>99.76</td>\n","      <td>0.0</td>\n","      <td>1.082750e+09</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>2013-07-29</td>\n","      <td>98.60</td>\n","      <td>41634.0</td>\n","      <td>7.030931e+07</td>\n","      <td>67473.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>98.60</td>\n","      <td>102.50</td>\n","      <td>98.45</td>\n","      <td>101.20</td>\n","      <td>0.0</td>\n","      <td>1.131340e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>34 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6718be19-de79-47e3-aae6-066230893431')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6718be19-de79-47e3-aae6-066230893431 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6718be19-de79-47e3-aae6-066230893431');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["coins['symbol'] == 'LTC'"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dwi79AgCw0GH","executionInfo":{"status":"ok","timestamp":1666016781575,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a4308643-2b8e-4884-8a06-6aee76b098e5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        False\n","1         True\n","2        False\n","3         True\n","4        False\n","         ...  \n","37583    False\n","37584    False\n","37585    False\n","37586    False\n","37587    False\n","Name: symbol, Length: 37588, dtype: bool"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["coins['txCount']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mzdcqnHkw4Yf","executionInfo":{"status":"ok","timestamp":1666016781975,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9c2339aa-925a-4008-ece5-51edb0e1bf2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        41702.0\n","1         9174.0\n","2        51602.0\n","3         9275.0\n","4        47450.0\n","          ...   \n","37583     4830.0\n","37584     7205.0\n","37585    10687.0\n","37586     1313.0\n","37587      795.0\n","Name: txCount, Length: 37588, dtype: float64"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","metadata":{"id":"9Cqcpb-NYdeu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666025430038,"user_tz":-180,"elapsed":292,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"844ebd80-4899-4319-c9c1-479239f66db5"},"source":["# Количество транзакций лайткойна\n","seria = coins['txCount'][coins['symbol'] == 'LTC']\n","seria"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1         9174.0\n","3         9275.0\n","5         9099.0\n","7         8990.0\n","9         8031.0\n","          ...   \n","37277    22879.0\n","37347    22155.0\n","37417    24326.0\n","37487    25172.0\n","37557    25346.0\n","Name: txCount, Length: 1866, dtype: float64"]},"metadata":{},"execution_count":116}]},{"cell_type":"markdown","metadata":{"id":"esAgc7uJYdeu"},"source":["**Задание**: У какой монеты была самая высокая цена?"]},{"cell_type":"code","metadata":{"id":"YEEN7LpEYdeu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666025690815,"user_tz":-180,"elapsed":301,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b9053311-019e-48c6-f1c5-a498b76e1c0f"},"source":["# your code here\n","max_price = coins['price'].max()\n","max_price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["19475.8"]},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["max_mask = coins['price'] == max_price\n","max_mask"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5IOkL6jZ3rE-","executionInfo":{"status":"ok","timestamp":1666025744414,"user_tz":-180,"elapsed":293,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"290b6a96-126a-4e63-e83b-fa76d49bf1ee"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        False\n","1        False\n","2        False\n","3        False\n","4        False\n","         ...  \n","37583    False\n","37584    False\n","37585    False\n","37586    False\n","37587    False\n","Name: price, Length: 37588, dtype: bool"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["coins[max_mask]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"AZ-bFrSZ338M","executionInfo":{"status":"ok","timestamp":1666025761055,"user_tz":-180,"elapsed":682,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3f29e23a-221b-48ce-c187-273030b91439"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date    price   txCount      txVolume  activeAddresses symbol  \\\n","25971  2017-12-17  19475.8  391725.0  3.746920e+10        1176110.0    BTC   \n","\n","          name     open     high      low    close        volume        market  \n","25971  Bitcoin  19475.8  20089.0  18974.1  19140.8  1.331460e+10  3.261410e+11  "],"text/html":["\n","  <div id=\"df-2443013e-f121-4ed1-a623-bf04ff0e33ad\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>25971</th>\n","      <td>2017-12-17</td>\n","      <td>19475.8</td>\n","      <td>391725.0</td>\n","      <td>3.746920e+10</td>\n","      <td>1176110.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>19475.8</td>\n","      <td>20089.0</td>\n","      <td>18974.1</td>\n","      <td>19140.8</td>\n","      <td>1.331460e+10</td>\n","      <td>3.261410e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2443013e-f121-4ed1-a623-bf04ff0e33ad')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2443013e-f121-4ed1-a623-bf04ff0e33ad button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2443013e-f121-4ed1-a623-bf04ff0e33ad');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["coins['name'][max_mask]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H_th6I3438Rq","executionInfo":{"status":"ok","timestamp":1666025789280,"user_tz":-180,"elapsed":284,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b97cb3fc-6758-4d28-ddf9-ff8c47e45d7b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25971    Bitcoin\n","Name: name, dtype: object"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["coins['name'][max_mask].values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0RKmen9S4EGy","executionInfo":{"status":"ok","timestamp":1666025814565,"user_tz":-180,"elapsed":278,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2b6307db-c219-4105-a4a7-38f735ee5b83"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Bitcoin'], dtype=object)"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["list(coins['name'][max_mask].values)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QO4ymVkA4K_t","executionInfo":{"status":"ok","timestamp":1666025836809,"user_tz":-180,"elapsed":287,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"63675adb-4611-4701-a11d-af1384576b1e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Bitcoin']"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","source":["coins.loc[coins['name'][max_mask].index]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":162},"id":"Eb7lk48i4uxA","executionInfo":{"status":"ok","timestamp":1666026008632,"user_tz":-180,"elapsed":331,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1b1e8ded-083c-456d-9db2-f09690cfc506"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date    price   txCount      txVolume  activeAddresses symbol  \\\n","25971  2017-12-17  19475.8  391725.0  3.746920e+10        1176110.0    BTC   \n","\n","          name     open     high      low    close        volume        market  \n","25971  Bitcoin  19475.8  20089.0  18974.1  19140.8  1.331460e+10  3.261410e+11  "],"text/html":["\n","  <div id=\"df-0d6d7fcd-b2b9-46b1-8722-5348667a3b1a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>25971</th>\n","      <td>2017-12-17</td>\n","      <td>19475.8</td>\n","      <td>391725.0</td>\n","      <td>3.746920e+10</td>\n","      <td>1176110.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>19475.8</td>\n","      <td>20089.0</td>\n","      <td>18974.1</td>\n","      <td>19140.8</td>\n","      <td>1.331460e+10</td>\n","      <td>3.261410e+11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d6d7fcd-b2b9-46b1-8722-5348667a3b1a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0d6d7fcd-b2b9-46b1-8722-5348667a3b1a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0d6d7fcd-b2b9-46b1-8722-5348667a3b1a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":131}]},{"cell_type":"code","source":["coins['name'][max_mask].values.tolist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GeqmyUnW4N9w","executionInfo":{"status":"ok","timestamp":1666025850266,"user_tz":-180,"elapsed":246,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9c28f85a-471d-4cc7-9390-3db64f4b457f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Bitcoin']"]},"metadata":{},"execution_count":126}]},{"cell_type":"code","source":["coins['name'][coins['price'] == coins['price'].max()].values.tolist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pHBvfPC24SsQ","executionInfo":{"status":"ok","timestamp":1666025883793,"user_tz":-180,"elapsed":266,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9718aeac-e3d7-41cc-f63d-f6c342f30582"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Bitcoin']"]},"metadata":{},"execution_count":127}]},{"cell_type":"code","source":["coins['name'][coins['price'] == coins['price'].max()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c0N_xB0J4cgX","executionInfo":{"status":"ok","timestamp":1666025921512,"user_tz":-180,"elapsed":265,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c3ae272d-5988-4bd2-9553-a40df24469d5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["25971    Bitcoin\n","Name: name, dtype: object"]},"metadata":{},"execution_count":128}]},{"cell_type":"markdown","metadata":{"id":"kWcknom5Ydeu"},"source":["Для таблиц есть индексирование, и по строкам и по колонкам:"]},{"cell_type":"code","metadata":{"id":"bXBS2Sw2Ydeu","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666026197966,"user_tz":-180,"elapsed":1100,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"23236aa0-3838-4e53-9085-e6b53f03168c"},"source":["# Выбрать из таблицы максимальную цену и объем торгов за дни когда цена DOGE была выше 1 цента\n","coins.loc[\n","    (coins['symbol'] == 'DOGE') & (coins['price'] > 0.01),\n","    ['high', 'volume']\n","]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           high       volume\n","27257  0.015788  283717000.0\n","27322  0.018773  288184000.0\n","27387  0.017664  235114000.0\n","27452  0.015569  115255000.0\n","27517  0.013560  100243000.0\n","27582  0.013153   62722000.0\n","27647  0.013339   56971300.0\n","27712  0.013653   55890600.0\n","27777  0.013187   65899000.0\n","27842  0.011779   62765500.0"],"text/html":["\n","  <div id=\"df-a67f30eb-28da-47ce-9574-a9f222839aee\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>high</th>\n","      <th>volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>27257</th>\n","      <td>0.015788</td>\n","      <td>283717000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27322</th>\n","      <td>0.018773</td>\n","      <td>288184000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27387</th>\n","      <td>0.017664</td>\n","      <td>235114000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27452</th>\n","      <td>0.015569</td>\n","      <td>115255000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27517</th>\n","      <td>0.013560</td>\n","      <td>100243000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27582</th>\n","      <td>0.013153</td>\n","      <td>62722000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27647</th>\n","      <td>0.013339</td>\n","      <td>56971300.0</td>\n","    </tr>\n","    <tr>\n","      <th>27712</th>\n","      <td>0.013653</td>\n","      <td>55890600.0</td>\n","    </tr>\n","    <tr>\n","      <th>27777</th>\n","      <td>0.013187</td>\n","      <td>65899000.0</td>\n","    </tr>\n","    <tr>\n","      <th>27842</th>\n","      <td>0.011779</td>\n","      <td>62765500.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a67f30eb-28da-47ce-9574-a9f222839aee')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a67f30eb-28da-47ce-9574-a9f222839aee button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a67f30eb-28da-47ce-9574-a9f222839aee');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":133}]},{"cell_type":"markdown","metadata":{"id":"14nb-5mjYdev"},"source":["**Поздравляем!** Вы научились делать простейшие выборки из данных и немного их преобразовывать.\n","\n","Не забывайте  использовать `help()` и tab-completion чтобы узнать больше о возможностях `pandas`.\n","\n","**Правило работы с `pandas`:**\n","\n",">Если вам очень хочется пройтись циклом по таблице и что-то сделать с данными, очень вероятно, что вы делаете что-то неправильно и, скорее всего, в pandas есть инструмент для вашей задачи.\n","\n","Оставшаяся часть ноутбука посвящена перечислению фич, и может показаться скучной, но не зная этих методов вы каждый раз будете переизобретать велосипед."]},{"cell_type":"markdown","metadata":{"id":"XJxlcleTYdew"},"source":["# Типы данных в pandas"]},{"cell_type":"markdown","metadata":{"id":"PE-3j83wYdew"},"source":["В `pandas` есть два основных типа данных:\n","\n","- `pandas.Series`\n","- `pandas.DataFrame`"]},{"cell_type":"markdown","metadata":{"id":"9lKAwO0qYdew"},"source":["## `pandas.Series`"]},{"cell_type":"markdown","metadata":{"id":"JCtzZh7uYdew"},"source":["Про `pandas.Series` стоит думать как про одномерный массив фиксированного размера из данных одного типа.\n","\n","В отличие от массивов доступ к элементам может быть по нечисловому индексу. Индекс стоит понимать как ключи.\n","\n","Объекты типа `pandas.Series` очень часто используются как возвращаемые значения в `pandas`."]},{"cell_type":"code","metadata":{"id":"1Zk2m8PvYdew","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027099734,"user_tz":-180,"elapsed":747,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1e349c6c-1446-4598-eb4e-466dc668f02c"},"source":["# pandas.Series хранящий буквы со стандартной индексацией\n","pd.Series(data=['BTC', 'LTC', 'DOGE', 'DASH'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     BTC\n","1     LTC\n","2    DOGE\n","3    DASH\n","dtype: object"]},"metadata":{},"execution_count":135}]},{"cell_type":"code","metadata":{"id":"KKRXEzJoYdex","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027144392,"user_tz":-180,"elapsed":364,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2f9c5d4a-c384-4728-fc82-42a1bb15b41e"},"source":["# pandas.Series хранящий числа типа str cо специальным индексом\n","pd.Series(data=['BTC', 'ETH', 'XRP'],\n","          index=['first_coin', 'second_coin', 'third_coin'], dtype=str)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["first_coin     BTC\n","second_coin    ETH\n","third_coin     XRP\n","dtype: object"]},"metadata":{},"execution_count":136}]},{"cell_type":"code","metadata":{"id":"PYuu6kTjYdex","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649270160121,"user_tz":-180,"elapsed":349,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"0e78f797-175b-42df-d832-62c254d98438"},"source":["# pandas.Series созданный из словаря\n","pd.Series({'first_coin': 'BTC', 'second_coin': 'ETH', 'third_coin': 'XRP'})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["first_coin     BTC\n","second_coin    ETH\n","third_coin     XRP\n","dtype: object"]},"metadata":{},"execution_count":217}]},{"cell_type":"code","metadata":{"id":"MC9QFdFvYdex","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027211644,"user_tz":-180,"elapsed":392,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"56793d73-8e9e-4ab0-c832-8c3b1cd44200"},"source":["# Стандартная индексация\n","sequence = pd.Series(data=['!', 'the', 'Moon', 'To'])\n","sequence"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       !\n","1     the\n","2    Moon\n","3      To\n","dtype: object"]},"metadata":{},"execution_count":138}]},{"cell_type":"code","metadata":{"id":"GvF3rfqbYdex","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027211645,"user_tz":-180,"elapsed":9,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3c01fe01-1254-4394-adc4-bc15e9ee3b53"},"source":["sequence[[3, 1, 2, 0, 0, 0]]  # Доступ к нескольким элементам по их позициям"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3      To\n","1     the\n","2    Moon\n","0       !\n","0       !\n","0       !\n","dtype: object"]},"metadata":{},"execution_count":139}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"x4Ev-Pte5xQy","executionInfo":{"status":"error","timestamp":1666027231174,"user_tz":-180,"elapsed":817,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"482c2480-a277-4078-a225-29483b0e20ec"},"source":["sequence[3, 1, 2, 0, 0, 0]"],"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-140-621a7d24e724>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msequence\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    964\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    965\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 966\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_with\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    967\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    968\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_get_with\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_with\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    979\u001b[0m             )\n\u001b[1;32m    980\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 981\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_values_tuple\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    982\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    983\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36m_get_values_tuple\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   1014\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1015\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mMultiIndex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1016\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"key of type tuple not found and not a MultiIndex\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1017\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1018\u001b[0m         \u001b[0;31m# If key is contained, would have returned by now\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'key of type tuple not found and not a MultiIndex'"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TCRs39nt6F1v","executionInfo":{"status":"ok","timestamp":1666027244790,"user_tz":-180,"elapsed":240,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8eae9340-6bca-40bb-d584-646026c6b85f"},"source":["sequence"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       !\n","1     the\n","2    Moon\n","3      To\n","dtype: object"]},"metadata":{},"execution_count":141}]},{"cell_type":"code","metadata":{"id":"5bCtImZdYdey","colab":{"base_uri":"https://localhost:8080/","height":36},"executionInfo":{"status":"ok","timestamp":1649270326904,"user_tz":-180,"elapsed":342,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"9783255f-f0d4-4fd6-c271-a6860fe62ed1"},"source":["sequence[3]  # Доступ к элементу по позиции"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'To'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":223}]},{"cell_type":"code","metadata":{"id":"bN5rxej_Ydey"},"source":["# Спец индексация\n","sequence = pd.Series(data=['!', 'the', 'Moon', 'To'],\n","                     index=['04-11-2018', '02-11-2018', '03-11-2018', '01-11-2018'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zFovfb6fYdey","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027280535,"user_tz":-180,"elapsed":385,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fe735ab9-3589-440f-b604-3ae81a1099c8"},"source":["sequence[['01-11-2018', '02-11-2018', '03-11-2018', '04-11-2018']]  # Доступ к нескольким элементам по их индексам"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["01-11-2018      To\n","02-11-2018     the\n","03-11-2018    Moon\n","04-11-2018       !\n","dtype: object"]},"metadata":{},"execution_count":143}]},{"cell_type":"code","metadata":{"id":"5f7dAdwuYdey","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1666027297445,"user_tz":-180,"elapsed":396,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c7798de9-f028-4984-cd50-527b188c059e"},"source":["sequence['01-11-2018']  # Доступ к элементу по индексу"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'To'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":144}]},{"cell_type":"code","metadata":{"id":"mX5URaCRYdez"},"source":["# Чтобы не засорять global namespace\n","del sequence"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"G3L-_bEAYdez"},"source":["## `pandas.DataFrame`"]},{"cell_type":"markdown","metadata":{"id":"h1K0rAXHYdez"},"source":["Данные типа `pandas.DataFrame` - это двумерный массив (переменного размера) разнородных данных (но однородных по колонкам).\n","\n","Лучше всего предстаставлять себе `pandas.DataFrame` как набор колонок, где каждая колонка это `pandas.Series`."]},{"cell_type":"code","metadata":{"id":"MNGEkYsaYdez","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666027377240,"user_tz":-180,"elapsed":486,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"df8d0134-3094-4f78-cb3a-9e4fbf5cf3ee"},"source":["# Создание простейшей таблицы\n","pd.DataFrame(data=['BTC', 'LTC', 'XRP'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     0\n","0  BTC\n","1  LTC\n","2  XRP"],"text/html":["\n","  <div id=\"df-b3d893a2-672c-4531-85dd-a75412315cdf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>XRP</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3d893a2-672c-4531-85dd-a75412315cdf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b3d893a2-672c-4531-85dd-a75412315cdf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b3d893a2-672c-4531-85dd-a75412315cdf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":146}]},{"cell_type":"code","metadata":{"id":"h4ap5XT-Ydez","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666027427916,"user_tz":-180,"elapsed":328,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"59ee936d-e86c-4e44-bce2-bc4a766ccd06"},"source":["# Cоздание таблицы с именами колонок\n","pd.DataFrame(data=[['BTC', 10000],['LTC', 200],['XRP', 1]],\n","             columns=['symbol', 'price'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  price\n","0    BTC  10000\n","1    LTC    200\n","2    XRP      1"],"text/html":["\n","  <div id=\"df-9a5b02a6-fa0c-465b-98dc-325f38e58b6c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9a5b02a6-fa0c-465b-98dc-325f38e58b6c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9a5b02a6-fa0c-465b-98dc-325f38e58b6c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9a5b02a6-fa0c-465b-98dc-325f38e58b6c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":147}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yBDDdCPU-JPt","executionInfo":{"status":"ok","timestamp":1666027678167,"user_tz":-180,"elapsed":335,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e143e1f2-78d0-4202-f179-9fe5de3e4e14"},"source":["import datetime\n","type(datetime.datetime.now())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime.datetime"]},"metadata":{},"execution_count":148}]},{"cell_type":"code","source":["datetime.datetime.now()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IMBNk2_U4Spf","executionInfo":{"status":"ok","timestamp":1666027686861,"user_tz":-180,"elapsed":272,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"424b4069-3527-4985-8e37-bbab320dc869"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["datetime.datetime(2022, 10, 17, 17, 28, 6, 397031)"]},"metadata":{},"execution_count":149}]},{"cell_type":"code","metadata":{"id":"IQN2iTMdYde0","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666027866513,"user_tz":-180,"elapsed":343,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"acc3429e-c2b0-48a1-e1fe-87e2e73f9c9d"},"source":["# Cоздание таблицы с именами колонок и указанием индекса\n","pd.DataFrame(\n","    data=[['BTC', 10000],['LTC', 200],['XRP', 1]],\n","    columns=['symbol', 'price'],\n","    # DatetimeIndex - это специальный тип данных для индексов содержащих время\n","    index=pd.DatetimeIndex(['01-11-2018', '03-11-2018', '23-08-2018'])\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-d2a81757-f722-40e3-8fc0-6312d02c355f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2a81757-f722-40e3-8fc0-6312d02c355f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d2a81757-f722-40e3-8fc0-6312d02c355f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d2a81757-f722-40e3-8fc0-6312d02c355f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":153}]},{"cell_type":"code","metadata":{"id":"rOq2YhkjYde0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713264126100,"user_tz":-180,"elapsed":326,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"0343a2f4-39fd-4189-f59b-8ef87bb7c33f"},"source":["# Создание по готовым pandas.Series\n","pd.DataFrame({\n","    'symbol': pd.Series(data=['BTC','LTC'], index=pd.DatetimeIndex(['03-11-2018', '01-11-2018'])),\n","    'price': pd.Series(data=[10000, 200], index=pd.DatetimeIndex(['01-11-2018', '03-11-2018']))\n","}).axes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[DatetimeIndex(['2018-01-11', '2018-03-11'], dtype='datetime64[ns]', freq=None),\n"," Index(['symbol', 'price'], dtype='object')]"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"4NUG6Lj-Yde0"},"source":["Некоторые функции в `pandas` одинаково применимы как к строкам, так и к столбцам.\n","\n","В этом случае, в функцию можно передать аргумент `axis`:\n","- значение `0` (по умолчанию) - работа по строкам\n","- значение `1` - работа по колонкам"]},{"cell_type":"markdown","metadata":{"id":"fJ-R0JZ-Yde0"},"source":["# Базовые методы `pandas.Series`"]},{"cell_type":"markdown","metadata":{"id":"14lw7p-RYde1"},"source":["Посмотрим на самые базовые методы класса `pandas.Series`:"]},{"cell_type":"code","metadata":{"id":"UW7_ZIHrYde1"},"source":["sequence = pd.Series(data=['BTC', 'LTC', 'DOGE', 'DASH'], index=['leader', 'alternative', 'joke', 'bouncer'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HVfuYsOD8Rbz","executionInfo":{"status":"ok","timestamp":1666027968850,"user_tz":-180,"elapsed":408,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8641f8cc-558d-418a-fe5d-cb7e9a29f785"},"source":["sequence"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leader          BTC\n","alternative     LTC\n","joke           DOGE\n","bouncer        DASH\n","dtype: object"]},"metadata":{},"execution_count":156}]},{"cell_type":"code","metadata":{"id":"4k374NQZYde1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666027970845,"user_tz":-180,"elapsed":250,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8dd62cb9-710c-4224-9343-0775196d3c11"},"source":["# Индекс наших данных\n","sequence.axes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Index(['leader', 'alternative', 'joke', 'bouncer'], dtype='object')]"]},"metadata":{},"execution_count":157}]},{"cell_type":"code","metadata":{"id":"4WyjvmcPYde1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713264178174,"user_tz":-180,"elapsed":322,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"c8435ca7-7897-452d-fa1b-dd425b7216d5"},"source":["# Тип наших данных\n","sequence.dtype"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('O')"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"zB6_siq8Yde2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649271022294,"user_tz":-180,"elapsed":392,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"8dc11b48-cc9c-4f14-8405-f07b2b8a8cec"},"source":["# Проверка на пустоту\n","sequence.empty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":242}]},{"cell_type":"code","metadata":{"id":"rjoUSGptYde2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649252314495,"user_tz":-180,"elapsed":3,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"a64c9e4a-be6e-4dbc-a66b-53d0e2879529"},"source":["# Количество размерностей. Для pandas.Series всегда 1\n","sequence.ndim"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"o5CQA9YGYde2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028032276,"user_tz":-180,"elapsed":612,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"322ebbdd-97bc-4c32-eedf-867e58d69f8d"},"source":["# Количество элементов\n","sequence.size"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":159}]},{"cell_type":"code","metadata":{"id":"-c1mYUjbYde2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028032677,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8bfd26ba-2a02-4a9c-ae1c-17f4fd997876"},"source":["# Размеры\n","sequence.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4,)"]},"metadata":{},"execution_count":160}]},{"cell_type":"code","metadata":{"id":"gGqeRoTYYde2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649252339055,"user_tz":-180,"elapsed":400,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"84b25713-b490-42cc-d326-1db17a13839d"},"source":["# Получить данные в виде numpy массива. Низкоуровневое представление с точки зрения pandas\n","sequence.values"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['BTC', 'LTC', 'DOGE', 'DASH'], dtype=object)"]},"metadata":{},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"9G3KsqOxYde3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028061149,"user_tz":-180,"elapsed":288,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"412c4306-79b1-4cba-bb32-1a442d9d7760"},"source":["# Получить первые 3 элемента\n","sequence.head(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["leader          BTC\n","alternative     LTC\n","joke           DOGE\n","dtype: object"]},"metadata":{},"execution_count":161}]},{"cell_type":"code","metadata":{"id":"AGGtVL1mYde3","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028061509,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"53b2543a-c8a2-4fe7-f7e1-946e4325f79a"},"source":["# Получить последние 2 элемента\n","sequence.tail(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["joke       DOGE\n","bouncer    DASH\n","dtype: object"]},"metadata":{},"execution_count":162}]},{"cell_type":"code","metadata":{"id":"RDqkwsAcYde3"},"source":["del sequence"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8YcWEoqFYde3"},"source":["# Базовые методы `pandas.DataFrame`"]},{"cell_type":"markdown","metadata":{"id":"OVC1v575Yde3"},"source":["Класс `DataFrame` огромен.\n","\n","Мы рассмотрим только самые часто используемые в нем методы:"]},{"cell_type":"code","metadata":{"id":"n3TKEqyRYde4","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666028121273,"user_tz":-180,"elapsed":426,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a6243a5e-2512-46e5-d1ba-4ec04b55122a"},"source":["table = pd.DataFrame(\n","    data=[['BTC', 10000],['LTC', 200],['XRP', 1]],\n","    columns=['symbol', 'price'],\n","    # DatetimeIndex - это специальный тип данных для индексов содержащих время\n","    index=pd.DatetimeIndex(['01-11-2018', '03-11-2018', '23-08-2018'])\n",")\n","table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-dd6568fc-d630-4135-9bd7-7230d034460e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd6568fc-d630-4135-9bd7-7230d034460e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dd6568fc-d630-4135-9bd7-7230d034460e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dd6568fc-d630-4135-9bd7-7230d034460e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":163}]},{"cell_type":"code","metadata":{"id":"4jaOAMP3Yde4","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1666028131372,"user_tz":-180,"elapsed":349,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6c34e9a6-c71a-4ef7-a565-c61e3fd86c76"},"source":["# Транспонировать таблицу\n","table.T"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       2018-01-11 2018-03-11 2018-08-23\n","symbol        BTC        LTC        XRP\n","price       10000        200          1"],"text/html":["\n","  <div id=\"df-a603f61d-a70c-4acb-bde6-9af9f5dcc291\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>2018-01-11</th>\n","      <th>2018-03-11</th>\n","      <th>2018-08-23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>symbol</th>\n","      <td>BTC</td>\n","      <td>LTC</td>\n","      <td>XRP</td>\n","    </tr>\n","    <tr>\n","      <th>price</th>\n","      <td>10000</td>\n","      <td>200</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a603f61d-a70c-4acb-bde6-9af9f5dcc291')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a603f61d-a70c-4acb-bde6-9af9f5dcc291 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a603f61d-a70c-4acb-bde6-9af9f5dcc291');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":164}]},{"cell_type":"code","metadata":{"id":"-WbEzk_nYde4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690040984,"user_tz":-180,"elapsed":7,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"98189a7a-4a13-4cb3-ef17-e171df3dbf3f"},"source":["# Получить индексы срок и столбцов\n","table.axes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[DatetimeIndex(['2018-01-11', '2018-03-11', '2018-08-23'], dtype='datetime64[ns]', freq=None),\n"," Index(['symbol', 'price'], dtype='object')]"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"RlMiO0SqYde4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028188988,"user_tz":-180,"elapsed":248,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b64eafa7-1523-4567-98b0-106c5e334ca0"},"source":["# Получить типы данных в колонках\n","table.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol    object\n","price      int64\n","dtype: object"]},"metadata":{},"execution_count":165}]},{"cell_type":"code","metadata":{"id":"uA_KtNj-Yde4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028208248,"user_tz":-180,"elapsed":727,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"17bc2302-1f08-4be0-cccc-c119805e7126"},"source":["# Проверка на пустоту\n","table.empty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":166}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7stzGYJ3Bx1i","executionInfo":{"status":"ok","timestamp":1666028210941,"user_tz":-180,"elapsed":355,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"81af4133-3dae-4b7e-b65f-f2d285d358ef"},"source":["pd.DataFrame().empty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":167}]},{"cell_type":"code","metadata":{"id":"5hxMqzO7Yde5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028217011,"user_tz":-180,"elapsed":469,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"df029c99-55a6-4010-bef8-508af3e96c80"},"source":["# Размеры\n","table.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 2)"]},"metadata":{},"execution_count":168}]},{"cell_type":"code","metadata":{"id":"HtwkOycVYde5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028227581,"user_tz":-180,"elapsed":247,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"434da0d5-3eb0-4493-f4da-7b8b30a363b9"},"source":["# Количество элементов\n","table.size"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{},"execution_count":169}]},{"cell_type":"code","metadata":{"id":"Iwn3k89BYde5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690058925,"user_tz":-180,"elapsed":17,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"29cdd7dc-22ec-4d3f-bb0a-4dcdc6791cbe"},"source":["# Низкоуровневое представление таблицы\n","table.values"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([['BTC', 10000],\n","       ['LTC', 200],\n","       ['XRP', 1]], dtype=object)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"5OPDKkwcYde5","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1649690059476,"user_tz":-180,"elapsed":30,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"cc26aa89-3d3c-4162-fd54-d40a9381bd62"},"source":["# Получить первые 3 строки\n","table.head(3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-94e865f5-57f3-4f0e-bd43-03912599449c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94e865f5-57f3-4f0e-bd43-03912599449c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-94e865f5-57f3-4f0e-bd43-03912599449c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-94e865f5-57f3-4f0e-bd43-03912599449c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"M2UjbTg1Yde6","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1649690061620,"user_tz":-180,"elapsed":25,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"3d0adb64-620c-4f8a-b3ba-eb3ae2c42d98"},"source":["# Получить последние 2 строки\n","table.tail(2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-7a95a196-4901-47e8-b1ad-1b9a0ebe0b0e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a95a196-4901-47e8-b1ad-1b9a0ebe0b0e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7a95a196-4901-47e8-b1ad-1b9a0ebe0b0e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7a95a196-4901-47e8-b1ad-1b9a0ebe0b0e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"4OGCTrkUYde6"},"source":["del table"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"r7Re5zVbYde6"},"source":["# Работа со строками и столбцами"]},{"cell_type":"markdown","metadata":{"id":"wCZQj-IwYde6"},"source":["Обращаться к строкам таблицы можно по номеру или по индексу"]},{"cell_type":"code","metadata":{"id":"IhVJZ01PvVmG"},"source":["import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HO4FxPhaYde6","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1666028457632,"user_tz":-180,"elapsed":311,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"bf120189-4984-48df-9346-4fedf755bcbf"},"source":["table = pd.DataFrame(\n","    data=[['BTC', 10000],['LTC', 200],['XRP', 1],['XRP', 1], ['BTC', 9000]],\n","    columns=['symbol', 'price'],\n","    # DatetimeIndex - это специальный тип данных для индексов содержащих время\n","    index=pd.DatetimeIndex(['01-11-2018', '03-11-2018', '03-11-2018', '23-08-2018', '02-11-2018'])\n",")\n","table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-da235235-ba07-4b82-9e51-6dd3221c1178\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-da235235-ba07-4b82-9e51-6dd3221c1178')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-da235235-ba07-4b82-9e51-6dd3221c1178 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-da235235-ba07-4b82-9e51-6dd3221c1178');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":171}]},{"cell_type":"code","source":["series = table['symbol']\n","series"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WyZvVeZSZbsJ","executionInfo":{"status":"ok","timestamp":1666028476222,"user_tz":-180,"elapsed":352,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"328168c1-6b11-4084-a291-8cd399faf1ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2018-01-11    BTC\n","2018-03-11    LTC\n","2018-03-11    XRP\n","2018-08-23    XRP\n","2018-02-11    BTC\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":172}]},{"cell_type":"markdown","metadata":{"id":"aKI86JDPYde7"},"source":["## Доступ к отдельным строкам"]},{"cell_type":"markdown","source":["Pandas предоставляет огромное количество способов получения желаемых элементов (см. [документацию](https://pandas.pydata.org/docs/user_guide/indexing.html)). Поэтому мы пройдемся лишь по основам."],"metadata":{"id":"JRb54LZJWUWZ"}},{"cell_type":"markdown","source":["### Выбор одного элемента"],"metadata":{"id":"ZAiVxO3WM_VI"}},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"IQ5enrJqIZ8G","executionInfo":{"status":"ok","timestamp":1666017392423,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8e6fa70d-a93d-4e9c-8cd7-b88eb89ee1fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-dde50955-9bef-4bfa-9296-32601efe1a78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dde50955-9bef-4bfa-9296-32601efe1a78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dde50955-9bef-4bfa-9296-32601efe1a78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dde50955-9bef-4bfa-9296-32601efe1a78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["#### Метод iloc"],"metadata":{"id":"Uf3Ti31NX2PD"}},{"cell_type":"markdown","source":["Обращение по порядковому номеру строки:"],"metadata":{"id":"51lDFRcCWr0J"}},{"cell_type":"code","metadata":{"id":"_aOdJbGbYde7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028679732,"user_tz":-180,"elapsed":267,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9150a95e-3de0-42f9-c0d3-d7f7ae89012c"},"source":["table.iloc[1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol    LTC\n","price     200\n","Name: 2018-03-11 00:00:00, dtype: object"]},"metadata":{},"execution_count":173}]},{"cell_type":"code","source":["table.iloc[1, 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"HxHhB3sBYO7I","executionInfo":{"status":"ok","timestamp":1666028798021,"user_tz":-180,"elapsed":495,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ee51358f-c73b-4458-c537-54ead134a691"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'LTC'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":175}]},{"cell_type":"code","source":["series.iloc[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"72-X8mKkYXSh","executionInfo":{"status":"ok","timestamp":1666017503062,"user_tz":-180,"elapsed":12,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5a2ee877-f224-481c-8f24-b4a358ebe669"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'LTC'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["#### Метод loc"],"metadata":{"id":"3WbFHkykX5Bb"}},{"cell_type":"markdown","source":["Обращение по конкретному индексу:"],"metadata":{"id":"OK7xX-Z7Wv15"}},{"cell_type":"code","metadata":{"id":"-TD6kXF1Yde7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666028857083,"user_tz":-180,"elapsed":256,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"004af054-5707-4b50-c1c5-58b753c0dc73"},"source":["table.loc[pd.Timestamp('01-11-2018')]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol      BTC\n","price     10000\n","Name: 2018-01-11 00:00:00, dtype: object"]},"metadata":{},"execution_count":176}]},{"cell_type":"code","source":["table.loc[pd.Timestamp('01-11-2018'), 'symbol']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"O4gtaP73X8KR","executionInfo":{"status":"ok","timestamp":1666017397427,"user_tz":-180,"elapsed":13,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6cba74b5-efdb-4b4c-d859-f3e1a6c82ec3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'BTC'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["series.loc[pd.Timestamp('01-11-2018')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"fUIof3jhYCxu","executionInfo":{"status":"ok","timestamp":1666028910751,"user_tz":-180,"elapsed":638,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"69839ceb-aebb-4a60-e2a6-d6534139b98e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'BTC'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":178}]},{"cell_type":"markdown","source":["### Срезы"],"metadata":{"id":"lAo5DIfhXm5-"}},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kp4ZlkfNa2rv","executionInfo":{"status":"ok","timestamp":1666018071071,"user_tz":-180,"elapsed":245,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"37ba8d60-536c-49cf-9a39-7d6787fc3cbd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-2c7148f2-3f07-4f46-8fac-af57ca4ece87\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c7148f2-3f07-4f46-8fac-af57ca4ece87')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2c7148f2-3f07-4f46-8fac-af57ca4ece87 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2c7148f2-3f07-4f46-8fac-af57ca4ece87');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["series"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QxUiyk04ZlDc","executionInfo":{"status":"ok","timestamp":1666018071615,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e1885880-1c19-46a1-89ee-4fb1b84fcd80"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2018-01-11    BTC\n","2018-03-11    LTC\n","2018-03-11    XRP\n","2018-08-23    XRP\n","2018-02-11    BTC\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","source":["#### `[]`"],"metadata":{"id":"QKqjJOR6Y1K-"}},{"cell_type":"markdown","source":["`[]` с Series - как с одномерным массивом:"],"metadata":{"id":"GlN3h8bDZqn-"}},{"cell_type":"code","source":["series[:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PvfImuHYZvKg","executionInfo":{"status":"ok","timestamp":1666018071923,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f3ec40e4-c506-4269-83f0-55db2f2a48a7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2018-01-11    BTC\n","2018-03-11    LTC\n","2018-03-11    XRP\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","source":["`[]` с DataFrame - срезы по строкам:"],"metadata":{"id":"2qMzmLGcZxTO"}},{"cell_type":"code","source":["table[:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"nstyTP0qYMf3","executionInfo":{"status":"ok","timestamp":1666029031305,"user_tz":-180,"elapsed":292,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"de1ce552-2523-40a2-b816-767bd1029637"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1"],"text/html":["\n","  <div id=\"df-211abd7b-86e1-4f04-b1a6-eafb6c9dad59\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-211abd7b-86e1-4f04-b1a6-eafb6c9dad59')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-211abd7b-86e1-4f04-b1a6-eafb6c9dad59 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-211abd7b-86e1-4f04-b1a6-eafb6c9dad59');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":180}]},{"cell_type":"markdown","source":["#### Метод `iloc`"],"metadata":{"id":"tZwH-RMvY4vp"}},{"cell_type":"markdown","source":["`iloc` с Series - как с NumPy-массивами:"],"metadata":{"id":"_pToI6b4aGmG"}},{"cell_type":"code","source":["series.iloc[:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kgNdSyJ5YTrL","executionInfo":{"status":"ok","timestamp":1666018075830,"user_tz":-180,"elapsed":6,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"67b531a0-82b8-4934-a0b2-07b342a38770"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2018-01-11    BTC\n","2018-03-11    LTC\n","2018-03-11    XRP\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":61}]},{"cell_type":"code","source":["series.iloc[[2, 0, 1]]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h2z5fyC3aczW","executionInfo":{"status":"ok","timestamp":1666029058717,"user_tz":-180,"elapsed":353,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4f35b56a-1b25-447d-9434-2ce29953b0b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2018-03-11    XRP\n","2018-01-11    BTC\n","2018-03-11    LTC\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":181}]},{"cell_type":"markdown","source":["`iloc` с DataFrame - как с двумерным массивом:"],"metadata":{"id":"z0COdI01b-Eq"}},{"cell_type":"code","source":["table.iloc[:3]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"y4Y8nEolcEgu","executionInfo":{"status":"ok","timestamp":1666029064229,"user_tz":-180,"elapsed":473,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"68866baa-1d57-45d1-9824-364656c7dbe1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1"],"text/html":["\n","  <div id=\"df-ca759d84-fb7c-4eb2-a06e-3c17adca81c0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca759d84-fb7c-4eb2-a06e-3c17adca81c0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ca759d84-fb7c-4eb2-a06e-3c17adca81c0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ca759d84-fb7c-4eb2-a06e-3c17adca81c0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":182}]},{"cell_type":"code","source":["table.iloc[:3, :]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"BD1YnrBUcJyv","executionInfo":{"status":"ok","timestamp":1666018490160,"user_tz":-180,"elapsed":391,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"eca37ed5-8eeb-4173-f339-491568e01fcd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1"],"text/html":["\n","  <div id=\"df-fc254fd4-7c41-41a2-83b6-3cd3918ce51e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc254fd4-7c41-41a2-83b6-3cd3918ce51e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc254fd4-7c41-41a2-83b6-3cd3918ce51e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc254fd4-7c41-41a2-83b6-3cd3918ce51e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["table.iloc[:3, :1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"h7SlloDEcMHD","executionInfo":{"status":"ok","timestamp":1666029087024,"user_tz":-180,"elapsed":266,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"dd9297a0-3175-4bb1-8d01-2b570b1e044e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol\n","2018-01-11    BTC\n","2018-03-11    LTC\n","2018-03-11    XRP"],"text/html":["\n","  <div id=\"df-c98a879f-4451-4270-8769-98a98615fb16\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c98a879f-4451-4270-8769-98a98615fb16')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c98a879f-4451-4270-8769-98a98615fb16 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c98a879f-4451-4270-8769-98a98615fb16');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":183}]},{"cell_type":"markdown","source":["#### Метод `loc`"],"metadata":{"id":"LOym5dHYY76j"}},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wEsbRQ0cf5Kj","executionInfo":{"status":"ok","timestamp":1666019467158,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c23d101d-af78-4e0e-889c-70ee49c015f7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-3648441e-d40a-4ff3-862b-1c3f0deb9b01\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3648441e-d40a-4ff3-862b-1c3f0deb9b01')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3648441e-d40a-4ff3-862b-1c3f0deb9b01 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3648441e-d40a-4ff3-862b-1c3f0deb9b01');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":69}]},{"cell_type":"markdown","source":["Срезы с методом loc немного сложнее. Возможны следующие ситуации:"],"metadata":{"id":"BpgHAnGKfkJA"}},{"cell_type":"markdown","source":["- оба элемента (начальный и конечный) присутствуют, тогда получаем все элементы между ними (включая оба элемента):"],"metadata":{"id":"2hcrlc_kfvtR"}},{"cell_type":"code","source":["table.loc[pd.Timestamp('2018-01-11'):pd.Timestamp('2018-08-23')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"ga5CXBlvheu5","executionInfo":{"status":"ok","timestamp":1666029226240,"user_tz":-180,"elapsed":380,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9717bdf9-601e-43d6-9953-62e0b8ddd801"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-204d159a-10ba-4f11-a7b3-94600df71611\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-204d159a-10ba-4f11-a7b3-94600df71611')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-204d159a-10ba-4f11-a7b3-94600df71611 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-204d159a-10ba-4f11-a7b3-94600df71611');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":185}]},{"cell_type":"markdown","source":["- отсутствует как минимум один из элементов И индекс отсортирован и сравним со начальным и конечным элементами, тогда получаем все элементы по значению между границами:"],"metadata":{"id":"vB6NQXr3gc-X"}},{"cell_type":"code","source":["table.sort_index()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bdz_9Eb-hE91","executionInfo":{"status":"ok","timestamp":1666019780133,"user_tz":-180,"elapsed":12,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b173f48a-b5bd-4368-9d26-474edc00fe5f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-02-11    BTC   9000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-f5dd71a7-0971-488b-bba4-2e59faa03d2f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5dd71a7-0971-488b-bba4-2e59faa03d2f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f5dd71a7-0971-488b-bba4-2e59faa03d2f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f5dd71a7-0971-488b-bba4-2e59faa03d2f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["table.sort_index().loc[pd.Timestamp('2018-01-10'):pd.Timestamp('2018-03-12')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"n-9m61o1hKv6","executionInfo":{"status":"ok","timestamp":1666029327309,"user_tz":-180,"elapsed":271,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"37faa779-3a83-41b6-853a-6fdc4515a969"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-02-11    BTC   9000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1"],"text/html":["\n","  <div id=\"df-faa71d0e-492e-412f-aef5-40fc616bb9c9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-faa71d0e-492e-412f-aef5-40fc616bb9c9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-faa71d0e-492e-412f-aef5-40fc616bb9c9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-faa71d0e-492e-412f-aef5-40fc616bb9c9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":186}]},{"cell_type":"markdown","source":["- отсутствует как минимум один из элементов И индекс НЕ ОТСОРТИРОВАН и сравним со начальным и конечным элементами, тогда получаем ошибку:"],"metadata":{"id":"JgLZRcvUhnMP"}},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"kyGmn20Ph9wg","executionInfo":{"status":"ok","timestamp":1666029377238,"user_tz":-180,"elapsed":398,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"403ec258-fd77-4911-f368-63606ca096f3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-03-11    XRP      1\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-a78cad36-0e98-4a28-97c6-229931494580\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a78cad36-0e98-4a28-97c6-229931494580')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a78cad36-0e98-4a28-97c6-229931494580 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a78cad36-0e98-4a28-97c6-229931494580');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":187}]},{"cell_type":"code","source":["table.loc[pd.Timestamp('2018-01-10'):pd.Timestamp('2018-03-12')]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":556},"id":"F1Lyfpl5h9WM","executionInfo":{"status":"error","timestamp":1666029397670,"user_tz":-180,"elapsed":269,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b3d61b8a-3b88-4267-b146-563d0a7f94a8"},"execution_count":null,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3360\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3361\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.DatetimeEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.DatetimeEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine._get_loc_duplicates\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/index_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.index.Int64Engine._maybe_get_bool_indexer\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine._unpack_bool_indexer\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 1515542400000000000","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/datetimes.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m    702\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 703\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mIndex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    704\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3362\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3363\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3364\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: Timestamp('2018-01-10 00:00:00')","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-188-edb599f17a67>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTimestamp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'2018-01-10'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTimestamp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'2018-03-12'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m    929\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    930\u001b[0m             \u001b[0mmaybe_callable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply_if_callable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mobj\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 931\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmaybe_callable\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    932\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    933\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_is_scalar_access\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mtuple\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_getitem_axis\u001b[0;34m(self, key, axis)\u001b[0m\n\u001b[1;32m   1140\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1141\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_validate_key\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1142\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_slice_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1143\u001b[0m         \u001b[0;32melif\u001b[0m \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_bool_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1144\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getbool_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py\u001b[0m in \u001b[0;36m_get_slice_axis\u001b[0;34m(self, slice_obj, axis)\u001b[0m\n\u001b[1;32m   1174\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1175\u001b[0m         \u001b[0mlabels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1176\u001b[0;31m         \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mslice_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mslice_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice_obj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1177\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1178\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/datetimes.py\u001b[0m in \u001b[0;36mslice_indexer\u001b[0;34m(self, start, end, step, kind)\u001b[0m\n\u001b[1;32m    809\u001b[0m             \u001b[0;32mor\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mis_monotonic_increasing\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    810\u001b[0m         ):\n\u001b[0;32m--> 811\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mIndex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mslice_indexer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkind\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkind\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    812\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    813\u001b[0m         \u001b[0mmask\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mslice_indexer\u001b[0;34m(self, start, end, step, kind)\u001b[0m\n\u001b[1;32m   5683\u001b[0m         \u001b[0mslice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5684\u001b[0m         \"\"\"\n\u001b[0;32m-> 5685\u001b[0;31m         \u001b[0mstart_slice\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend_slice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mslice_locs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5686\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5687\u001b[0m         \u001b[0;31m# return a slice\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mslice_locs\u001b[0;34m(self, start, end, step, kind)\u001b[0m\n\u001b[1;32m   5885\u001b[0m         \u001b[0mstart_slice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5886\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mstart\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5887\u001b[0;31m             \u001b[0mstart_slice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_slice_bound\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"left\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5888\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mstart_slice\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5889\u001b[0m             \u001b[0mstart_slice\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_slice_bound\u001b[0;34m(self, label, side, kind)\u001b[0m\n\u001b[1;32m   5805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5806\u001b[0m                 \u001b[0;31m# raise the original KeyError\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5807\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5808\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5809\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mslc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_slice_bound\u001b[0;34m(self, label, side, kind)\u001b[0m\n\u001b[1;32m   5799\u001b[0m         \u001b[0;31m# we need to look up the label\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5800\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 5801\u001b[0;31m             \u001b[0mslc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   5802\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   5803\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/datetimes.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m    703\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mIndex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmethod\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtolerance\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    704\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 705\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morig_key\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    706\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    707\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_maybe_cast_for_get_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTimestamp\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: Timestamp('2018-01-10 00:00:00')"]}]},{"cell_type":"markdown","metadata":{"id":"0PB5r99MYde8"},"source":["## Добавление, удаление, переименование колонок и строк"]},{"cell_type":"code","source":["table = pd.DataFrame(\n","    data=[['BTC', 10000],['LTC', 200],['XRP', 1], ['BTC', 9000]],\n","    columns=['symbol', 'price'],\n","    # DatetimeIndex - это специальный тип данных для индексов содержащих время\n","    index=pd.DatetimeIndex(['01-11-2018', '03-11-2018', '23-08-2018', '02-11-2018'])\n",")\n","table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"GahHKqOY_XnE","executionInfo":{"status":"ok","timestamp":1666029488500,"user_tz":-180,"elapsed":265,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3183a6fd-6999-49f7-8e3b-d1d8e29c48cb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-47f2e281-0457-42e5-8568-c64ce902ceb6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47f2e281-0457-42e5-8568-c64ce902ceb6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-47f2e281-0457-42e5-8568-c64ce902ceb6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-47f2e281-0457-42e5-8568-c64ce902ceb6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":189}]},{"cell_type":"code","metadata":{"id":"kWBGcB9hYde8","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1666029572063,"user_tz":-180,"elapsed":297,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"09f025ed-ae83-4faf-cad4-e38493787a16"},"source":["# Удаление строк по их индексам. Можно использовать для удаления колонок, указав axis=1\n","# Посмотрите еще методы drop_duplicates and dropna\n","table.drop([pd.Timestamp('2018-08-23'), pd.Timestamp('2018-01-11')])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-03-11    LTC    200\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-f3ca3ac8-b993-4482-9126-b0bdb5c6c34e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3ca3ac8-b993-4482-9126-b0bdb5c6c34e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f3ca3ac8-b993-4482-9126-b0bdb5c6c34e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f3ca3ac8-b993-4482-9126-b0bdb5c6c34e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":190}]},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"cXQ3YoDdQgKS","executionInfo":{"status":"ok","timestamp":1666029623925,"user_tz":-180,"elapsed":267,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"02d66196-4fa6-4d1e-8cb1-28d8b0e53508"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-427d7cc4-f883-4051-bf40-6ac6fa5be002\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-427d7cc4-f883-4051-bf40-6ac6fa5be002')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-427d7cc4-f883-4051-bf40-6ac6fa5be002 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-427d7cc4-f883-4051-bf40-6ac6fa5be002');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":194}]},{"cell_type":"code","metadata":{"id":"fGHnn6h-wkiE"},"source":["new_table = table.drop([pd.Timestamp('2018-08-23'), pd.Timestamp('2018-01-11')])\n","#table.drop(..., inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"2bvGhcmdxTs7","executionInfo":{"status":"ok","timestamp":1666029619546,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1b6cb2ad-ba19-4933-cac1-5d3333792087"},"source":["new_table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-03-11    LTC    200\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-fc8e98a0-a32f-4540-9d8a-377d1f98bdbf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc8e98a0-a32f-4540-9d8a-377d1f98bdbf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fc8e98a0-a32f-4540-9d8a-377d1f98bdbf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fc8e98a0-a32f-4540-9d8a-377d1f98bdbf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":193}]},{"cell_type":"code","metadata":{"id":"PiMUQo9YYde8","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666029646632,"user_tz":-180,"elapsed":264,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5e603153-2383-44c6-a9ce-5f96300893a1"},"source":["# Чтобы добавить новую колонку достаточно присвоить ей значение\n","table['volume'] = [2e9, 1e6, 1e4, 1e-3]  #\n","table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price        volume\n","2018-01-11    BTC  10000  2.000000e+09\n","2018-03-11    LTC    200  1.000000e+06\n","2018-08-23    XRP      1  1.000000e+04\n","2018-02-11    BTC   9000  1.000000e-03"],"text/html":["\n","  <div id=\"df-9dc3c81a-3c44-4bd7-aa1a-6530360a231e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","      <th>volume</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","      <td>2.000000e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","      <td>1.000000e+06</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","      <td>1.000000e+04</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","      <td>1.000000e-03</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9dc3c81a-3c44-4bd7-aa1a-6530360a231e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9dc3c81a-3c44-4bd7-aa1a-6530360a231e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9dc3c81a-3c44-4bd7-aa1a-6530360a231e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":195}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"EEy-H-ZOxsCA","executionInfo":{"status":"error","timestamp":1666029674267,"user_tz":-180,"elapsed":268,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2a17fa04-19c9-415a-8e5c-8cbb51fb118b"},"source":["table['new_volume'] = [1e9, 1e6, 1e4]\n","table"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-196-a37e02761ee8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtable\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'new_volume'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;36m1e9\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1e6\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1e4\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mtable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   3610\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3611\u001b[0m             \u001b[0;31m# set column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3612\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3613\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3614\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   3782\u001b[0m         \u001b[0mensure\u001b[0m \u001b[0mhomogeneity\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3783\u001b[0m         \"\"\"\n\u001b[0;32m-> 3784\u001b[0;31m         \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3785\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3786\u001b[0m         if (\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[0;34m(self, value)\u001b[0m\n\u001b[1;32m   4507\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4508\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4509\u001b[0;31m             \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequire_length_match\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4510\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0msanitize_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4511\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/common.py\u001b[0m in \u001b[0;36mrequire_length_match\u001b[0;34m(data, index)\u001b[0m\n\u001b[1;32m    530\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    531\u001b[0m         raise ValueError(\n\u001b[0;32m--> 532\u001b[0;31m             \u001b[0;34m\"Length of values \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    533\u001b[0m             \u001b[0;34mf\"({len(data)}) \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    534\u001b[0m             \u001b[0;34m\"does not match length of index \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Length of values (3) does not match length of index (4)"]}]},{"cell_type":"code","metadata":{"id":"1yRCchu-Yde8"},"source":["# Удалять колонки очень просто\n","del table['volume']"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"x5AhhZa1yOHt","executionInfo":{"status":"ok","timestamp":1666029709351,"user_tz":-180,"elapsed":10,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"82b5a5d7-a7cc-44ae-9e4c-40f42bd42238"},"source":["table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-264d7266-6111-45da-85a0-417d092969a7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-264d7266-6111-45da-85a0-417d092969a7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-264d7266-6111-45da-85a0-417d092969a7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-264d7266-6111-45da-85a0-417d092969a7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":198}]},{"cell_type":"code","metadata":{"id":"d6WtwY9eYde8"},"source":["# Переименовывание колонок\n","table.rename(columns={'symbol': 'Symbol', 'price': 'Price'}, inplace=True)\n","# table = table.rename(columns={'symbol': 'Symbol', 'price': 'Price'})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"JT3RbeSbydyQ","executionInfo":{"status":"ok","timestamp":1666029742275,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a82979ef-3149-464d-8bcc-2c1fc38e0203"},"source":["table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-c6c5a5d1-6aee-484c-8296-ddb6d4d478fb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6c5a5d1-6aee-484c-8296-ddb6d4d478fb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6c5a5d1-6aee-484c-8296-ddb6d4d478fb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6c5a5d1-6aee-484c-8296-ddb6d4d478fb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":200}]},{"cell_type":"code","source":["id(table)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yqwMw45zHIQQ","executionInfo":{"status":"ok","timestamp":1666029762782,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c3d8a86a-e2cc-4af2-9e5d-5f715af1dd79"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["139930949916112"]},"metadata":{},"execution_count":201}]},{"cell_type":"code","source":["id(new_table.copy())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"II8udpPAHPSX","executionInfo":{"status":"ok","timestamp":1666029927166,"user_tz":-180,"elapsed":267,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"03f16f6a-103a-47bf-a208-efb422ade73d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["139930888276496"]},"metadata":{},"execution_count":210}]},{"cell_type":"code","source":["new_table = table.copy()\n","new_table['new'] = ['1','2', '3', '4']\n","table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"yssbHzIdH0w_","executionInfo":{"status":"ok","timestamp":1666029963245,"user_tz":-180,"elapsed":313,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"16ced106-a2d4-4bd6-ba4a-f5da427a5e0b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-1fdeb272-1512-4d82-9685-d1013a03472f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1fdeb272-1512-4d82-9685-d1013a03472f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1fdeb272-1512-4d82-9685-d1013a03472f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1fdeb272-1512-4d82-9685-d1013a03472f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":211}]},{"cell_type":"code","source":["table.copy?"],"metadata":{"id":"sNF1Rj1TICQy"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"O9d8T7ubYde9"},"source":["## Итерирование"]},{"cell_type":"markdown","metadata":{"id":"m9KdRZ3oYde9"},"source":["Итерироваться по таблице можно разными способами, но обычно так не стоит делать и лучше написать решение в виде манипуляций над столбцами/колонками"]},{"cell_type":"code","metadata":{"id":"V3FqGTihYde9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666030110341,"user_tz":-180,"elapsed":265,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"32d8260a-34ec-4e67-82a8-7d4a444a936c"},"source":["# По колонкам\n","for column in table:\n","    print(column, type(column))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Symbol <class 'str'>\n","Price <class 'str'>\n"]}]},{"cell_type":"code","metadata":{"id":"Zla_UYHFYde9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666030130671,"user_tz":-180,"elapsed":288,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"831eaa9c-8c00-4d84-ca18-a1626daadaa1"},"source":["# По колонкам как по словарю. Значения в \"словаре\" это pandas.Series\n","for column, series in table.iteritems():\n","    print(column)\n","    print(series)\n","    print('___________')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Symbol\n","2018-01-11    BTC\n","2018-03-11    LTC\n","2018-08-23    XRP\n","2018-02-11    BTC\n","Name: Symbol, dtype: object\n","___________\n","Price\n","2018-01-11    10000\n","2018-03-11      200\n","2018-08-23        1\n","2018-02-11     9000\n","Name: Price, dtype: int64\n","___________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"e4mB6UGRzIl5","executionInfo":{"status":"ok","timestamp":1666030152530,"user_tz":-180,"elapsed":342,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"0e5d46cf-7934-4e7d-e7ed-0065818c0c89"},"source":["table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-39171807-9c6a-453b-973b-1f77832e3c78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39171807-9c6a-453b-973b-1f77832e3c78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-39171807-9c6a-453b-973b-1f77832e3c78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-39171807-9c6a-453b-973b-1f77832e3c78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":215}]},{"cell_type":"code","metadata":{"id":"m6djEueZYde9","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666030210692,"user_tz":-180,"elapsed":280,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8ea6c9f4-800a-446e-ccfc-94543eed74a7"},"source":["# По строкам как по словарю. Значения в \"словаре\" это pandas.Series\n","for index, row in table.iterrows():\n","    print(index)\n","    print(row)\n","    print('___________')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2018-01-11 00:00:00\n","Symbol      BTC\n","Price     10000\n","Name: 2018-01-11 00:00:00, dtype: object\n","___________\n","2018-03-11 00:00:00\n","Symbol    LTC\n","Price     200\n","Name: 2018-03-11 00:00:00, dtype: object\n","___________\n","2018-08-23 00:00:00\n","Symbol    XRP\n","Price       1\n","Name: 2018-08-23 00:00:00, dtype: object\n","___________\n","2018-02-11 00:00:00\n","Symbol     BTC\n","Price     9000\n","Name: 2018-02-11 00:00:00, dtype: object\n","___________\n"]}]},{"cell_type":"markdown","metadata":{"id":"dCTjGovDYde-"},"source":["## Сортировка"]},{"cell_type":"markdown","metadata":{"id":"l6ZL8whxYde-"},"source":["Строки и столбцы таблицы можно сортировать. Результат сортирующих методов возвращает новую таблицу!"]},{"cell_type":"code","metadata":{"id":"AZzEnu9rYde-","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666030335422,"user_tz":-180,"elapsed":264,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"bce23f94-1218-44fd-c11f-cfd9546b8a8c"},"source":["# Отсортировать строки по индексу по убыванию\n","table.sort_index(ascending=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-08-23    XRP      1\n","2018-03-11    LTC    200\n","2018-02-11    BTC   9000\n","2018-01-11    BTC  10000"],"text/html":["\n","  <div id=\"df-3075233c-7df2-4f2f-ad56-5ad11f9a3578\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3075233c-7df2-4f2f-ad56-5ad11f9a3578')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3075233c-7df2-4f2f-ad56-5ad11f9a3578 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3075233c-7df2-4f2f-ad56-5ad11f9a3578');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":217}]},{"cell_type":"code","source":["table"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"rSaAKF1nBfOT","executionInfo":{"status":"ok","timestamp":1666030335922,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"01f4f9ba-fd29-4eeb-c98a-fd4333dbf31a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1\n","2018-02-11    BTC   9000"],"text/html":["\n","  <div id=\"df-8037b62a-99e3-4d9c-a261-01625afc788a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8037b62a-99e3-4d9c-a261-01625afc788a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8037b62a-99e3-4d9c-a261-01625afc788a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8037b62a-99e3-4d9c-a261-01625afc788a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":218}]},{"cell_type":"code","metadata":{"id":"0qq1TzuPYde-","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666030361865,"user_tz":-180,"elapsed":446,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5c7958e1-1217-4215-b447-7ffca76b3b3c"},"source":["# Отсортировать колонки по возрастанию\n","table.sort_index(axis=1, ascending=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Price Symbol\n","2018-01-11  10000    BTC\n","2018-03-11    200    LTC\n","2018-08-23      1    XRP\n","2018-02-11   9000    BTC"],"text/html":["\n","  <div id=\"df-771c0911-5434-41c4-a193-b282bb98ebc6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Price</th>\n","      <th>Symbol</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>10000</td>\n","      <td>BTC</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>200</td>\n","      <td>LTC</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>1</td>\n","      <td>XRP</td>\n","    </tr>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>9000</td>\n","      <td>BTC</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-771c0911-5434-41c4-a193-b282bb98ebc6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-771c0911-5434-41c4-a193-b282bb98ebc6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-771c0911-5434-41c4-a193-b282bb98ebc6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":219}]},{"cell_type":"code","metadata":{"id":"X_VlmBWwYde-","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649695307143,"user_tz":-180,"elapsed":24,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"3e3cce16-12d7-44aa-d811-55731c052bef"},"source":["# Отсортировать таблицу алгоритмом quicksort по названию, а если значения равны то по цене\n","table.sort_values(by=['Symbol', 'Price'], kind='quicksort')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Symbol  Price\n","2018-02-11    BTC   9000\n","2018-01-11    BTC  10000\n","2018-03-11    LTC    200\n","2018-08-23    XRP      1"],"text/html":["\n","  <div id=\"df-e75de398-282e-4ec8-805e-9645d23557a2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Symbol</th>\n","      <th>Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-02-11</th>\n","      <td>BTC</td>\n","      <td>9000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-11</th>\n","      <td>BTC</td>\n","      <td>10000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-03-11</th>\n","      <td>LTC</td>\n","      <td>200</td>\n","    </tr>\n","    <tr>\n","      <th>2018-08-23</th>\n","      <td>XRP</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e75de398-282e-4ec8-805e-9645d23557a2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e75de398-282e-4ec8-805e-9645d23557a2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e75de398-282e-4ec8-805e-9645d23557a2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":250}]},{"cell_type":"code","source":["table.sort_values?"],"metadata":{"id":"329T2jCDghlw"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1pj5CdO6Yde_"},"source":["del table, index, row, column, series"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZucyMg6PYde_"},"source":["# Статистические функции"]},{"cell_type":"markdown","metadata":{"id":"Gp4kO979Yde_"},"source":["Посмотрим как pandas позволяет вычислять простейшие статистики для датасетов. Методы которые мы перечислим ниже имеют аргумет axis, который указывает вдоль какой оси надо вычислять статистику. Обычно, по-умолчанию axis=0, что соответсвует вычислениям по строкам. Если в данных есть пропуски, то они не учитываются при вычислении статистик!"]},{"cell_type":"code","metadata":{"id":"IgJmhDHAYde_"},"source":["earnings = pd.DataFrame(\n","    data=[[7629.39, -9357.49, -1661.3, 8597.23],\n","          [560.68, None, 10.46, 3578.5],\n","          [487.38, 7560.38, 1090.87, -5164.93],\n","          [560.68, 7560.38, None, -5164.93]],\n","    columns=['BTC', 'DOGE', 'ADA', 'ETH'],\n","    index=['yesterday', 'today', 'tomorrow','aftertomorrow']\n",")\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7EEJoYCmYde_","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666031338735,"user_tz":-180,"elapsed":8,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"507d47a7-b9dc-4800-97b9-008f234e8834"},"source":["earnings"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39 -9357.49 -1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87 -5164.93\n","aftertomorrow   560.68  7560.38      NaN -5164.93"],"text/html":["\n","  <div id=\"df-61a50688-05f6-40a9-bb1b-adf5a05d1369\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61a50688-05f6-40a9-bb1b-adf5a05d1369')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61a50688-05f6-40a9-bb1b-adf5a05d1369 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61a50688-05f6-40a9-bb1b-adf5a05d1369');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":223}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T4DZ2Sgf3lMh","executionInfo":{"status":"ok","timestamp":1666031454232,"user_tz":-180,"elapsed":346,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ae325a40-6b8e-4a6a-86bf-f462b3ae2858"},"source":["type(earnings['DOGE'].iloc[0])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.float64"]},"metadata":{},"execution_count":225}]},{"cell_type":"code","metadata":{"id":"D-evK90eYdfA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666031463277,"user_tz":-180,"elapsed":258,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3079e0f9-dcef-420e-9adf-b39646bd0e16"},"source":["# Количество не None записей для каждой монеты\n","earnings.count()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC     4\n","DOGE    3\n","ADA     3\n","ETH     4\n","dtype: int64"]},"metadata":{},"execution_count":226}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Ikugz2iz4vXe","executionInfo":{"status":"ok","timestamp":1666031496016,"user_tz":-180,"elapsed":473,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fd368e14-a554-4dd2-a9e9-49ba98661a16"},"source":["earnings"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39 -9357.49 -1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87 -5164.93\n","aftertomorrow   560.68  7560.38      NaN -5164.93"],"text/html":["\n","  <div id=\"df-ba06db8a-9271-485e-9f8f-f4bf197b28cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba06db8a-9271-485e-9f8f-f4bf197b28cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ba06db8a-9271-485e-9f8f-f4bf197b28cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ba06db8a-9271-485e-9f8f-f4bf197b28cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":227}]},{"cell_type":"code","metadata":{"id":"4jZY-l3qYdfA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666031555943,"user_tz":-180,"elapsed":603,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d506e4ef-958e-498b-e30e-9d08d4225184"},"source":["# Заработки по дням\n","earnings.sum(axis=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["yesterday        5207.83\n","today            4149.64\n","tomorrow         3973.70\n","aftertomorrow    2956.13\n","dtype: float64"]},"metadata":{},"execution_count":229}]},{"cell_type":"code","source":["earnings.sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LUMHsaymN3-K","executionInfo":{"status":"ok","timestamp":1666031524421,"user_tz":-180,"elapsed":314,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4719525a-943e-4b51-c5aa-39baa7f4410d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC     9238.13\n","DOGE    5763.27\n","ADA     -559.97\n","ETH     1845.87\n","dtype: float64"]},"metadata":{},"execution_count":228}]},{"cell_type":"code","metadata":{"id":"aojwOXhdYdfA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666031586960,"user_tz":-180,"elapsed":242,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"de09f0e0-e1e4-4fc3-fcce-bad281eba3ec"},"source":["# Средний заработок по каждой монете\n","earnings.mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC     2309.532500\n","DOGE    1921.090000\n","ADA     -186.656667\n","ETH      461.467500\n","dtype: float64"]},"metadata":{},"execution_count":230}]},{"cell_type":"code","metadata":{"id":"CGYfntFqYdfA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666031609386,"user_tz":-180,"elapsed":564,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"750fcf58-bd84-4305-9531-105022a30cf6"},"source":["# Медианный заработок по каждой монете\n","earnings.median()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC      560.680\n","DOGE    7560.380\n","ADA       10.460\n","ETH     -793.215\n","dtype: float64"]},"metadata":{},"execution_count":231}]},{"cell_type":"code","source":["earnings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"rSr91rf5JLIh","executionInfo":{"status":"ok","timestamp":1649695895555,"user_tz":-180,"elapsed":348,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"87fbfd9c-b5a4-45f5-ec4b-86d6344ff4ba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39 -9357.49 -1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87 -5164.93\n","aftertomorrow   560.68  7560.38      NaN -5164.93"],"text/html":["\n","  <div id=\"df-fbe1b716-620b-4312-a89f-0cb406149ec0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fbe1b716-620b-4312-a89f-0cb406149ec0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fbe1b716-620b-4312-a89f-0cb406149ec0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fbe1b716-620b-4312-a89f-0cb406149ec0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":260}]},{"cell_type":"code","metadata":{"id":"mo0NWoNrYdfA","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666031640845,"user_tz":-180,"elapsed":431,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c7bc8460-beb9-47a0-8a5d-5c4c01649ed7"},"source":["# Моды заработка по каждой монете\n","earnings.mode()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      BTC     DOGE      ADA      ETH\n","0  560.68  7560.38 -1661.30 -5164.93\n","1     NaN      NaN    10.46      NaN\n","2     NaN      NaN  1090.87      NaN"],"text/html":["\n","  <div id=\"df-7c8d83c7-524c-4997-a253-c58a9e9a04eb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>-1661.30</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1090.87</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7c8d83c7-524c-4997-a253-c58a9e9a04eb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7c8d83c7-524c-4997-a253-c58a9e9a04eb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7c8d83c7-524c-4997-a253-c58a9e9a04eb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":232}]},{"cell_type":"code","metadata":{"id":"D_0wVFVlYdfB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690708440,"user_tz":-180,"elapsed":344,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"2ccd3e81-7f14-4d97-e2f3-615428cc606f"},"source":["# \"Разброс\" заработка по каждой монете\n","earnings.std()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC     3546.739991\n","DOGE    9767.536799\n","ADA     1386.633031\n","ETH     6812.224813\n","dtype: float64"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["![std](https://wikimedia.org/api/rest_v1/media/math/render/svg/15619dfbb9a470d310c1bc08fb61d4fb1187d057)"],"metadata":{"id":"VSTfpm7zPXgo"}},{"cell_type":"code","metadata":{"id":"W7DmwB4lYdfB","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666032092995,"user_tz":-180,"elapsed":654,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"97b67fe4-3f45-4c2d-ee57-85864ef4ae0d"},"source":["# 25, 50 и 75 квантиль заработка по каждой монете\n","earnings.quantile(q=(0.25, 0.5, 0.75, 0.9))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            BTC      DOGE      ADA        ETH\n","0.25   542.3550  -898.555 -825.420 -5164.9300\n","0.50   560.6800  7560.380   10.460  -793.2150\n","0.75  2327.8575  7560.380  550.665  4833.1825\n","0.90  5508.7770  7560.380  874.788  7091.6110"],"text/html":["\n","  <div id=\"df-4fffa469-076e-4f57-aaf8-97392f82a5d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.25</th>\n","      <td>542.3550</td>\n","      <td>-898.555</td>\n","      <td>-825.420</td>\n","      <td>-5164.9300</td>\n","    </tr>\n","    <tr>\n","      <th>0.50</th>\n","      <td>560.6800</td>\n","      <td>7560.380</td>\n","      <td>10.460</td>\n","      <td>-793.2150</td>\n","    </tr>\n","    <tr>\n","      <th>0.75</th>\n","      <td>2327.8575</td>\n","      <td>7560.380</td>\n","      <td>550.665</td>\n","      <td>4833.1825</td>\n","    </tr>\n","    <tr>\n","      <th>0.90</th>\n","      <td>5508.7770</td>\n","      <td>7560.380</td>\n","      <td>874.788</td>\n","      <td>7091.6110</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4fffa469-076e-4f57-aaf8-97392f82a5d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4fffa469-076e-4f57-aaf8-97392f82a5d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4fffa469-076e-4f57-aaf8-97392f82a5d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":234}]},{"cell_type":"code","metadata":{"id":"kvWsSlpGYdfB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690719565,"user_tz":-180,"elapsed":525,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"8ac85d05-7679-458b-dfe8-2b6ea77b5863"},"source":["# Минимальный заработок по каждой монете\n","earnings.min()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC      487.38\n","DOGE   -9357.49\n","ADA    -1661.30\n","ETH    -5164.93\n","dtype: float64"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"d178AxTtYdfB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690719943,"user_tz":-180,"elapsed":10,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"2ad85b11-344e-4514-943e-9f3c204e5731"},"source":["# Максимальный заработок по каждой монете\n","earnings.max(axis=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["yesterday        8597.23\n","today            3578.50\n","tomorrow         7560.38\n","aftertomorrow    7560.38\n","dtype: float64"]},"metadata":{},"execution_count":71}]},{"cell_type":"code","metadata":{"id":"cxIvrkjJYdfB","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649690722220,"user_tz":-180,"elapsed":17,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"ddbd505f-40a1-4631-9a05-63b02f6aff82"},"source":["# Абсолюты заработков по каждой монете\n","earnings.abs()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39  9357.49  1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87  5164.93\n","aftertomorrow   560.68  7560.38      NaN  5164.93"],"text/html":["\n","  <div id=\"df-f035e6a9-3cb3-43d5-b404-9dec608a0daa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f035e6a9-3cb3-43d5-b404-9dec608a0daa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f035e6a9-3cb3-43d5-b404-9dec608a0daa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f035e6a9-3cb3-43d5-b404-9dec608a0daa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"ysON_ROnYdfC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690746807,"user_tz":-180,"elapsed":495,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"a8271963-2251-47ff-86f4-58007389ce90"},"source":["# Произвдение заработков по каждой монете. Да, это бессмысленно\n","earnings.prod()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC     1.168928e+12\n","DOGE   -5.348680e+11\n","ADA    -1.895626e+07\n","ETH     8.207076e+14\n","dtype: float64"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"lSysPELWYdfC","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649690747385,"user_tz":-180,"elapsed":24,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"78dd8a34-dc16-4f24-c22f-fed560fceda9"},"source":["# Кумулятивные произведения заработков по каждой монете\n","earnings.cumprod()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        BTC          DOGE           ADA           ETH\n","yesterday      7.629390e+03 -9.357490e+03 -1.661300e+03  8.597230e+03\n","today          4.277646e+06           NaN -1.737720e+04  3.076519e+07\n","tomorrow       2.084839e+09 -7.074618e+07 -1.895626e+07 -1.589000e+11\n","aftertomorrow  1.168928e+12 -5.348680e+11           NaN  8.207076e+14"],"text/html":["\n","  <div id=\"df-0ea2a1fd-5372-4379-aa82-28ea6be84a00\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7.629390e+03</td>\n","      <td>-9.357490e+03</td>\n","      <td>-1.661300e+03</td>\n","      <td>8.597230e+03</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>4.277646e+06</td>\n","      <td>NaN</td>\n","      <td>-1.737720e+04</td>\n","      <td>3.076519e+07</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>2.084839e+09</td>\n","      <td>-7.074618e+07</td>\n","      <td>-1.895626e+07</td>\n","      <td>-1.589000e+11</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>1.168928e+12</td>\n","      <td>-5.348680e+11</td>\n","      <td>NaN</td>\n","      <td>8.207076e+14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ea2a1fd-5372-4379-aa82-28ea6be84a00')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0ea2a1fd-5372-4379-aa82-28ea6be84a00 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0ea2a1fd-5372-4379-aa82-28ea6be84a00');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["earnings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Ib-EN_TaKddJ","executionInfo":{"status":"ok","timestamp":1666032513172,"user_tz":-180,"elapsed":639,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"7d0e5645-1a9c-4cec-bfa3-9c4e78b9dcbf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39 -9357.49 -1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87 -5164.93\n","aftertomorrow   560.68  7560.38      NaN -5164.93"],"text/html":["\n","  <div id=\"df-e918ed79-f479-480d-b208-55441437816f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e918ed79-f479-480d-b208-55441437816f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e918ed79-f479-480d-b208-55441437816f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e918ed79-f479-480d-b208-55441437816f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":235}]},{"cell_type":"code","metadata":{"id":"ist3XeXzYdfC","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666032515934,"user_tz":-180,"elapsed":503,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"02f6a1e9-4e47-44d7-c411-3b9b57dfb16b"},"source":["# Кумулятивные суммы заработков по каждой монете\n","earnings.cumsum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA       ETH\n","yesterday      7629.39 -9357.49 -1661.30   8597.23\n","today          8190.07      NaN -1650.84  12175.73\n","tomorrow       8677.45 -1797.11  -559.97   7010.80\n","aftertomorrow  9238.13  5763.27      NaN   1845.87"],"text/html":["\n","  <div id=\"df-7cf407a0-d037-4c5d-ac66-4458e50b79d2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>8190.07</td>\n","      <td>NaN</td>\n","      <td>-1650.84</td>\n","      <td>12175.73</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>8677.45</td>\n","      <td>-1797.11</td>\n","      <td>-559.97</td>\n","      <td>7010.80</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>9238.13</td>\n","      <td>5763.27</td>\n","      <td>NaN</td>\n","      <td>1845.87</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cf407a0-d037-4c5d-ac66-4458e50b79d2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7cf407a0-d037-4c5d-ac66-4458e50b79d2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7cf407a0-d037-4c5d-ac66-4458e50b79d2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":236}]},{"cell_type":"code","source":["earnings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"VFNABBCKWTux","executionInfo":{"status":"ok","timestamp":1666032517433,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"cda42f7f-2b32-4d95-a19a-9b511c190092"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                   BTC     DOGE      ADA      ETH\n","yesterday      7629.39 -9357.49 -1661.30  8597.23\n","today           560.68      NaN    10.46  3578.50\n","tomorrow        487.38  7560.38  1090.87 -5164.93\n","aftertomorrow   560.68  7560.38      NaN -5164.93"],"text/html":["\n","  <div id=\"df-530b0f03-4959-446b-bbb2-00e70470a0a1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>560.68</td>\n","      <td>7560.38</td>\n","      <td>NaN</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-530b0f03-4959-446b-bbb2-00e70470a0a1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-530b0f03-4959-446b-bbb2-00e70470a0a1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-530b0f03-4959-446b-bbb2-00e70470a0a1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":237}]},{"cell_type":"code","metadata":{"id":"4E1qrGm9YdfC","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649690753776,"user_tz":-180,"elapsed":376,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"e8e97f1f-141d-4332-b063-72deb482a981"},"source":["# Процентное изменение заработка по сравнению с предыдущим значением\n","earnings.pct_change()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    BTC     DOGE         ADA       ETH\n","yesterday           NaN      NaN         NaN       NaN\n","today         -0.926511  0.00000   -1.006296 -0.583761\n","tomorrow      -0.130734 -1.80795  103.289675 -2.443323\n","aftertomorrow  0.150396  0.00000    0.000000  0.000000"],"text/html":["\n","  <div id=\"df-d45b594f-49e5-47ef-a614-b8670d366aae\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>-0.926511</td>\n","      <td>0.00000</td>\n","      <td>-1.006296</td>\n","      <td>-0.583761</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>-0.130734</td>\n","      <td>-1.80795</td>\n","      <td>103.289675</td>\n","      <td>-2.443323</td>\n","    </tr>\n","    <tr>\n","      <th>aftertomorrow</th>\n","      <td>0.150396</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d45b594f-49e5-47ef-a614-b8670d366aae')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d45b594f-49e5-47ef-a614-b8670d366aae button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d45b594f-49e5-47ef-a614-b8670d366aae');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":79}]},{"cell_type":"code","source":["earnings.pct_change?"],"metadata":{"id":"Ujv6C3cBSRyd"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"InUJ8kGUYdfD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690756590,"user_tz":-180,"elapsed":409,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"6753f5e2-b29c-4704-ed4a-19ec24a76c24"},"source":["# Ковариация между заработком по BTC и по DOGE\n","earnings['BTC'].cov(earnings['DOGE'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-40069185.5944"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"cl1s1y6DYdfD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649690758121,"user_tz":-180,"elapsed":8,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"ecf872ce-b04e-49b5-bcd5-9ebd6a03b3be"},"source":["# Корреляция между заработком по BTC и по DOGE\n","earnings['BTC'].corr(earnings['DOGE'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["-0.9999600937383021"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","source":["earnings.corr?"],"metadata":{"id":"UWtHLjDSkryo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Tz9jwwrWYdfD"},"source":["Иногда хочется посмотреть все статистики сразу. Для этого есть метод describe"]},{"cell_type":"code","metadata":{"id":"hmkQ8v8pYdfD","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1666032922128,"user_tz":-180,"elapsed":295,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"cc5255c8-8951-4660-a1d3-125b61341617"},"source":["earnings.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC         DOGE          ADA          ETH\n","count     4.000000     3.000000     3.000000     4.000000\n","mean   2309.532500  1921.090000  -186.656667   461.467500\n","std    3546.739991  9767.536799  1386.633031  6812.224813\n","min     487.380000 -9357.490000 -1661.300000 -5164.930000\n","25%     542.355000  -898.555000  -825.420000 -5164.930000\n","50%     560.680000  7560.380000    10.460000  -793.215000\n","75%    2327.857500  7560.380000   550.665000  4833.182500\n","max    7629.390000  7560.380000  1090.870000  8597.230000"],"text/html":["\n","  <div id=\"df-ab401fe2-9a84-473d-b1b6-fef6dc4d6cac\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2309.532500</td>\n","      <td>1921.090000</td>\n","      <td>-186.656667</td>\n","      <td>461.467500</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3546.739991</td>\n","      <td>9767.536799</td>\n","      <td>1386.633031</td>\n","      <td>6812.224813</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>487.380000</td>\n","      <td>-9357.490000</td>\n","      <td>-1661.300000</td>\n","      <td>-5164.930000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>542.355000</td>\n","      <td>-898.555000</td>\n","      <td>-825.420000</td>\n","      <td>-5164.930000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>560.680000</td>\n","      <td>7560.380000</td>\n","      <td>10.460000</td>\n","      <td>-793.215000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2327.857500</td>\n","      <td>7560.380000</td>\n","      <td>550.665000</td>\n","      <td>4833.182500</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7629.390000</td>\n","      <td>7560.380000</td>\n","      <td>1090.870000</td>\n","      <td>8597.230000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab401fe2-9a84-473d-b1b6-fef6dc4d6cac')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ab401fe2-9a84-473d-b1b6-fef6dc4d6cac button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ab401fe2-9a84-473d-b1b6-fef6dc4d6cac');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":239}]},{"cell_type":"code","metadata":{"id":"xKcPR8pdYdfE"},"source":["del earnings"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nDUjgQvrYdfE"},"source":["# Применение пользовательских функций"]},{"cell_type":"markdown","metadata":{"id":"6kx3KgStYdfE"},"source":["Иногда хочется применить к датасету или одной его колонке функцию. Применять можно ко всей таблице, поэлементно, поколоночно или построчно"]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"yXYEM15itCtX","executionInfo":{"status":"ok","timestamp":1713265941965,"user_tz":-180,"elapsed":10,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"_zmsAWBcYdfE","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1713266047562,"user_tz":-180,"elapsed":546,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"b47354a8-f1b4-407e-cfcf-26618b786894"},"source":["earnings = pd.DataFrame(\n","    data=[[7629.39, -9357.49, -1661.3, 8597.23],\n","          [560.68, None, 10.46, 3578.5],\n","          [487.38, 7560.38, 1090.87, -5164.93]],\n","    columns=['BTC', 'DOGE', 'ADA', 'ETH'],\n","    index=['yesterday', 'today', 'tomorrow']\n",")\n","earnings"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH\n","yesterday  7629.39 -9357.49 -1661.30  8597.23\n","today       560.68      NaN    10.46  3578.50\n","tomorrow    487.38  7560.38  1090.87 -5164.93"],"text/html":["\n","  <div id=\"df-4297efc6-e611-495c-9e30-34ceaf3bb5ee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4297efc6-e611-495c-9e30-34ceaf3bb5ee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4297efc6-e611-495c-9e30-34ceaf3bb5ee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4297efc6-e611-495c-9e30-34ceaf3bb5ee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a995ba02-0a9a-4ed8-8e48-c0b9f5f16758\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a995ba02-0a9a-4ed8-8e48-c0b9f5f16758')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a995ba02-0a9a-4ed8-8e48-c0b9f5f16758 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"earnings","summary":"{\n  \"name\": \"earnings\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"BTC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4102.445221941828,\n        \"min\": 487.38,\n        \"max\": 7629.39,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7629.39,\n          560.68,\n          487.38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11962.740600232455,\n        \"min\": -9357.49,\n        \"max\": 7560.38,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7560.38,\n          -9357.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1386.633030918178,\n        \"min\": -1661.3,\n        \"max\": 1090.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -1661.3,\n          10.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ETH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6964.58023194746,\n        \"min\": -5164.93,\n        \"max\": 8597.23,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8597.23,\n          3578.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"PHAuvbNKYdfE"},"source":["Для  применения построчно/поколоночно используйте функцию apply. Если хочется применить построчно добавьте axis=1"]},{"cell_type":"code","metadata":{"id":"s7lO4l3RYdfF","executionInfo":{"status":"ok","timestamp":1713266056566,"user_tz":-180,"elapsed":430,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}}},"source":["#  Посчитать дисперсию заработка для каждой монеты. В лямбду приходит pandas.Series объект каждой колонки\n","earnings['new_stat'] = earnings.apply(lambda money: money.std() ** 2, axis=1)"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"kdjmfXuo_yBT","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1713266058958,"user_tz":-180,"elapsed":7,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"eb8a8899-c5d8-4420-bb16-a7eaea01530e"},"source":["earnings"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat\n","yesterday  7629.39 -9357.49 -1661.30  8597.23  7.188737e+07\n","today       560.68      NaN    10.46  3578.50  3.690148e+06\n","tomorrow    487.38  7560.38  1090.87 -5164.93  2.710527e+07"],"text/html":["\n","  <div id=\"df-7348f8c7-062e-4ded-8947-2f2efca2f4ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","      <td>2.710527e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7348f8c7-062e-4ded-8947-2f2efca2f4ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7348f8c7-062e-4ded-8947-2f2efca2f4ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7348f8c7-062e-4ded-8947-2f2efca2f4ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ff6f130b-6125-4610-9946-c9f5a2229665\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ff6f130b-6125-4610-9946-c9f5a2229665')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ff6f130b-6125-4610-9946-c9f5a2229665 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"earnings","summary":"{\n  \"name\": \"earnings\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"BTC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4102.445221941828,\n        \"min\": 487.38,\n        \"max\": 7629.39,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7629.39,\n          560.68,\n          487.38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11962.740600232455,\n        \"min\": -9357.49,\n        \"max\": 7560.38,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7560.38,\n          -9357.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1386.633030918178,\n        \"min\": -1661.3,\n        \"max\": 1090.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -1661.3,\n          10.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ETH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6964.58023194746,\n        \"min\": -5164.93,\n        \"max\": 8597.23,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8597.23,\n          3578.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"new_stat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34651998.80503252,\n        \"min\": 3690148.1737333345,\n        \"max\": 71887372.96929169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          71887372.96929169,\n          3690148.1737333345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"9v1yI6aDYdfF"},"source":["Для поэлементного применения используйте функцию applymap"]},{"cell_type":"code","metadata":{"id":"qPnXaNugDVYg","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1713265965344,"user_tz":-180,"elapsed":487,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"3b16e32b-d0c3-4e51-b3c3-ae067e97afad"},"source":["earnings"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat\n","yesterday  7629.39 -9357.49 -1661.30  8597.23  7.188737e+07\n","today       560.68      NaN    10.46  3578.50  3.690148e+06\n","tomorrow    487.38  7560.38  1090.87 -5164.93  2.710527e+07"],"text/html":["\n","  <div id=\"df-a045ff5b-025c-4eac-a373-73ea203e2619\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","      <td>2.710527e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a045ff5b-025c-4eac-a373-73ea203e2619')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a045ff5b-025c-4eac-a373-73ea203e2619 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a045ff5b-025c-4eac-a373-73ea203e2619');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c05525f0-18de-4467-9a11-b6a1d8d81d4b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c05525f0-18de-4467-9a11-b6a1d8d81d4b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c05525f0-18de-4467-9a11-b6a1d8d81d4b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"earnings","summary":"{\n  \"name\": \"earnings\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"BTC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4102.445221941828,\n        \"min\": 487.38,\n        \"max\": 7629.39,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7629.39,\n          560.68,\n          487.38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11962.740600232455,\n        \"min\": -9357.49,\n        \"max\": 7560.38,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7560.38,\n          -9357.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1386.633030918178,\n        \"min\": -1661.3,\n        \"max\": 1090.87,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          -1661.3,\n          10.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ETH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6964.58023194746,\n        \"min\": -5164.93,\n        \"max\": 8597.23,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8597.23,\n          3578.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"new_stat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34651998.80503252,\n        \"min\": 3690148.1737333345,\n        \"max\": 71887372.96929169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          71887372.96929169,\n          3690148.1737333345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"-Z0cOIu6YdfF","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1713265972149,"user_tz":-180,"elapsed":507,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"f1da2bd8-a22e-4be6-caf4-4a2d029b2278"},"source":["# Сделаем вид, что потери превратились в профит\n","earnings.applymap(abs)"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat\n","yesterday  7629.39  9357.49  1661.30  8597.23  7.188737e+07\n","today       560.68      NaN    10.46  3578.50  3.690148e+06\n","tomorrow    487.38  7560.38  1090.87  5164.93  2.710527e+07"],"text/html":["\n","  <div id=\"df-9ea383bb-5211-4edc-a2ee-eec43ad9b3a4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","      <td>2.710527e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ea383bb-5211-4edc-a2ee-eec43ad9b3a4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ea383bb-5211-4edc-a2ee-eec43ad9b3a4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ea383bb-5211-4edc-a2ee-eec43ad9b3a4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5fd7e241-e945-48b2-bbf9-5007cfdf24e9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5fd7e241-e945-48b2-bbf9-5007cfdf24e9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5fd7e241-e945-48b2-bbf9-5007cfdf24e9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"earnings\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"BTC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4102.445221941828,\n        \"min\": 487.38,\n        \"max\": 7629.39,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7629.39,\n          560.68,\n          487.38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1270.7486675381563,\n        \"min\": 7560.38,\n        \"max\": 9357.49,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7560.38,\n          9357.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 838.4458697097465,\n        \"min\": 10.46,\n        \"max\": 1661.3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1661.3,\n          10.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ETH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2565.316557717585,\n        \"min\": 3578.5,\n        \"max\": 8597.23,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8597.23,\n          3578.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"new_stat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34651998.80503252,\n        \"min\": 3690148.1737333345,\n        \"max\": 71887372.96929169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          71887372.96929169,\n          3690148.1737333345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["earnings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"yl5zHDLbvWxM","executionInfo":{"status":"ok","timestamp":1666033331746,"user_tz":-180,"elapsed":324,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b5347de4-8d7b-48cd-a33c-6eaa519c4e88"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat\n","yesterday  7629.39 -9357.49 -1661.30  8597.23  7.188737e+07\n","today       560.68      NaN    10.46  3578.50  3.690148e+06\n","tomorrow    487.38  7560.38  1090.87 -5164.93  2.710527e+07"],"text/html":["\n","  <div id=\"df-f0ea3416-b54e-4fff-b15d-0a44bcb1d479\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>-9357.49</td>\n","      <td>-1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>-5164.93</td>\n","      <td>2.710527e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f0ea3416-b54e-4fff-b15d-0a44bcb1d479')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f0ea3416-b54e-4fff-b15d-0a44bcb1d479 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f0ea3416-b54e-4fff-b15d-0a44bcb1d479');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":245}]},{"cell_type":"code","metadata":{"id":"lm6y0ViZDdB5","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1713266552967,"user_tz":-180,"elapsed":563,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"c3d9067f-1982-4a93-f2cd-f424d3bba750"},"source":["earnings = earnings.applymap(abs)\n","#earnings.applymap(abs, inplace=True) # error\n","earnings"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat\n","yesterday  7629.39  9357.49  1661.30  8597.23  7.188737e+07\n","today       560.68      NaN    10.46  3578.50  3.690148e+06\n","tomorrow    487.38  7560.38  1090.87  5164.93  2.710527e+07"],"text/html":["\n","  <div id=\"df-7fca84b3-0981-4f6d-8d35-86b895394537\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","      <td>2.710527e+07</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7fca84b3-0981-4f6d-8d35-86b895394537')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7fca84b3-0981-4f6d-8d35-86b895394537 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7fca84b3-0981-4f6d-8d35-86b895394537');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7c796a89-bfdd-4747-a2fb-efe8a83026c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c796a89-bfdd-4747-a2fb-efe8a83026c5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7c796a89-bfdd-4747-a2fb-efe8a83026c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"earnings","summary":"{\n  \"name\": \"earnings\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"BTC\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4102.445221941828,\n        \"min\": 487.38,\n        \"max\": 7629.39,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          7629.39,\n          560.68,\n          487.38\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOGE\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1270.7486675381563,\n        \"min\": 7560.38,\n        \"max\": 9357.49,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          7560.38,\n          9357.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ADA\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 838.4458697097465,\n        \"min\": 10.46,\n        \"max\": 1661.3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1661.3,\n          10.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ETH\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2565.316557717585,\n        \"min\": 3578.5,\n        \"max\": 8597.23,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          8597.23,\n          3578.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"new_stat\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34651998.80503252,\n        \"min\": 3690148.1737333345,\n        \"max\": 71887372.96929169,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          71887372.96929169,\n          3690148.1737333345\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["earnings.applymap?"],"metadata":{"id":"mBDAy-lvo5IM"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-FkY34_bYdfF","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666033430117,"user_tz":-180,"elapsed":383,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ae907cbe-c531-4cce-c94a-097a96e315b6"},"source":["# Применять функцию можно и к отдельной колонке. В лямбду приходит отдельное значение колонки\n","earnings['BTC+100500'] = earnings['BTC'].apply(lambda money: money + 100500)\n","earnings"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               BTC     DOGE      ADA      ETH      new_stat  BTC+100500\n","yesterday  7629.39  9357.49  1661.30  8597.23  7.188737e+07   108129.39\n","today       560.68      NaN    10.46  3578.50  3.690148e+06   101060.68\n","tomorrow    487.38  7560.38  1090.87  5164.93  2.710527e+07   100987.38"],"text/html":["\n","  <div id=\"df-e38426f5-de38-4666-a189-376c653afd0f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","      <th>BTC+100500</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>7629.39</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","      <td>108129.39</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>560.68</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","      <td>101060.68</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>487.38</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","      <td>2.710527e+07</td>\n","      <td>100987.38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e38426f5-de38-4666-a189-376c653afd0f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e38426f5-de38-4666-a189-376c653afd0f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e38426f5-de38-4666-a189-376c653afd0f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":249}]},{"cell_type":"code","source":["earnings.apply(lambda money: money.std() ** 2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9FPzop0bv4_S","executionInfo":{"status":"ok","timestamp":1649697708719,"user_tz":-180,"elapsed":367,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"7abc1941-202f-4747-a662-c647f47a4f20"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["BTC           1.683006e+07\n","DOGE          1.614802e+06\n","ADA           7.029915e+05\n","ETH           6.580849e+06\n","new_stat      1.200761e+15\n","BTC+100500    1.683006e+07\n","dtype: float64"]},"metadata":{},"execution_count":276}]},{"cell_type":"code","metadata":{"id":"UnfI632rYdfF","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666033541171,"user_tz":-180,"elapsed":262,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4bf2dd9c-eb1f-4bcf-aed4-8ab688a09ef7"},"source":["# Если нужно взаимодействие между колонками - применяйте apply row-wise (по строкам)\n","earnings['BTC'] = earnings.apply(lambda x: x['BTC'] + x.DOGE, axis = 1)\n","earnings"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                BTC     DOGE      ADA      ETH      new_stat  BTC+100500\n","yesterday  26344.37  9357.49  1661.30  8597.23  7.188737e+07   108129.39\n","today           NaN      NaN    10.46  3578.50  3.690148e+06   101060.68\n","tomorrow   15608.14  7560.38  1090.87  5164.93  2.710527e+07   100987.38"],"text/html":["\n","  <div id=\"df-f00e5831-530e-4e81-9524-1294cc885b8d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","      <th>BTC+100500</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>26344.37</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","      <td>108129.39</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","      <td>101060.68</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>15608.14</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","      <td>2.710527e+07</td>\n","      <td>100987.38</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f00e5831-530e-4e81-9524-1294cc885b8d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f00e5831-530e-4e81-9524-1294cc885b8d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f00e5831-530e-4e81-9524-1294cc885b8d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":251}]},{"cell_type":"code","source":["earnings['DOGE_PLUS'] = earnings.DOGE + earnings.ADA\n","earnings"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"OPeA_3uqw044","executionInfo":{"status":"ok","timestamp":1666033563380,"user_tz":-180,"elapsed":456,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"00ab993e-9564-4ef6-d705-67cf28079ff0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                BTC     DOGE      ADA      ETH      new_stat  BTC+100500  \\\n","yesterday  26344.37  9357.49  1661.30  8597.23  7.188737e+07   108129.39   \n","today           NaN      NaN    10.46  3578.50  3.690148e+06   101060.68   \n","tomorrow   15608.14  7560.38  1090.87  5164.93  2.710527e+07   100987.38   \n","\n","           DOGE_PLUS  \n","yesterday   11018.79  \n","today            NaN  \n","tomorrow     8651.25  "],"text/html":["\n","  <div id=\"df-a8eb8e1c-ade0-4422-97b0-b33f29a3de78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BTC</th>\n","      <th>DOGE</th>\n","      <th>ADA</th>\n","      <th>ETH</th>\n","      <th>new_stat</th>\n","      <th>BTC+100500</th>\n","      <th>DOGE_PLUS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>yesterday</th>\n","      <td>26344.37</td>\n","      <td>9357.49</td>\n","      <td>1661.30</td>\n","      <td>8597.23</td>\n","      <td>7.188737e+07</td>\n","      <td>108129.39</td>\n","      <td>11018.79</td>\n","    </tr>\n","    <tr>\n","      <th>today</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.46</td>\n","      <td>3578.50</td>\n","      <td>3.690148e+06</td>\n","      <td>101060.68</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>tomorrow</th>\n","      <td>15608.14</td>\n","      <td>7560.38</td>\n","      <td>1090.87</td>\n","      <td>5164.93</td>\n","      <td>2.710527e+07</td>\n","      <td>100987.38</td>\n","      <td>8651.25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8eb8e1c-ade0-4422-97b0-b33f29a3de78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a8eb8e1c-ade0-4422-97b0-b33f29a3de78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a8eb8e1c-ade0-4422-97b0-b33f29a3de78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":252}]},{"cell_type":"code","source":["earnings['DOGE PLUS'] = earnings.DOGE + earnings.ADA"],"metadata":{"id":"Jv8R6wTGqWjj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["earnings.DOGE PLUS"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":133},"id":"URkOK0RXqY1e","executionInfo":{"status":"error","timestamp":1666033580327,"user_tz":-180,"elapsed":265,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"7ade4bf3-3944-4577-b8d5-9d175dddc5f3"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-254-f14a543d3d6a>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    earnings.DOGE PLUS\u001b[0m\n\u001b[0m                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","metadata":{"id":"N3Uo9TN8YdfG"},"source":["**Примечание:** Не забудьте самостоятельно посмотреть метод pipe"]},{"cell_type":"code","metadata":{"id":"CL7l8DloYdfG"},"source":["earnings.pipe?"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dtua7B-jYdfG"},"source":["del earnings"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oIvoNWI_YdfG"},"source":["## Работа со строковыми колонками"]},{"cell_type":"markdown","metadata":{"id":"IOSOgluIYdfG"},"source":["На данный момент для работы со строковыми колонками нам пришлось бы постоянно использовать метод apply. Это неудобно и поэтому в pandas сделали удобный инструмент для манипуляций со строками"]},{"cell_type":"code","metadata":{"id":"c1hsqyjyYdfG","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649691110770,"user_tz":-180,"elapsed":978,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"76847a23-682b-4db9-ff4b-b7b30e8eebea"},"source":["taxonomy = pd.DataFrame(\n","    data=[['BTC', 'Bitcoin'],['LTC', 'Litecoin'], ['ETC', 'Etherium'], ['DOGE', 'Doge coin']],\n","    columns=['symbol', 'name']\n",")\n","taxonomy"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol       name\n","0    BTC    Bitcoin\n","1    LTC   Litecoin\n","2    ETC   Etherium\n","3   DOGE  Doge coin"],"text/html":["\n","  <div id=\"df-fb719415-943a-46ab-8717-84a2a88b6f78\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETC</td>\n","      <td>Etherium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>Doge coin</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb719415-943a-46ab-8717-84a2a88b6f78')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fb719415-943a-46ab-8717-84a2a88b6f78 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fb719415-943a-46ab-8717-84a2a88b6f78');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":103}]},{"cell_type":"markdown","metadata":{"id":"uj91ABm7YdfH"},"source":["Чтобы применять строковые функции к колонке надо обратиться к свойству .str."]},{"cell_type":"code","metadata":{"id":"EqpmvLD5YdfH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691111204,"user_tz":-180,"elapsed":15,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"f73cf4e0-86a0-4cd5-9df4-fb9f53dfdbe1"},"source":["# Привести все к нижнему регистру\n","taxonomy['symbol'].str.lower()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     btc\n","1     ltc\n","2     etc\n","3    doge\n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","metadata":{"id":"gRJeswf0YdfH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691114841,"user_tz":-180,"elapsed":404,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"f157aae7-302a-43a3-963b-fb96e8fc9fcc"},"source":["# Привести все к верхнему регистру\n","taxonomy['name'].str.upper()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      BITCOIN\n","1     LITECOIN\n","2     ETHERIUM\n","3    DOGE COIN\n","Name: name, dtype: object"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","metadata":{"id":"dYoh7orkGMvr","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1649691116319,"user_tz":-180,"elapsed":33,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"222655a6-007a-4d41-9b5e-5e7b19adda4f"},"source":["taxonomy"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol       name\n","0    BTC    Bitcoin\n","1    LTC   Litecoin\n","2    ETC   Etherium\n","3   DOGE  Doge coin"],"text/html":["\n","  <div id=\"df-6110820e-899b-4591-aedc-ea90cca476be\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETC</td>\n","      <td>Etherium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>Doge coin</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6110820e-899b-4591-aedc-ea90cca476be')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6110820e-899b-4591-aedc-ea90cca476be button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6110820e-899b-4591-aedc-ea90cca476be');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":106}]},{"cell_type":"code","metadata":{"id":"ckXpFySwYdfH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691118786,"user_tz":-180,"elapsed":11,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"caefbf48-0f2c-45b9-ef34-38b065be6389"},"source":["# Длины строк\n","taxonomy['symbol'].str.len()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    3\n","1    3\n","2    3\n","3    4\n","Name: symbol, dtype: int64"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","metadata":{"id":"ko-LvAHUYdfI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691121358,"user_tz":-180,"elapsed":15,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"d0d83a2b-0802-4e22-edf2-2ae8ac4f5da5"},"source":["# Убрать по краям пробельные символы\n","taxonomy['name'].str.strip()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      Bitcoin\n","1     Litecoin\n","2     Etherium\n","3    Doge coin\n","Name: name, dtype: object"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","metadata":{"id":"H16DO0uwYdfI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691136053,"user_tz":-180,"elapsed":711,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"5bf281a9-4a90-40fa-d608-b3678c034c5e"},"source":["# Разбить строки по заданному символу\n","taxonomy['name'].str.split(' ')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       [Bitcoin]\n","1      [Litecoin]\n","2      [Etherium]\n","3    [Doge, coin]\n","Name: name, dtype: object"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","metadata":{"id":"xfJ5370QYdfI","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1649691136059,"user_tz":-180,"elapsed":131,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"bd5a5c0c-86b9-4e17-ffd8-820971b2bad2"},"source":["# Склеить все строки в одну. Аналог str.join\n","taxonomy['symbol'].str.cat(sep=' $$$ ')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'BTC $$$ LTC $$$ ETC $$$ DOGE'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["taxonomy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"Sphm3FBdzKVS","executionInfo":{"status":"ok","timestamp":1649691136064,"user_tz":-180,"elapsed":110,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"529cfeba-c6d3-475c-8330-1b57a1e4cac4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol       name\n","0    BTC    Bitcoin\n","1    LTC   Litecoin\n","2    ETC   Etherium\n","3   DOGE  Doge coin"],"text/html":["\n","  <div id=\"df-668e8ad8-8699-4009-a1bf-ed71b4fd1315\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETC</td>\n","      <td>Etherium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>Doge coin</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-668e8ad8-8699-4009-a1bf-ed71b4fd1315')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-668e8ad8-8699-4009-a1bf-ed71b4fd1315 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-668e8ad8-8699-4009-a1bf-ed71b4fd1315');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":111}]},{"cell_type":"code","metadata":{"id":"1LaZRak6YdfI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691144479,"user_tz":-180,"elapsed":357,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"137544a7-562e-47a1-aa52-6ef4279bbe1c"},"source":["# Найти везде подстроку\n","taxonomy['name'].str.contains('coin')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     True\n","1     True\n","2    False\n","3     True\n","Name: name, dtype: bool"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","metadata":{"id":"Ts1G4tYDHZnR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691423638,"user_tz":-180,"elapsed":487,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"2a4c1003-e719-4c83-f50a-9e6acb8712d4"},"source":["~taxonomy['name'].str.contains('coin')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    False\n","1    False\n","2     True\n","3    False\n","Name: name, dtype: bool"]},"metadata":{},"execution_count":113}]},{"cell_type":"code","metadata":{"id":"dC0PO3oGHLal","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1649691425931,"user_tz":-180,"elapsed":47,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"186b8643-fee4-43ab-9557-f25f66f0cb9f"},"source":["taxonomy[~taxonomy['name'].str.contains('coin')]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol      name\n","2    ETC  Etherium"],"text/html":["\n","  <div id=\"df-e3beef3f-6e1b-42d6-8a8e-beaaf017411b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>ETC</td>\n","      <td>Etherium</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3beef3f-6e1b-42d6-8a8e-beaaf017411b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e3beef3f-6e1b-42d6-8a8e-beaaf017411b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e3beef3f-6e1b-42d6-8a8e-beaaf017411b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":114}]},{"cell_type":"code","metadata":{"id":"SVLcUxnTYdfJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691428895,"user_tz":-180,"elapsed":40,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"e72f3d89-6f44-4fa7-8444-a948b9a07dd4"},"source":["# Везде заменить строку на другую\n","taxonomy['name'].str.replace('coin', 'dough')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      Bitdough\n","1     Litedough\n","2      Etherium\n","3    Doge dough\n","Name: name, dtype: object"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","metadata":{"id":"fm-g9juqHuDs"},"source":["taxonomy['name'].str.replace?"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2f3Q9yCUYdfJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649698959095,"user_tz":-180,"elapsed":383,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"f8c5f1b3-cc84-46f7-feb0-76c841cec04d"},"source":["# Повторить каждую строку указанное число раз\n","taxonomy['symbol'].str.repeat(2)\n","#taxonomy['symbol'].str.repeat(-3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    \n","1    \n","2    \n","3    \n","Name: symbol, dtype: object"]},"metadata":{},"execution_count":290}]},{"cell_type":"code","source":["taxonomy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"G9cbUZ_a1ccV","executionInfo":{"status":"ok","timestamp":1649698969841,"user_tz":-180,"elapsed":389,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"dc74431d-8cae-430e-c073-e0b8fbbc719a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol       name\n","0    BTC    Bitcoin\n","1    LTC   Litecoin\n","2    ETC   Etherium\n","3   DOGE  Doge coin"],"text/html":["\n","  <div id=\"df-feaa15d4-40b2-4aef-a47d-e59bd70d3276\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETC</td>\n","      <td>Etherium</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>Doge coin</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-feaa15d4-40b2-4aef-a47d-e59bd70d3276')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-feaa15d4-40b2-4aef-a47d-e59bd70d3276 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-feaa15d4-40b2-4aef-a47d-e59bd70d3276');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":291}]},{"cell_type":"code","metadata":{"id":"MNXkilChYdfJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691458936,"user_tz":-180,"elapsed":432,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"d30b6c31-bdb7-4342-da00-6a37a8054803"},"source":["# Посчитать все появления указанной подстроки\n","taxonomy['name'].str.lower().str.count('e')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    0\n","1    1\n","2    2\n","3    1\n","Name: name, dtype: int64"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","metadata":{"id":"tGaEKpzAYdfJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691460654,"user_tz":-180,"elapsed":11,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"f9d9c82f-67d9-4fca-8f5d-e71a1549ab30"},"source":["# Проверка наличия префикса\n","taxonomy['symbol'].str.startswith('B')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     True\n","1    False\n","2    False\n","3    False\n","Name: symbol, dtype: bool"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","metadata":{"id":"KyhK12kzYdfK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691462444,"user_tz":-180,"elapsed":20,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"f5b7559d-7d0a-4874-d2f1-25ae4c1659b9"},"source":["# Проверка наличия суффикса\n","taxonomy['symbol'].str.endswith('TC')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     True\n","1     True\n","2     True\n","3    False\n","Name: symbol, dtype: bool"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","metadata":{"id":"LoDLhT6zYdfK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691464191,"user_tz":-180,"elapsed":8,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"af8345b1-2cdd-4e70-9e01-fa3779fd17d4"},"source":["# Найти место в строках где начинается искомая строка.\n","taxonomy['name'].str.find('coin')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    3\n","1    4\n","2   -1\n","3    5\n","Name: name, dtype: int64"]},"metadata":{},"execution_count":122}]},{"cell_type":"code","metadata":{"id":"6mSowmt1YdfK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691466504,"user_tz":-180,"elapsed":16,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"3b35e086-26c0-41c7-9cdd-320c5c4d74c4"},"source":["# Проверка верхнего регистра\n","taxonomy['symbol'].str.isupper()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    True\n","1    True\n","2    True\n","3    True\n","Name: symbol, dtype: bool"]},"metadata":{},"execution_count":123}]},{"cell_type":"code","metadata":{"id":"0i18kZAYYdfK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691466994,"user_tz":-180,"elapsed":5,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"64df10ce-a456-40a8-dd09-4ab8d2e2a3f2"},"source":["# Проверка нижнего регистра\n","taxonomy['symbol'].str.islower()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    False\n","1    False\n","2    False\n","3    False\n","Name: symbol, dtype: bool"]},"metadata":{},"execution_count":124}]},{"cell_type":"code","metadata":{"id":"ABn-mZqBYdfL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649691469368,"user_tz":-180,"elapsed":395,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"57d345f7-af05-493e-8c62-cda8fd70619b"},"source":["# Проверка что все символы - цифры\n","taxonomy['name'].str.isnumeric()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    False\n","1    False\n","2    False\n","3    False\n","Name: name, dtype: bool"]},"metadata":{},"execution_count":125}]},{"cell_type":"code","metadata":{"id":"ZP_7BkrTYdfL","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649699223124,"user_tz":-180,"elapsed":7,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"01bdf9f4-471a-40c4-9020-41894ed20af6"},"source":["#Посмотреть все возможные проверки\n","help(taxonomy['name'].str.isnumeric)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on method isnumeric in module pandas.core.strings.accessor:\n","\n","isnumeric() method of pandas.core.strings.accessor.StringMethods instance\n","    Check whether all characters in each string are numeric.\n","    \n","    This is equivalent to running the Python string method\n","    :meth:`str.isnumeric` for each element of the Series/Index. If a string\n","    has zero characters, ``False`` is returned for that check.\n","    \n","    Returns\n","    -------\n","    Series or Index of bool\n","        Series or Index of boolean values with the same length as the original\n","        Series/Index.\n","    \n","    See Also\n","    --------\n","    Series.str.isalpha : Check whether all characters are alphabetic.\n","    Series.str.isnumeric : Check whether all characters are numeric.\n","    Series.str.isalnum : Check whether all characters are alphanumeric.\n","    Series.str.isdigit : Check whether all characters are digits.\n","    Series.str.isdecimal : Check whether all characters are decimal.\n","    Series.str.isspace : Check whether all characters are whitespace.\n","    Series.str.islower : Check whether all characters are lowercase.\n","    Series.str.isupper : Check whether all characters are uppercase.\n","    Series.str.istitle : Check whether all characters are titlecase.\n","    \n","    Examples\n","    --------\n","    **Checks for Alphabetic and Numeric Characters**\n","    \n","    >>> s1 = pd.Series(['one', 'one1', '1', ''])\n","    \n","    >>> s1.str.isalpha()\n","    0     True\n","    1    False\n","    2    False\n","    3    False\n","    dtype: bool\n","    \n","    >>> s1.str.isnumeric()\n","    0    False\n","    1    False\n","    2     True\n","    3    False\n","    dtype: bool\n","    \n","    >>> s1.str.isalnum()\n","    0     True\n","    1     True\n","    2     True\n","    3    False\n","    dtype: bool\n","    \n","    Note that checks against characters mixed with any additional punctuation\n","    or whitespace will evaluate to false for an alphanumeric check.\n","    \n","    >>> s2 = pd.Series(['A B', '1.5', '3,000'])\n","    >>> s2.str.isalnum()\n","    0    False\n","    1    False\n","    2    False\n","    dtype: bool\n","    \n","    **More Detailed Checks for Numeric Characters**\n","    \n","    There are several different but overlapping sets of numeric characters that\n","    can be checked for.\n","    \n","    >>> s3 = pd.Series(['23', '³', '⅕', ''])\n","    \n","    The ``s3.str.isdecimal`` method checks for characters used to form numbers\n","    in base 10.\n","    \n","    >>> s3.str.isdecimal()\n","    0     True\n","    1    False\n","    2    False\n","    3    False\n","    dtype: bool\n","    \n","    The ``s.str.isdigit`` method is the same as ``s3.str.isdecimal`` but also\n","    includes special digits, like superscripted and subscripted digits in\n","    unicode.\n","    \n","    >>> s3.str.isdigit()\n","    0     True\n","    1     True\n","    2    False\n","    3    False\n","    dtype: bool\n","    \n","    The ``s.str.isnumeric`` method is the same as ``s3.str.isdigit`` but also\n","    includes other characters that can represent quantities such as unicode\n","    fractions.\n","    \n","    >>> s3.str.isnumeric()\n","    0     True\n","    1     True\n","    2     True\n","    3    False\n","    dtype: bool\n","    \n","    **Checks for Whitespace**\n","    \n","    >>> s4 = pd.Series([' ', '\\t\\r\\n ', ''])\n","    >>> s4.str.isspace()\n","    0     True\n","    1     True\n","    2    False\n","    dtype: bool\n","    \n","    **Checks for Character Case**\n","    \n","    >>> s5 = pd.Series(['leopard', 'Golden Eagle', 'SNAKE', ''])\n","    \n","    >>> s5.str.islower()\n","    0     True\n","    1    False\n","    2    False\n","    3    False\n","    dtype: bool\n","    \n","    >>> s5.str.isupper()\n","    0    False\n","    1    False\n","    2     True\n","    3    False\n","    dtype: bool\n","    \n","    The ``s5.str.istitle`` method checks for whether all words are in title\n","    case (whether only the first letter of each word is capitalized). Words are\n","    assumed to be as any sequence of non-numeric characters separated by\n","    whitespace characters.\n","    \n","    >>> s5.str.istitle()\n","    0    False\n","    1     True\n","    2    False\n","    3    False\n","    dtype: bool\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"IRZXDd44YdfL"},"source":["# Агрегации, трансформации и фильтрации"]},{"cell_type":"markdown","metadata":{"id":"FdzduYwPYdfL"},"source":["## Скользящие окна"]},{"cell_type":"markdown","metadata":{"id":"-WFB8Y-eYdfL"},"source":["Мы начнем со специального случая аггрегаций данных - оконных функций. Мы поговорим о методах rolling и emw. Самостоятельно посмотрите что делает expanding."]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"pnUifcGeCMAI"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lmbDfAUpYdfM","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666196244371,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"78d96bea-a8a7-4b2f-ff0d-26358c59c1ce"},"source":["price = pd.DataFrame(\n","    data=[\n","        [0.547, 0.745],\n","        [0.5, 0.964],\n","        [0.77, 0.718],\n","        [0.135, 0.845],\n","        [0.53, None],\n","        [0.15, 0.795]],\n","    columns=['ADA', 'DOGE'],\n","    # Создаем специальный индекс из 6 дней начиная с 2018-11-01\n","    index=pd.date_range('2018-11-01', periods=6)\n",")\n","price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02  0.500  0.964\n","2018-11-03  0.770  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06  0.150  0.795"],"text/html":["\n","  <div id=\"df-7e92e9c0-b0a0-4e7f-8290-ded82cff0297\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.500</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.770</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.150</td>\n","      <td>0.795</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e92e9c0-b0a0-4e7f-8290-ded82cff0297')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7e92e9c0-b0a0-4e7f-8290-ded82cff0297 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7e92e9c0-b0a0-4e7f-8290-ded82cff0297');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"H8uZzHRLYdfM"},"source":["Если вы хотите посчитать какую-нибудь статистическую функци (sum, mean, median, std) в скользящем окне. То есть методы rolling (обычное окно) и ewm (окно с экспоненциальным сглаживанием). Они возвращают специальные объекты которые могут аггрегировать используя стандартную или пользователскую функцию."]},{"cell_type":"code","source":["price.rolling(window=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5kk7_XZv9Ccr","executionInfo":{"status":"ok","timestamp":1666196323885,"user_tz":-180,"elapsed":335,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3942fa0b-1c32-401d-c785-97014080bece"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Rolling [window=2,center=False,axis=0,method=single]"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"E351TgzxYdfM","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666196574736,"user_tz":-180,"elapsed":360,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"28b3d805-d6df-4af1-d98b-1ed4a45ebbb9"},"source":["# Найти скользящее стандартное отклонение\n","price.rolling(window=2).std()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA\n","2018-11-01       NaN\n","2018-11-02       NaN\n","2018-11-03  0.605667\n","2018-11-04  0.468333\n","2018-11-05  0.478333\n","2018-11-06  0.271667"],"text/html":["\n","  <div id=\"df-479ecac9-0690-4e19-ad9c-2127592f62f8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.605667</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.468333</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.478333</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.271667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-479ecac9-0690-4e19-ad9c-2127592f62f8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-479ecac9-0690-4e19-ad9c-2127592f62f8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-479ecac9-0690-4e19-ad9c-2127592f62f8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["price[['ADA']].rolling(window=3).mean()"],"metadata":{"id":"IkBDYwX8DkgY"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LuWsjeF5YdfN","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666196728954,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ac4579e8-4a09-4f91-f9c0-7cafb40c874b"},"source":["# Сделать агрегацию c пользовательской функцией\n","price.rolling(window=4).agg(lambda series: sum(series ** 2))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA     DOGE\n","2018-11-01       NaN      NaN\n","2018-11-02       NaN      NaN\n","2018-11-03       NaN      NaN\n","2018-11-04  1.160334  2.71387\n","2018-11-05  1.142025      NaN\n","2018-11-06  0.914525      NaN"],"text/html":["\n","  <div id=\"df-695fa867-4487-4698-ad64-8479468965cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>1.160334</td>\n","      <td>2.71387</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>1.142025</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.914525</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-695fa867-4487-4698-ad64-8479468965cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-695fa867-4487-4698-ad64-8479468965cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-695fa867-4487-4698-ad64-8479468965cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"4ZtFIe-sYdfN","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666196762127,"user_tz":-180,"elapsed":381,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"02d5bbb0-3d57-4b4e-da06-9ff9b926583a"},"source":["# Сделать агрегацию по имени функции\n","price.rolling(window=2).agg('max')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01    NaN    NaN\n","2018-11-02  0.547  0.964\n","2018-11-03  0.770  0.964\n","2018-11-04  0.770  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06  0.530    NaN"],"text/html":["\n","  <div id=\"df-1f36743e-8596-455e-8249-839dc27843ff\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.547</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.770</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.770</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f36743e-8596-455e-8249-839dc27843ff')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1f36743e-8596-455e-8249-839dc27843ff button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1f36743e-8596-455e-8249-839dc27843ff');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["**Примечание:** non-maximal supression"],"metadata":{"id":"MMi-A5fbExzX"}},{"cell_type":"code","metadata":{"id":"qg7ybm4MYdfN","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1666197273569,"user_tz":-180,"elapsed":268,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9d84de45-deb2-43f7-8144-586c90cf2c93"},"source":["# Сделать несколько агрегаций\n","price.rolling(window=2).agg(['mean', sum, lambda series: max(series ** 2)])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA                  DOGE               \n","              sum  len  <lambda>    sum  len  <lambda>\n","2018-11-01    NaN  NaN       NaN    NaN  NaN       NaN\n","2018-11-02  1.047  2.0  0.299209  1.709  2.0  0.929296\n","2018-11-03  1.270  2.0  0.592900  1.682  2.0  0.929296\n","2018-11-04  0.905  2.0  0.592900  1.563  2.0  0.714025\n","2018-11-05  0.665  2.0  0.280900    NaN  NaN       NaN\n","2018-11-06  0.680  2.0  0.280900    NaN  NaN       NaN"],"text/html":["\n","  <div id=\"df-d5dfcde1-fc16-4677-bd41-8c996f3137e8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"3\" halign=\"left\">ADA</th>\n","      <th colspan=\"3\" halign=\"left\">DOGE</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>sum</th>\n","      <th>len</th>\n","      <th>&lt;lambda&gt;</th>\n","      <th>sum</th>\n","      <th>len</th>\n","      <th>&lt;lambda&gt;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>1.047</td>\n","      <td>2.0</td>\n","      <td>0.299209</td>\n","      <td>1.709</td>\n","      <td>2.0</td>\n","      <td>0.929296</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>1.270</td>\n","      <td>2.0</td>\n","      <td>0.592900</td>\n","      <td>1.682</td>\n","      <td>2.0</td>\n","      <td>0.929296</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.905</td>\n","      <td>2.0</td>\n","      <td>0.592900</td>\n","      <td>1.563</td>\n","      <td>2.0</td>\n","      <td>0.714025</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.665</td>\n","      <td>2.0</td>\n","      <td>0.280900</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.680</td>\n","      <td>2.0</td>\n","      <td>0.280900</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5dfcde1-fc16-4677-bd41-8c996f3137e8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d5dfcde1-fc16-4677-bd41-8c996f3137e8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d5dfcde1-fc16-4677-bd41-8c996f3137e8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["new_price = price.rolling(window=2).agg(['mean', sum, lambda series: max(series ** 2)])\n","type(new_price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0zIIIzFtw-Kd","executionInfo":{"status":"ok","timestamp":1666197291265,"user_tz":-180,"elapsed":266,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"af2e2c3b-426b-4429-d468-50c910e9bb05"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"ZCGwA7VFJIDb","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666197317921,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a4ecc8bd-0cd0-455d-cfd6-96c2d8ecd6ee"},"source":["price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02  0.500  0.964\n","2018-11-03  0.770  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06  0.150  0.795"],"text/html":["\n","  <div id=\"df-49f3d2a7-a16f-4528-b032-6f8c98713adb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.500</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.770</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.150</td>\n","      <td>0.795</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-49f3d2a7-a16f-4528-b032-6f8c98713adb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-49f3d2a7-a16f-4528-b032-6f8c98713adb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-49f3d2a7-a16f-4528-b032-6f8c98713adb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"KaCWnT43YdfO","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1666197394800,"user_tz":-180,"elapsed":377,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8c0d1cfe-0443-47d5-f8d3-951604e04ec6"},"source":["# Сделать несколько агрегаций (для каждой колонки свои)\n","price.rolling(window=3).agg({'ADA': [sum, max], 'DOGE': lambda series: max(series ** 2)})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA            DOGE\n","              sum   max  <lambda>\n","2018-11-01    NaN   NaN       NaN\n","2018-11-02    NaN   NaN       NaN\n","2018-11-03  1.817  0.77  0.929296\n","2018-11-04  1.405  0.77  0.929296\n","2018-11-05  1.435  0.77       NaN\n","2018-11-06  0.815  0.53       NaN"],"text/html":["\n","  <div id=\"df-4723422f-c963-4b44-aa88-cf07377332cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"2\" halign=\"left\">ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>sum</th>\n","      <th>max</th>\n","      <th>&lt;lambda&gt;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>1.817</td>\n","      <td>0.77</td>\n","      <td>0.929296</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>1.405</td>\n","      <td>0.77</td>\n","      <td>0.929296</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>1.435</td>\n","      <td>0.77</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.815</td>\n","      <td>0.53</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4723422f-c963-4b44-aa88-cf07377332cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4723422f-c963-4b44-aa88-cf07377332cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4723422f-c963-4b44-aa88-cf07377332cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"3MeP8luoYdfO"},"source":["Объект ewm работает аналогично rolling с тем лишь отличием, что он назначает веса. Числам $x_0,\\ldots,x_t$ будут назначены веса $(1-\\alpha)^t, (1-\\alpha)^{t-1}, \\ldots, 1$, где $\\alpha$ - параметр сглаживания. Например, экспоненциальное скользящее среднее будет вычисляться по формуле\n","$$\n","ewm_{\\alpha}(x)=\\frac{\\sum_{i=0}^t (1-\\alpha)^{t-i} x_i}{\\sum_{i=0}^t(1-\\alpha)^i}\n","$$\n","\n","\n","Если указать **adjust=False**, подсчёт будет идти рекурсивно: ```mean[i] = (1-alpha)*mean[i-1] + alpha*x[i]```"]},{"cell_type":"code","source":["price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"wyTvXeanIiuC","executionInfo":{"status":"ok","timestamp":1666197893662,"user_tz":-180,"elapsed":345,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fbc8af85-d0cc-4683-e597-a7e10abfe3f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02  0.500  0.964\n","2018-11-03  0.770  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06  0.150  0.795"],"text/html":["\n","  <div id=\"df-361a7efc-85f6-4049-b0f8-3ca915261a32\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.500</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.770</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.150</td>\n","      <td>0.795</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-361a7efc-85f6-4049-b0f8-3ca915261a32')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-361a7efc-85f6-4049-b0f8-3ca915261a32 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-361a7efc-85f6-4049-b0f8-3ca915261a32');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"vXD6cXFJYdfO","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666197882940,"user_tz":-180,"elapsed":264,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2968eacd-53cd-46f3-8716-32577e4b43da"},"source":["# Скользящее среднее cо сглаживанием alpha\n","price.ewm(alpha=0.1, adjust=True).mean()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA      DOGE\n","2018-11-01  0.547000  0.745000\n","2018-11-02  0.522263  0.860263\n","2018-11-03  0.613679  0.807768\n","2018-11-04  0.474488  0.818594\n","2018-11-05  0.488043  0.818594\n","2018-11-06  0.415898  0.812361"],"text/html":["\n","  <div id=\"df-690617cb-41e1-45dd-be23-46ff664e53d5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547000</td>\n","      <td>0.745000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.522263</td>\n","      <td>0.860263</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.613679</td>\n","      <td>0.807768</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.474488</td>\n","      <td>0.818594</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.488043</td>\n","      <td>0.818594</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.415898</td>\n","      <td>0.812361</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-690617cb-41e1-45dd-be23-46ff664e53d5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-690617cb-41e1-45dd-be23-46ff664e53d5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-690617cb-41e1-45dd-be23-46ff664e53d5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["price.ewm(alpha=0.9, adjust=True).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"bs9YFANTIdl9","executionInfo":{"status":"ok","timestamp":1666197884374,"user_tz":-180,"elapsed":305,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"22a69b2b-ecaf-4f2d-8fab-b4e0c28cc79e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA      DOGE\n","2018-11-01  0.547000  0.745000\n","2018-11-02  0.504273  0.944091\n","2018-11-03  0.743667  0.740405\n","2018-11-04  0.195812  0.834550\n","2018-11-05  0.496584  0.834550\n","2018-11-06  0.184658  0.795435"],"text/html":["\n","  <div id=\"df-b0b1b66d-b6ff-4db0-9808-a6f684d234b3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547000</td>\n","      <td>0.745000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.504273</td>\n","      <td>0.944091</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.743667</td>\n","      <td>0.740405</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.195812</td>\n","      <td>0.834550</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.496584</td>\n","      <td>0.834550</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.184658</td>\n","      <td>0.795435</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0b1b66d-b6ff-4db0-9808-a6f684d234b3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b0b1b66d-b6ff-4db0-9808-a6f684d234b3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b0b1b66d-b6ff-4db0-9808-a6f684d234b3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["price.ewm(alpha=0.5, adjust=True).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"shoL8tzQy4Wt","executionInfo":{"status":"ok","timestamp":1666198082333,"user_tz":-180,"elapsed":243,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"eeb2afac-0858-4b1e-e413-1013a4893eff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA      DOGE\n","2018-11-01  0.547000  0.745000\n","2018-11-02  0.515667  0.891000\n","2018-11-03  0.661000  0.792143\n","2018-11-04  0.380467  0.820333\n","2018-11-05  0.457645  0.820333\n","2018-11-06  0.301381  0.803085"],"text/html":["\n","  <div id=\"df-aab5f71c-18f3-4544-ae5f-41c2cb82bdd0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547000</td>\n","      <td>0.745000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.515667</td>\n","      <td>0.891000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.661000</td>\n","      <td>0.792143</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.380467</td>\n","      <td>0.820333</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.457645</td>\n","      <td>0.820333</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.301381</td>\n","      <td>0.803085</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aab5f71c-18f3-4544-ae5f-41c2cb82bdd0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-aab5f71c-18f3-4544-ae5f-41c2cb82bdd0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-aab5f71c-18f3-4544-ae5f-41c2cb82bdd0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["price.ewm(alpha=0.5, adjust=False).mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"AzxC5MdnJN13","executionInfo":{"status":"ok","timestamp":1666198082828,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f561deb6-e9e5-4323-af60-5b961f000c6c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 ADA      DOGE\n","2018-11-01  0.547000  0.745000\n","2018-11-02  0.523500  0.854500\n","2018-11-03  0.646750  0.786250\n","2018-11-04  0.390875  0.815625\n","2018-11-05  0.460438  0.815625\n","2018-11-06  0.305219  0.801875"],"text/html":["\n","  <div id=\"df-6fea7d66-cdaa-46c2-9039-d7b06638f82e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547000</td>\n","      <td>0.745000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.523500</td>\n","      <td>0.854500</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.646750</td>\n","      <td>0.786250</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.390875</td>\n","      <td>0.815625</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.460438</td>\n","      <td>0.815625</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.305219</td>\n","      <td>0.801875</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6fea7d66-cdaa-46c2-9039-d7b06638f82e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6fea7d66-cdaa-46c2-9039-d7b06638f82e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6fea7d66-cdaa-46c2-9039-d7b06638f82e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"8NjAPS6tYdfO"},"source":["del price"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vycJQ7fRYdfP"},"source":["## Работа с группами"]},{"cell_type":"markdown","metadata":{"id":"4jiYwKJAYdfP"},"source":["Иногда хочется разбить данные по группам и посчитать статистики / преобразовать / пофильтровать. Для этого есть метод **groupby**. Он возвращает специальный объект для работы со сгруппированными данными."]},{"cell_type":"code","metadata":{"id":"J9J_epH-YdfP","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666198485504,"user_tz":-180,"elapsed":300,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4b620fa5-fa59-4df9-c50d-ff7b1afa3b32"},"source":["operations = pd.DataFrame(\n","    data=[\n","        ['DOGE', 'buy', 5000, 0.2],\n","        ['BTC', 'buy', 10, 6000],\n","        ['BTC', 'buy', 2.5, 5900],\n","        ['DOGE', 'sell', 3000, 0.1],\n","        ['BTC', 'sell', 4, 6200],\n","        ['ETH', 'sell', 10, 400],\n","        ['BTC', 'buy', 1, 5600],\n","        ['ETH', 'buy', 20, 350],\n","        ['ETH', 'sell', 10, 300],\n","        ['DOGE', 'sell', 3000, 0.15]\n","    ],\n","    columns=['symbol', 'type', 'amount', 'price'],\n","    index=pd.date_range('2018-01-01', periods=10)\n",")\n","operations"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  type  amount    price\n","2018-01-01   DOGE   buy  5000.0     0.20\n","2018-01-02    BTC   buy    10.0  6000.00\n","2018-01-03    BTC   buy     2.5  5900.00\n","2018-01-04   DOGE  sell  3000.0     0.10\n","2018-01-05    BTC  sell     4.0  6200.00\n","2018-01-06    ETH  sell    10.0   400.00\n","2018-01-07    BTC   buy     1.0  5600.00\n","2018-01-08    ETH   buy    20.0   350.00\n","2018-01-09    ETH  sell    10.0   300.00\n","2018-01-10   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-5a6babc8-f54d-4789-97ed-3f4ef0a9be50\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-05</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-06</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-07</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-08</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-09</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-10</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a6babc8-f54d-4789-97ed-3f4ef0a9be50')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5a6babc8-f54d-4789-97ed-3f4ef0a9be50 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5a6babc8-f54d-4789-97ed-3f4ef0a9be50');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"irnjLvuJYdfP"},"source":["# Сгруппировать операции по типу монеты\n","link = operations.groupby('symbol')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fbRhoRNLKWMS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666198517878,"user_tz":-180,"elapsed":256,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"797b0368-dd2a-4db1-ae01-fdd4af7236b8"},"source":["link"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe67f575490>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"PAYCFIT6YdfP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666198637592,"user_tz":-180,"elapsed":262,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e30adee2-4fa6-4c3f-b94f-375e112bd856"},"source":["# Сгруппировать операции по типу монеты и типу операции\n","operations.groupby(['symbol', 'type'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.core.groupby.generic.DataFrameGroupBy object at 0x7fe67f57fe10>"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"Gp5hU0HYYdfQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666198714584,"user_tz":-180,"elapsed":305,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d61ed91a-7086-4ddd-e750-76ec16b6439b"},"source":["# Получить индексы строк каждой группы\n","operations.groupby(['symbol', 'type']).groups[('BTC', 'buy')]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DatetimeIndex(['2018-01-02', '2018-01-03', '2018-01-07'], dtype='datetime64[ns]', freq=None)"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"FJ5xwPnrYdfQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666198788004,"user_tz":-180,"elapsed":255,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"30a78e60-557c-4684-de5c-7529af2f10e3"},"source":["# Посмотреть на содержимое каждой группы\n","for name, group in operations.groupby(['symbol', 'type']):\n","    print(name)\n","    print(group)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["('BTC', 'buy')\n","           symbol type  amount   price\n","2018-01-02    BTC  buy    10.0  6000.0\n","2018-01-03    BTC  buy     2.5  5900.0\n","2018-01-07    BTC  buy     1.0  5600.0\n","('BTC', 'sell')\n","           symbol  type  amount   price\n","2018-01-05    BTC  sell     4.0  6200.0\n","('DOGE', 'buy')\n","           symbol type  amount  price\n","2018-01-01   DOGE  buy  5000.0    0.2\n","('DOGE', 'sell')\n","           symbol  type  amount  price\n","2018-01-04   DOGE  sell  3000.0   0.10\n","2018-01-10   DOGE  sell  3000.0   0.15\n","('ETH', 'buy')\n","           symbol type  amount  price\n","2018-01-08    ETH  buy    20.0  350.0\n","('ETH', 'sell')\n","           symbol  type  amount  price\n","2018-01-06    ETH  sell    10.0  400.0\n","2018-01-09    ETH  sell    10.0  300.0\n"]}]},{"cell_type":"code","metadata":{"id":"0OcTBU4SYdfQ","colab":{"base_uri":"https://localhost:8080/","height":143},"executionInfo":{"status":"ok","timestamp":1666198820563,"user_tz":-180,"elapsed":256,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5794b935-fa82-4526-fe95-cf7111e46ac2"},"source":["# Получить группу\n","operations.groupby(['symbol', 'type']).get_group(('BTC', 'buy'))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol type  amount   price\n","2018-01-02    BTC  buy    10.0  6000.0\n","2018-01-03    BTC  buy     2.5  5900.0\n","2018-01-07    BTC  buy     1.0  5600.0"],"text/html":["\n","  <div id=\"df-b005d400-d15e-4f5e-9cba-ad4523ccca98\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.0</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-07</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b005d400-d15e-4f5e-9cba-ad4523ccca98')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b005d400-d15e-4f5e-9cba-ad4523ccca98 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b005d400-d15e-4f5e-9cba-ad4523ccca98');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"tBv4F-n-YdfQ"},"source":["Теперь посмотрим как агрегировать данные для каждой группы"]},{"cell_type":"code","metadata":{"id":"rlQUUSk5YdfQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666199446667,"user_tz":-180,"elapsed":392,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ba8aefac-10f5-4886-d88b-562acdeea9ca"},"source":["# Найти обороты для каждой монеты и операции\n","grouper = operations.groupby(['symbol', 'type'])\n","#grouper['amount'].agg('mean')\n","grouper['amount'].mean()\n","\n","# Есть ещё полезный метод operations.groupby(...).transform(func) - предлагается разобрать самостоятельно"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol  type\n","BTC     buy        4.5\n","        sell       4.0\n","DOGE    buy     5000.0\n","        sell    3000.0\n","ETH     buy       20.0\n","        sell      10.0\n","Name: amount, dtype: float64"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"Mf75qBojYdfR","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1666199099229,"user_tz":-180,"elapsed":261,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4e87735c-56c3-4dd8-d018-78a94c00944f"},"source":["# Найти обороты и самые крупные сделки для каждой монеты и операции\n","grouper = operations.groupby(['symbol', 'type'])\n","grouper['amount'].agg([sum, max])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                sum     max\n","symbol type                \n","BTC    buy     13.5    10.0\n","       sell     4.0     4.0\n","DOGE   buy   5000.0  5000.0\n","       sell  6000.0  3000.0\n","ETH    buy     20.0    20.0\n","       sell    20.0    10.0"],"text/html":["\n","  <div id=\"df-192d361d-694a-4a5a-9795-35ce294109d3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>sum</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">BTC</th>\n","      <th>buy</th>\n","      <td>13.5</td>\n","      <td>10.0</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">DOGE</th>\n","      <th>buy</th>\n","      <td>5000.0</td>\n","      <td>5000.0</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>6000.0</td>\n","      <td>3000.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">ETH</th>\n","      <th>buy</th>\n","      <td>20.0</td>\n","      <td>20.0</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>20.0</td>\n","      <td>10.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-192d361d-694a-4a5a-9795-35ce294109d3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-192d361d-694a-4a5a-9795-35ce294109d3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-192d361d-694a-4a5a-9795-35ce294109d3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"tCwNSTY1YdfR","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1666200213549,"user_tz":-180,"elapsed":254,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5559bb1c-c614-4425-8566-4b086e65ff29"},"source":["# Найти обороты и среднюю цену для каждой монеты и операции\n","grouper = operations.groupby(['symbol', 'type'])\n","grouper.agg({'amount': sum, 'price': ['mean', 'median']})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             amount        price          \n","                sum         mean    median\n","symbol type                               \n","BTC    buy     13.5  5833.333333  5900.000\n","       sell     4.0  6200.000000  6200.000\n","DOGE   buy   5000.0     0.200000     0.200\n","       sell  6000.0     0.125000     0.125\n","ETH    buy     20.0   350.000000   350.000\n","       sell    20.0   350.000000   350.000"],"text/html":["\n","  <div id=\"df-c29a01dd-7faf-4096-8615-6c28a5d3b8ab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>amount</th>\n","      <th colspan=\"2\" halign=\"left\">price</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th>sum</th>\n","      <th>mean</th>\n","      <th>median</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">BTC</th>\n","      <th>buy</th>\n","      <td>13.5</td>\n","      <td>5833.333333</td>\n","      <td>5900.000</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>4.0</td>\n","      <td>6200.000000</td>\n","      <td>6200.000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">DOGE</th>\n","      <th>buy</th>\n","      <td>5000.0</td>\n","      <td>0.200000</td>\n","      <td>0.200</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>6000.0</td>\n","      <td>0.125000</td>\n","      <td>0.125</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">ETH</th>\n","      <th>buy</th>\n","      <td>20.0</td>\n","      <td>350.000000</td>\n","      <td>350.000</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>20.0</td>\n","      <td>350.000000</td>\n","      <td>350.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c29a01dd-7faf-4096-8615-6c28a5d3b8ab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c29a01dd-7faf-4096-8615-6c28a5d3b8ab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c29a01dd-7faf-4096-8615-6c28a5d3b8ab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["grouper.agg({'amount': sum, 'price': pd.DataFrame.mean})"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"tpccZOi2EM0r","executionInfo":{"status":"ok","timestamp":1649701770256,"user_tz":-180,"elapsed":528,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"d0b85b3a-3f26-49d1-865c-420a4b550816"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             amount        price\n","symbol type                     \n","BTC    buy     13.5  5833.333333\n","       sell     4.0  6200.000000\n","DOGE   buy   5000.0     0.200000\n","       sell  6000.0     0.125000\n","ETH    buy     20.0   350.000000\n","       sell    20.0   350.000000"],"text/html":["\n","  <div id=\"df-bad8fe78-0405-40b9-b73a-7994d2fa571e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">BTC</th>\n","      <th>buy</th>\n","      <td>13.5</td>\n","      <td>5833.333333</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>4.0</td>\n","      <td>6200.000000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">DOGE</th>\n","      <th>buy</th>\n","      <td>5000.0</td>\n","      <td>0.200000</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>6000.0</td>\n","      <td>0.125000</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">ETH</th>\n","      <th>buy</th>\n","      <td>20.0</td>\n","      <td>350.000000</td>\n","    </tr>\n","    <tr>\n","      <th>sell</th>\n","      <td>20.0</td>\n","      <td>350.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bad8fe78-0405-40b9-b73a-7994d2fa571e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bad8fe78-0405-40b9-b73a-7994d2fa571e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bad8fe78-0405-40b9-b73a-7994d2fa571e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":328}]},{"cell_type":"code","source":["type(grouper)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d5xhWdPaUkbw","executionInfo":{"status":"ok","timestamp":1666201050041,"user_tz":-180,"elapsed":338,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6be06115-b4a0-4810-cb45-198891f478d4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.groupby.generic.DataFrameGroupBy"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["help(pd.core.groupby.generic.DataFrameGroupBy)"],"metadata":{"id":"E7N5LHQ5UaZm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["help(operations.groupby)"],"metadata":{"id":"m-LS2b5fCeAM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649692548861,"user_tz":-180,"elapsed":357,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"aee58d3a-46a7-402e-a946-9a5be982ffef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on method groupby in module pandas.core.frame:\n","\n","groupby(by=None, axis: 'Axis' = 0, level: 'Level | None' = None, as_index: 'bool' = True, sort: 'bool' = True, group_keys: 'bool' = True, squeeze: 'bool | lib.NoDefault' = <no_default>, observed: 'bool' = False, dropna: 'bool' = True) -> 'DataFrameGroupBy' method of pandas.core.frame.DataFrame instance\n","    Group DataFrame using a mapper or by a Series of columns.\n","    \n","    A groupby operation involves some combination of splitting the\n","    object, applying a function, and combining the results. This can be\n","    used to group large amounts of data and compute operations on these\n","    groups.\n","    \n","    Parameters\n","    ----------\n","    by : mapping, function, label, or list of labels\n","        Used to determine the groups for the groupby.\n","        If ``by`` is a function, it's called on each value of the object's\n","        index. If a dict or Series is passed, the Series or dict VALUES\n","        will be used to determine the groups (the Series' values are first\n","        aligned; see ``.align()`` method). If an ndarray is passed, the\n","        values are used as-is to determine the groups. A label or list of\n","        labels may be passed to group by the columns in ``self``. Notice\n","        that a tuple is interpreted as a (single) key.\n","    axis : {0 or 'index', 1 or 'columns'}, default 0\n","        Split along rows (0) or columns (1).\n","    level : int, level name, or sequence of such, default None\n","        If the axis is a MultiIndex (hierarchical), group by a particular\n","        level or levels.\n","    as_index : bool, default True\n","        For aggregated output, return object with group labels as the\n","        index. Only relevant for DataFrame input. as_index=False is\n","        effectively \"SQL-style\" grouped output.\n","    sort : bool, default True\n","        Sort group keys. Get better performance by turning this off.\n","        Note this does not influence the order of observations within each\n","        group. Groupby preserves the order of rows within each group.\n","    group_keys : bool, default True\n","        When calling apply, add group keys to index to identify pieces.\n","    squeeze : bool, default False\n","        Reduce the dimensionality of the return type if possible,\n","        otherwise return a consistent type.\n","    \n","        .. deprecated:: 1.1.0\n","    \n","    observed : bool, default False\n","        This only applies if any of the groupers are Categoricals.\n","        If True: only show observed values for categorical groupers.\n","        If False: show all values for categorical groupers.\n","    dropna : bool, default True\n","        If True, and if group keys contain NA values, NA values together\n","        with row/column will be dropped.\n","        If False, NA values will also be treated as the key in groups\n","    \n","        .. versionadded:: 1.1.0\n","    \n","    Returns\n","    -------\n","    DataFrameGroupBy\n","        Returns a groupby object that contains information about the groups.\n","    \n","    See Also\n","    --------\n","    resample : Convenience method for frequency conversion and resampling\n","        of time series.\n","    \n","    Notes\n","    -----\n","    See the `user guide\n","    <https://pandas.pydata.org/pandas-docs/stable/groupby.html>`__ for more.\n","    \n","    Examples\n","    --------\n","    >>> df = pd.DataFrame({'Animal': ['Falcon', 'Falcon',\n","    ...                               'Parrot', 'Parrot'],\n","    ...                    'Max Speed': [380., 370., 24., 26.]})\n","    >>> df\n","       Animal  Max Speed\n","    0  Falcon      380.0\n","    1  Falcon      370.0\n","    2  Parrot       24.0\n","    3  Parrot       26.0\n","    >>> df.groupby(['Animal']).mean()\n","            Max Speed\n","    Animal\n","    Falcon      375.0\n","    Parrot       25.0\n","    \n","    **Hierarchical Indexes**\n","    \n","    We can groupby different levels of a hierarchical index\n","    using the `level` parameter:\n","    \n","    >>> arrays = [['Falcon', 'Falcon', 'Parrot', 'Parrot'],\n","    ...           ['Captive', 'Wild', 'Captive', 'Wild']]\n","    >>> index = pd.MultiIndex.from_arrays(arrays, names=('Animal', 'Type'))\n","    >>> df = pd.DataFrame({'Max Speed': [390., 350., 30., 20.]},\n","    ...                   index=index)\n","    >>> df\n","                    Max Speed\n","    Animal Type\n","    Falcon Captive      390.0\n","           Wild         350.0\n","    Parrot Captive       30.0\n","           Wild          20.0\n","    >>> df.groupby(level=0).mean()\n","            Max Speed\n","    Animal\n","    Falcon      370.0\n","    Parrot       25.0\n","    >>> df.groupby(level=\"Type\").mean()\n","             Max Speed\n","    Type\n","    Captive      210.0\n","    Wild         185.0\n","    \n","    We can also choose to include NA in group keys or not by setting\n","    `dropna` parameter, the default setting is `True`:\n","    \n","    >>> l = [[1, 2, 3], [1, None, 4], [2, 1, 3], [1, 2, 2]]\n","    >>> df = pd.DataFrame(l, columns=[\"a\", \"b\", \"c\"])\n","    \n","    >>> df.groupby(by=[\"b\"]).sum()\n","        a   c\n","    b\n","    1.0 2   3\n","    2.0 2   5\n","    \n","    >>> df.groupby(by=[\"b\"], dropna=False).sum()\n","        a   c\n","    b\n","    1.0 2   3\n","    2.0 2   5\n","    NaN 1   4\n","    \n","    >>> l = [[\"a\", 12, 12], [None, 12.3, 33.], [\"b\", 12.3, 123], [\"a\", 1, 1]]\n","    >>> df = pd.DataFrame(l, columns=[\"a\", \"b\", \"c\"])\n","    \n","    >>> df.groupby(by=\"a\").sum()\n","        b     c\n","    a\n","    a   13.0   13.0\n","    b   12.3  123.0\n","    \n","    >>> df.groupby(by=\"a\", dropna=False).sum()\n","        b     c\n","    a\n","    a   13.0   13.0\n","    b   12.3  123.0\n","    NaN 12.3   33.0\n","\n"]}]},{"cell_type":"code","metadata":{"id":"5KGteLwaYdfR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649692549924,"user_tz":-180,"elapsed":2,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"bfcb5574-91bd-42d8-8584-337061c39d03"},"source":["# Получить размер группы в которой сидит запись\n","operations.groupby(['symbol', 'type']).apply(lambda series: series.shape[0])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol  type\n","BTC     buy     3\n","        sell    1\n","DOGE    buy     1\n","        sell    2\n","ETH     buy     1\n","        sell    2\n","dtype: int64"]},"metadata":{},"execution_count":155}]},{"cell_type":"code","metadata":{"id":"9o_bD4NKYdfR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1666200370169,"user_tz":-180,"elapsed":228,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"36c6a200-14bc-4050-b118-75511fb0f743"},"source":["#Вывести группы по убыванию числа уникальных значений в колонке amount\n","operations.groupby(['symbol', 'type'])['amount'].nunique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["symbol  type\n","BTC     buy     3\n","        sell    1\n","DOGE    buy     1\n","        sell    1\n","ETH     buy     1\n","        sell    1\n","Name: amount, dtype: int64"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["operations"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"z1I0xk92SD3i","executionInfo":{"status":"ok","timestamp":1666200390112,"user_tz":-180,"elapsed":236,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"715b61ef-1427-4171-ab95-5630d6d40514"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  type  amount    price\n","2018-01-01   DOGE   buy  5000.0     0.20\n","2018-01-02    BTC   buy    10.0  6000.00\n","2018-01-03    BTC   buy     2.5  5900.00\n","2018-01-04   DOGE  sell  3000.0     0.10\n","2018-01-05    BTC  sell     4.0  6200.00\n","2018-01-06    ETH  sell    10.0   400.00\n","2018-01-07    BTC   buy     1.0  5600.00\n","2018-01-08    ETH   buy    20.0   350.00\n","2018-01-09    ETH  sell    10.0   300.00\n","2018-01-10   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-68bdf352-5b34-4301-81e6-619b8a55f377\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-05</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-06</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-07</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-08</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-09</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-10</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68bdf352-5b34-4301-81e6-619b8a55f377')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68bdf352-5b34-4301-81e6-619b8a55f377 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68bdf352-5b34-4301-81e6-619b8a55f377');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","metadata":{"id":"vqugWEO5YdfS"},"source":["Сгруппированные данные можно фильтровать. Вы можете решить какие группы оставить с помощью вашей функции. Она на вход принимает pandas.DataFrame и возвращает bool"]},{"cell_type":"code","source":["help(operations.groupby(['symbol', 'type']).filter)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M_H1qTCiFaxZ","executionInfo":{"status":"ok","timestamp":1649692553305,"user_tz":-180,"elapsed":350,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"734a633f-43fc-4edc-b5f7-2e65540a423f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on method filter in module pandas.core.groupby.generic:\n","\n","filter(func, dropna=True, *args, **kwargs) method of pandas.core.groupby.generic.DataFrameGroupBy instance\n","    Return a copy of a DataFrame excluding filtered elements.\n","    \n","    Elements from groups are filtered if they do not satisfy the\n","    boolean criterion specified by func.\n","    \n","    Parameters\n","    ----------\n","    func : function\n","        Function to apply to each subframe. Should return True or False.\n","    dropna : Drop groups that do not pass the filter. True by default;\n","        If False, groups that evaluate False are filled with NaNs.\n","    \n","    Returns\n","    -------\n","    filtered : DataFrame\n","    \n","    Notes\n","    -----\n","    Each subframe is endowed the attribute 'name' in case you need to know\n","    which group you are working on.\n","    \n","    Functions that mutate the passed object can produce unexpected\n","    behavior or errors and are not supported. See :ref:`gotchas.udf-mutation`\n","    for more details.\n","    \n","    Examples\n","    --------\n","    >>> df = pd.DataFrame({'A' : ['foo', 'bar', 'foo', 'bar',\n","    ...                           'foo', 'bar'],\n","    ...                    'B' : [1, 2, 3, 4, 5, 6],\n","    ...                    'C' : [2.0, 5., 8., 1., 2., 9.]})\n","    >>> grouped = df.groupby('A')\n","    >>> grouped.filter(lambda x: x['B'].mean() > 3.)\n","         A  B    C\n","    1  bar  2  5.0\n","    3  bar  4  1.0\n","    5  bar  6  9.0\n","\n"]}]},{"cell_type":"code","metadata":{"id":"dIW-VZDQYdfS","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1649702001903,"user_tz":-180,"elapsed":377,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"49df16aa-1315-4bb0-b376-f56a7d35ed67"},"source":["# Выбрать монеты и операции для которых оборот был больше 20 монет\n","operations.groupby(['symbol', 'type']).filter(lambda table: table['amount'].sum() >= 20)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  type  amount   price\n","2018-01-01   DOGE   buy  5000.0    0.20\n","2018-01-04   DOGE  sell  3000.0    0.10\n","2018-01-06    ETH  sell    10.0  400.00\n","2018-01-08    ETH   buy    20.0  350.00\n","2018-01-09    ETH  sell    10.0  300.00\n","2018-01-10   DOGE  sell  3000.0    0.15"],"text/html":["\n","  <div id=\"df-2f133fe8-9559-46e4-bede-8e4b0f15ed81\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-06</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-08</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-09</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-10</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f133fe8-9559-46e4-bede-8e4b0f15ed81')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2f133fe8-9559-46e4-bede-8e4b0f15ed81 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2f133fe8-9559-46e4-bede-8e4b0f15ed81');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":330}]},{"cell_type":"code","metadata":{"id":"DX4rDjyYYdfS"},"source":["del operations, name, group"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EJ1fuLboYdfS"},"source":["## Сводные таблицы"]},{"cell_type":"markdown","metadata":{"id":"Vxju7M43YdfS"},"source":["Большинство таблиц в сыром виде похожи на логи где каждая строка это запись. Никакой оргинизации в данных в этих таблицах нет, а хотелось бы. Для этого в pandas существуют сводные таблицы."]},{"cell_type":"code","metadata":{"id":"PE75lptRYdfT","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666201577914,"user_tz":-180,"elapsed":308,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f2eb057a-5d8a-4f39-e32f-bc211fb474ff"},"source":["operations = pd.DataFrame(\n","    data=[\n","        ['DOGE', 'buy', 5000, 0.2, 'Joe Doe', 'success'],\n","        ['BTC', 'buy', 10, 6000, 'Elon Musk', 'error'],\n","        ['BTC', 'buy', 2.5, 5900, 'George Bush', 'success'],\n","        ['DOGE', 'sell', 3000, 0.1, 'John Romero', 'success'],\n","        ['BTC', 'sell', 4, 6200, 'Jack Ma', 'success'],\n","        ['ETH', 'sell', 10, 400, 'Satoshi Nakomoto', 'error'],\n","        ['BTC', 'buy', 1, 5600, 'Vladimir Vladimirovich', 'success'],\n","        ['ETH', 'buy', 20, 350, 'George Bush', 'success'],\n","        ['ETH', 'sell', 10, 300, 'Jack Ma', 'error'],\n","        ['DOGE', 'sell', 3000, 0.15, 'Joe Doe', 'success']\n","    ],\n","    columns=['symbol', 'type', 'amount', 'price', 'user', 'status'],\n","    index=pd.date_range('2018-01-01', periods=10)\n",")\n","operations"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           symbol  type  amount    price                    user   status\n","2018-01-01   DOGE   buy  5000.0     0.20                 Joe Doe  success\n","2018-01-02    BTC   buy    10.0  6000.00               Elon Musk    error\n","2018-01-03    BTC   buy     2.5  5900.00             George Bush  success\n","2018-01-04   DOGE  sell  3000.0     0.10             John Romero  success\n","2018-01-05    BTC  sell     4.0  6200.00                 Jack Ma  success\n","2018-01-06    ETH  sell    10.0   400.00        Satoshi Nakomoto    error\n","2018-01-07    BTC   buy     1.0  5600.00  Vladimir Vladimirovich  success\n","2018-01-08    ETH   buy    20.0   350.00             George Bush  success\n","2018-01-09    ETH  sell    10.0   300.00                 Jack Ma    error\n","2018-01-10   DOGE  sell  3000.0     0.15                 Joe Doe  success"],"text/html":["\n","  <div id=\"df-e202eba9-04ab-43d7-b1b4-0e0b7ffec2fb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","      <th>user</th>\n","      <th>status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-01-01</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","      <td>Joe Doe</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-02</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","      <td>Elon Musk</td>\n","      <td>error</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-03</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","      <td>George Bush</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-04</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","      <td>John Romero</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-05</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","      <td>Jack Ma</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-06</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","      <td>Satoshi Nakomoto</td>\n","      <td>error</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-07</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","      <td>Vladimir Vladimirovich</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-08</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","      <td>George Bush</td>\n","      <td>success</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-09</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","      <td>Jack Ma</td>\n","      <td>error</td>\n","    </tr>\n","    <tr>\n","      <th>2018-01-10</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","      <td>Joe Doe</td>\n","      <td>success</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e202eba9-04ab-43d7-b1b4-0e0b7ffec2fb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e202eba9-04ab-43d7-b1b4-0e0b7ffec2fb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e202eba9-04ab-43d7-b1b4-0e0b7ffec2fb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","metadata":{"id":"pSsPZVh5YdfT"},"source":["Лучше всего понять как они работают это разобрать пример. Найдем сколько суммарно  было куплено и продано каждого типа монет. В результирующей сводной таблице индексом будет название монеты, колонки - типы транзакций (т.е. покупки или продажи). В самих ячейках будет суммарное количество монет."]},{"cell_type":"code","metadata":{"id":"gJb_nNQoYdfT","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1666201665143,"user_tz":-180,"elapsed":582,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"33b9aa3f-9d48-4c4a-8d7c-884abdcbabe3"},"source":["operations.pivot_table(\n","    values='amount',\n","    index='symbol',\n","    columns='type',\n","    aggfunc='sum'\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["type       buy    sell\n","symbol                \n","BTC       13.5     4.0\n","DOGE    5000.0  6000.0\n","ETH       20.0    20.0"],"text/html":["\n","  <div id=\"df-3dc9a1d0-c238-4352-9a2d-58c67d6a2578\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>type</th>\n","      <th>buy</th>\n","      <th>sell</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>BTC</th>\n","      <td>13.5</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>DOGE</th>\n","      <td>5000.0</td>\n","      <td>6000.0</td>\n","    </tr>\n","    <tr>\n","      <th>ETH</th>\n","      <td>20.0</td>\n","      <td>20.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3dc9a1d0-c238-4352-9a2d-58c67d6a2578')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3dc9a1d0-c238-4352-9a2d-58c67d6a2578 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3dc9a1d0-c238-4352-9a2d-58c67d6a2578');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"9Ht-eqSZYdfT"},"source":["Если не указывать явно аргумент aggfunc, то агрегация будет через усреднение (а не через суммирование как было в нашем примере). Расмотрим более сложный пример."]},{"cell_type":"code","metadata":{"id":"ngjmJXlXYdfU","colab":{"base_uri":"https://localhost:8080/","height":425},"executionInfo":{"status":"ok","timestamp":1666201818339,"user_tz":-180,"elapsed":508,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"af97f32b-e3e6-4f86-fbaf-0fc674cd559b"},"source":["operations.pivot_table(\n","    values='amount',\n","    index=['symbol', 'user'],  # Индекс может быть иерархическим и строиться по нескольким колонкам\n","    columns=['type', 'status'],  # Аналогично иерархическими могут быть и колонки\n","    aggfunc=['sum', 'mean']  # Можно вычислять сразу несколько агрегаций\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                sum                        mean                \\\n","type                            buy          sell           buy          sell   \n","status                        error success error success error success error   \n","symbol user                                                                     \n","BTC    Elon Musk               10.0     NaN   NaN     NaN  10.0     NaN   NaN   \n","       George Bush              NaN     2.5   NaN     NaN   NaN     2.5   NaN   \n","       Jack Ma                  NaN     NaN   NaN     4.0   NaN     NaN   NaN   \n","       Vladimir Vladimirovich   NaN     1.0   NaN     NaN   NaN     1.0   NaN   \n","DOGE   Joe Doe                  NaN  5000.0   NaN  3000.0   NaN  5000.0   NaN   \n","       John Romero              NaN     NaN   NaN  3000.0   NaN     NaN   NaN   \n","ETH    George Bush              NaN    20.0   NaN     NaN   NaN    20.0   NaN   \n","       Jack Ma                  NaN     NaN  10.0     NaN   NaN     NaN  10.0   \n","       Satoshi Nakomoto         NaN     NaN  10.0     NaN   NaN     NaN  10.0   \n","\n","                                       \n","type                                   \n","status                        success  \n","symbol user                            \n","BTC    Elon Musk                  NaN  \n","       George Bush                NaN  \n","       Jack Ma                    4.0  \n","       Vladimir Vladimirovich     NaN  \n","DOGE   Joe Doe                 3000.0  \n","       John Romero             3000.0  \n","ETH    George Bush                NaN  \n","       Jack Ma                    NaN  \n","       Satoshi Nakomoto           NaN  "],"text/html":["\n","  <div id=\"df-86ff056b-e085-41a9-92db-ade995c4ff07\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"4\" halign=\"left\">sum</th>\n","      <th colspan=\"4\" halign=\"left\">mean</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>type</th>\n","      <th colspan=\"2\" halign=\"left\">buy</th>\n","      <th colspan=\"2\" halign=\"left\">sell</th>\n","      <th colspan=\"2\" halign=\"left\">buy</th>\n","      <th colspan=\"2\" halign=\"left\">sell</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>status</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th>user</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">BTC</th>\n","      <th>Elon Musk</th>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>George Bush</th>\n","      <td>NaN</td>\n","      <td>2.5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jack Ma</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>Vladimir Vladimirovich</th>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">DOGE</th>\n","      <th>Joe Doe</th>\n","      <td>NaN</td>\n","      <td>5000.0</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>5000.0</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","    </tr>\n","    <tr>\n","      <th>John Romero</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">ETH</th>\n","      <th>George Bush</th>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jack Ma</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Satoshi Nakomoto</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86ff056b-e085-41a9-92db-ade995c4ff07')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-86ff056b-e085-41a9-92db-ade995c4ff07 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-86ff056b-e085-41a9-92db-ade995c4ff07');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":59}]},{"cell_type":"markdown","metadata":{"id":"xcWTqHEgYdfU"},"source":["И самый монструозный пример, где мы сделаем сводную таблиц для цен и объемов торгов."]},{"cell_type":"code","metadata":{"id":"GBrmeQSdYdfU","colab":{"base_uri":"https://localhost:8080/","height":457},"executionInfo":{"status":"ok","timestamp":1649692578761,"user_tz":-180,"elapsed":371,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"390dbcc9-eb41-4d7a-9c25-1733e853c6e1"},"source":["operations.pivot_table(\n","    values=['amount', 'price'],  # Можно находить статистику по разным числовым показателям\n","    index=['symbol', 'user'],\n","    columns=['type', 'status'],\n","    aggfunc={\n","        'amount': ['sum', 'mean'],\n","        'price': 'max'}  # Тогда для каждого показателя надо указать какие агрегации вы хотите\n",")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                              amount                                      \\\n","                                mean                         sum           \n","type                             buy          sell           buy           \n","status                         error success error success error success   \n","symbol user                                                                \n","BTC    Elon Musk                10.0     NaN   NaN     NaN  10.0     NaN   \n","       George Bush               NaN     2.5   NaN     NaN   NaN     2.5   \n","       Jack Ma                   NaN     NaN   NaN     4.0   NaN     NaN   \n","       Vladimir Vladimirovich    NaN     1.0   NaN     NaN   NaN     1.0   \n","DOGE   Joe Doe                   NaN  5000.0   NaN  3000.0   NaN  5000.0   \n","       John Romero               NaN     NaN   NaN  3000.0   NaN     NaN   \n","ETH    George Bush               NaN    20.0   NaN     NaN   NaN    20.0   \n","       Jack Ma                   NaN     NaN  10.0     NaN   NaN     NaN   \n","       Satoshi Nakomoto          NaN     NaN  10.0     NaN   NaN     NaN   \n","\n","                                              price                          \n","                                                max                          \n","type                           sell             buy           sell           \n","status                        error success   error success  error  success  \n","symbol user                                                                  \n","BTC    Elon Musk                NaN     NaN  6000.0     NaN    NaN      NaN  \n","       George Bush              NaN     NaN     NaN  5900.0    NaN      NaN  \n","       Jack Ma                  NaN     4.0     NaN     NaN    NaN  6200.00  \n","       Vladimir Vladimirovich   NaN     NaN     NaN  5600.0    NaN      NaN  \n","DOGE   Joe Doe                  NaN  3000.0     NaN     0.2    NaN     0.15  \n","       John Romero              NaN  3000.0     NaN     NaN    NaN     0.10  \n","ETH    George Bush              NaN     NaN     NaN   350.0    NaN      NaN  \n","       Jack Ma                 10.0     NaN     NaN     NaN  300.0      NaN  \n","       Satoshi Nakomoto        10.0     NaN     NaN     NaN  400.0      NaN  "],"text/html":["\n","  <div id=\"df-d3e59f99-5caa-455b-85c6-031a7475cef2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"8\" halign=\"left\">amount</th>\n","      <th colspan=\"4\" halign=\"left\">price</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th></th>\n","      <th colspan=\"4\" halign=\"left\">mean</th>\n","      <th colspan=\"4\" halign=\"left\">sum</th>\n","      <th colspan=\"4\" halign=\"left\">max</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>type</th>\n","      <th colspan=\"2\" halign=\"left\">buy</th>\n","      <th colspan=\"2\" halign=\"left\">sell</th>\n","      <th colspan=\"2\" halign=\"left\">buy</th>\n","      <th colspan=\"2\" halign=\"left\">sell</th>\n","      <th colspan=\"2\" halign=\"left\">buy</th>\n","      <th colspan=\"2\" halign=\"left\">sell</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>status</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","      <th>error</th>\n","      <th>success</th>\n","    </tr>\n","    <tr>\n","      <th>symbol</th>\n","      <th>user</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"4\" valign=\"top\">BTC</th>\n","      <th>Elon Musk</th>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>George Bush</th>\n","      <td>NaN</td>\n","      <td>2.5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5900.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jack Ma</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>Vladimir Vladimirovich</th>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5600.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">DOGE</th>\n","      <th>Joe Doe</th>\n","      <td>NaN</td>\n","      <td>5000.0</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>5000.0</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>0.2</td>\n","      <td>NaN</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>John Romero</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">ETH</th>\n","      <th>George Bush</th>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>350.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Jack Ma</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>300.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Satoshi Nakomoto</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>400.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3e59f99-5caa-455b-85c6-031a7475cef2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3e59f99-5caa-455b-85c6-031a7475cef2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3e59f99-5caa-455b-85c6-031a7475cef2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":163}]},{"cell_type":"markdown","metadata":{"id":"Ccyp7VpDYdfU"},"source":["Для построения сводных таблиц в pandas есть более простая функция. pandas.pivot. Она не делает никаких агрегаций, поэтому при ее использовании вы должны быть уверены, что на каждую ячейку результирующей сводной таблицы придется только одно значение показателя из исходной таблицы. В противном случае будет ошибка. Можете попробовать построить сводную таблицу\n","```\n","operations.pivot(values='amount', index='user', columns='user')\n","```\n","чтобы убедиться."]},{"cell_type":"code","source":["del operations"],"metadata":{"id":"kXElw3zKKccI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n73t6oRZYdfU"},"source":["**Задание:** Самостоятельно разберитесь с функциями pandas.stack, pandas.unstack и pandas.melt. Вам поможет [этот tutorial](https://pandas.pydata.org/pandas-docs/stable/reshaping.html)"]},{"cell_type":"markdown","metadata":{"id":"1fn7GSsnYdfV"},"source":["# Пропуски и ошибки в данных"]},{"cell_type":"markdown","metadata":{"id":"l0gYsUcsYdfV"},"source":["В реальной жизни данные с которыми надо работать содержат пропуски или просто неверные значения. Мы обсудим как это можно исправить"]},{"cell_type":"code","metadata":{"id":"0Yikl2pAYdfV","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203777339,"user_tz":-180,"elapsed":416,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ae901d13-3e79-4d78-fcfa-907b4f8c892e"},"source":["price = pd.DataFrame(\n","    data=[\n","        [0.547, 0.745],\n","        [-2, -1],\n","        [None, 0.718],\n","        [0.135, 0.845],\n","        [0.53, None],\n","        [None, -1]],\n","    columns=['ADA', 'DOGE'],\n","    # Создаем специальный индекс из 6 дней начиная с 2018-11-01\n","    index=pd.date_range('2018-11-01', periods=6)\n",")\n","price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02 -2.000 -1.000\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-fe8dc2f2-adb0-4996-90ba-464c40ef48af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>-1.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fe8dc2f2-adb0-4996-90ba-464c40ef48af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fe8dc2f2-adb0-4996-90ba-464c40ef48af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fe8dc2f2-adb0-4996-90ba-464c40ef48af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","metadata":{"id":"I2WR1lC5YdfV","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203126595,"user_tz":-180,"elapsed":301,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f6f9f87f-b226-49f5-db22-55dbb160d989"},"source":["# Найти места где есть пропуски методом isnull. Аналогично есть метод notnull\n","price.isnull()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  False   True\n","2018-11-02  False   True\n","2018-11-03   True  False\n","2018-11-04  False  False\n","2018-11-05  False   True\n","2018-11-06   True  False"],"text/html":["\n","  <div id=\"df-1d6a7f99-469c-4b9e-898b-15ed835b0d46\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d6a7f99-469c-4b9e-898b-15ed835b0d46')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1d6a7f99-469c-4b9e-898b-15ed835b0d46 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1d6a7f99-469c-4b9e-898b-15ed835b0d46');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["price.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wk4kIS7DKxn3","executionInfo":{"status":"ok","timestamp":1666203127536,"user_tz":-180,"elapsed":4,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"98843bee-2cd8-498b-aef5-ed6fbc9fbb10"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 6 entries, 2018-11-01 to 2018-11-06\n","Freq: D\n","Data columns (total 2 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   ADA     4 non-null      float64\n"," 1   DOGE    3 non-null      float64\n","dtypes: float64(2)\n","memory usage: 144.0 bytes\n"]}]},{"cell_type":"code","metadata":{"id":"4_sekLzRYdfW","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203128790,"user_tz":-180,"elapsed":6,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"29db13a4-509b-4178-bf97-347b3a169428"},"source":["# Заполнить все пропуски дефолтным занчением\n","price.fillna(0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.000\n","2018-11-02 -2.000  0.000\n","2018-11-03  0.000  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530  0.000\n","2018-11-06  0.000 -1.000"],"text/html":["\n","  <div id=\"df-d24db87b-d7c2-41f5-bae3-3a1fef15e756\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.000</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.000</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d24db87b-d7c2-41f5-bae3-3a1fef15e756')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d24db87b-d7c2-41f5-bae3-3a1fef15e756 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d24db87b-d7c2-41f5-bae3-3a1fef15e756');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"sKiqk_JPcjzh","executionInfo":{"status":"ok","timestamp":1666203142390,"user_tz":-180,"elapsed":396,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"78fcd797-072d-4265-c9c5-afe0e89e45c9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547    NaN\n","2018-11-02 -2.000    NaN\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-e917a461-8fe4-4b0e-ad3f-9d34cd36d66b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e917a461-8fe4-4b0e-ad3f-9d34cd36d66b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e917a461-8fe4-4b0e-ad3f-9d34cd36d66b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e917a461-8fe4-4b0e-ad3f-9d34cd36d66b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":67}]},{"cell_type":"code","metadata":{"id":"_W4_IN0NYdfX","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203134949,"user_tz":-180,"elapsed":244,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"67e10b5c-d2cf-40fb-a971-6e87182096eb"},"source":["# Заполнить все пропуски занчениями со cледующей строки\n","price.fillna(method='bfill')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.718\n","2018-11-02 -2.000  0.718\n","2018-11-03  0.135  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530 -1.000\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-c1ff00d4-c709-46f7-8392-fc58e3d999b9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.135</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>-1.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c1ff00d4-c709-46f7-8392-fc58e3d999b9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c1ff00d4-c709-46f7-8392-fc58e3d999b9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c1ff00d4-c709-46f7-8392-fc58e3d999b9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","metadata":{"id":"Wn5FZgwrYdfX","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203175697,"user_tz":-180,"elapsed":442,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"04cd173e-fc2c-4536-b6ea-9bf072e07548"},"source":["# Заполнить все пропуски занчениями с предыдущей строки\n","price.fillna(method='ffill')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547    NaN\n","2018-11-02 -2.000    NaN\n","2018-11-03 -2.000  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530  0.845\n","2018-11-06  0.530 -1.000"],"text/html":["\n","  <div id=\"df-a9700ce8-d076-4ed7-a3be-b5d25e8832a5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>-2.000</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.530</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9700ce8-d076-4ed7-a3be-b5d25e8832a5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a9700ce8-d076-4ed7-a3be-b5d25e8832a5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a9700ce8-d076-4ed7-a3be-b5d25e8832a5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["help(pd.DataFrame.fillna)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ysI58OvBc9a6","executionInfo":{"status":"ok","timestamp":1666203252275,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ca09e8bc-05dd-484c-92e3-82eea6711eef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on function fillna in module pandas.core.frame:\n","\n","fillna(self, value: 'object | ArrayLike | None' = None, method: 'FillnaOptions | None' = None, axis: 'Axis | None' = None, inplace: 'bool' = False, limit=None, downcast=None) -> 'DataFrame | None'\n","    Fill NA/NaN values using the specified method.\n","    \n","    Parameters\n","    ----------\n","    value : scalar, dict, Series, or DataFrame\n","        Value to use to fill holes (e.g. 0), alternately a\n","        dict/Series/DataFrame of values specifying which value to use for\n","        each index (for a Series) or column (for a DataFrame).  Values not\n","        in the dict/Series/DataFrame will not be filled. This value cannot\n","        be a list.\n","    method : {'backfill', 'bfill', 'pad', 'ffill', None}, default None\n","        Method to use for filling holes in reindexed Series\n","        pad / ffill: propagate last valid observation forward to next valid\n","        backfill / bfill: use next valid observation to fill gap.\n","    axis : {0 or 'index', 1 or 'columns'}\n","        Axis along which to fill missing values.\n","    inplace : bool, default False\n","        If True, fill in-place. Note: this will modify any\n","        other views on this object (e.g., a no-copy slice for a column in a\n","        DataFrame).\n","    limit : int, default None\n","        If method is specified, this is the maximum number of consecutive\n","        NaN values to forward/backward fill. In other words, if there is\n","        a gap with more than this number of consecutive NaNs, it will only\n","        be partially filled. If method is not specified, this is the\n","        maximum number of entries along the entire axis where NaNs will be\n","        filled. Must be greater than 0 if not None.\n","    downcast : dict, default is None\n","        A dict of item->dtype of what to downcast if possible,\n","        or the string 'infer' which will try to downcast to an appropriate\n","        equal type (e.g. float64 to int64 if possible).\n","    \n","    Returns\n","    -------\n","    DataFrame or None\n","        Object with missing values filled or None if ``inplace=True``.\n","    \n","    See Also\n","    --------\n","    interpolate : Fill NaN values using interpolation.\n","    reindex : Conform object to new index.\n","    asfreq : Convert TimeSeries to specified frequency.\n","    \n","    Examples\n","    --------\n","    >>> df = pd.DataFrame([[np.nan, 2, np.nan, 0],\n","    ...                    [3, 4, np.nan, 1],\n","    ...                    [np.nan, np.nan, np.nan, 5],\n","    ...                    [np.nan, 3, np.nan, 4]],\n","    ...                   columns=list(\"ABCD\"))\n","    >>> df\n","         A    B   C  D\n","    0  NaN  2.0 NaN  0\n","    1  3.0  4.0 NaN  1\n","    2  NaN  NaN NaN  5\n","    3  NaN  3.0 NaN  4\n","    \n","    Replace all NaN elements with 0s.\n","    \n","    >>> df.fillna(0)\n","        A   B   C   D\n","    0   0.0 2.0 0.0 0\n","    1   3.0 4.0 0.0 1\n","    2   0.0 0.0 0.0 5\n","    3   0.0 3.0 0.0 4\n","    \n","    We can also propagate non-null values forward or backward.\n","    \n","    >>> df.fillna(method=\"ffill\")\n","        A   B   C   D\n","    0   NaN 2.0 NaN 0\n","    1   3.0 4.0 NaN 1\n","    2   3.0 4.0 NaN 5\n","    3   3.0 3.0 NaN 4\n","    \n","    Replace all NaN elements in column 'A', 'B', 'C', and 'D', with 0, 1,\n","    2, and 3 respectively.\n","    \n","    >>> values = {\"A\": 0, \"B\": 1, \"C\": 2, \"D\": 3}\n","    >>> df.fillna(value=values)\n","        A   B   C   D\n","    0   0.0 2.0 2.0 0\n","    1   3.0 4.0 2.0 1\n","    2   0.0 1.0 2.0 5\n","    3   0.0 3.0 2.0 4\n","    \n","    Only replace the first NaN element.\n","    \n","    >>> df.fillna(value=values, limit=1)\n","        A   B   C   D\n","    0   0.0 2.0 2.0 0\n","    1   3.0 4.0 NaN 1\n","    2   NaN 1.0 NaN 5\n","    3   NaN 3.0 NaN 4\n","    \n","    When filling using a DataFrame, replacement happens along\n","    the same column names and same indices\n","    \n","    >>> df2 = pd.DataFrame(np.zeros((4, 4)), columns=list(\"ABCE\"))\n","    >>> df.fillna(df2)\n","        A   B   C   D\n","    0   0.0 2.0 0.0 0\n","    1   3.0 4.0 0.0 1\n","    2   0.0 0.0 0.0 5\n","    3   0.0 3.0 0.0 4\n","\n"]}]},{"cell_type":"code","source":["price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"yg8E64DTK_rp","executionInfo":{"status":"ok","timestamp":1666203564578,"user_tz":-180,"elapsed":385,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"c2819e9c-f317-48a4-8165-f13e2cf2ba30"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547    NaN\n","2018-11-02 -2.000    NaN\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-ee9538d8-2b26-47a8-8b65-25a5ec64a4de\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ee9538d8-2b26-47a8-8b65-25a5ec64a4de')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ee9538d8-2b26-47a8-8b65-25a5ec64a4de button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ee9538d8-2b26-47a8-8b65-25a5ec64a4de');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"NCk2fvrJYdfX","colab":{"base_uri":"https://localhost:8080/","height":81},"executionInfo":{"status":"ok","timestamp":1666203572275,"user_tz":-180,"elapsed":644,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a97d04fe-f1a2-414e-b09d-f2f6ce52812f"},"source":["#  Выкинуть строки содержащие nan'ы\n","price.dropna()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-04  0.135  0.845"],"text/html":["\n","  <div id=\"df-f06410d8-31b2-4895-8043-ac0dadc0d9ff\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f06410d8-31b2-4895-8043-ac0dadc0d9ff')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f06410d8-31b2-4895-8043-ac0dadc0d9ff button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f06410d8-31b2-4895-8043-ac0dadc0d9ff');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":71}]},{"cell_type":"code","source":["help(pd.DataFrame.dropna)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Dgu_E_GyeSR4","executionInfo":{"status":"ok","timestamp":1666203612284,"user_tz":-180,"elapsed":645,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ebdcaf63-c5cd-4db2-977c-0df508789779"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Help on function dropna in module pandas.core.frame:\n","\n","dropna(self, axis: 'Axis' = 0, how: 'str' = 'any', thresh=None, subset=None, inplace: 'bool' = False)\n","    Remove missing values.\n","    \n","    See the :ref:`User Guide <missing_data>` for more on which values are\n","    considered missing, and how to work with missing data.\n","    \n","    Parameters\n","    ----------\n","    axis : {0 or 'index', 1 or 'columns'}, default 0\n","        Determine if rows or columns which contain missing values are\n","        removed.\n","    \n","        * 0, or 'index' : Drop rows which contain missing values.\n","        * 1, or 'columns' : Drop columns which contain missing value.\n","    \n","        .. versionchanged:: 1.0.0\n","    \n","           Pass tuple or list to drop on multiple axes.\n","           Only a single axis is allowed.\n","    \n","    how : {'any', 'all'}, default 'any'\n","        Determine if row or column is removed from DataFrame, when we have\n","        at least one NA or all NA.\n","    \n","        * 'any' : If any NA values are present, drop that row or column.\n","        * 'all' : If all values are NA, drop that row or column.\n","    \n","    thresh : int, optional\n","        Require that many non-NA values.\n","    subset : array-like, optional\n","        Labels along other axis to consider, e.g. if you are dropping rows\n","        these would be a list of columns to include.\n","    inplace : bool, default False\n","        If True, do operation inplace and return None.\n","    \n","    Returns\n","    -------\n","    DataFrame or None\n","        DataFrame with NA entries dropped from it or None if ``inplace=True``.\n","    \n","    See Also\n","    --------\n","    DataFrame.isna: Indicate missing values.\n","    DataFrame.notna : Indicate existing (non-missing) values.\n","    DataFrame.fillna : Replace missing values.\n","    Series.dropna : Drop missing values.\n","    Index.dropna : Drop missing indices.\n","    \n","    Examples\n","    --------\n","    >>> df = pd.DataFrame({\"name\": ['Alfred', 'Batman', 'Catwoman'],\n","    ...                    \"toy\": [np.nan, 'Batmobile', 'Bullwhip'],\n","    ...                    \"born\": [pd.NaT, pd.Timestamp(\"1940-04-25\"),\n","    ...                             pd.NaT]})\n","    >>> df\n","           name        toy       born\n","    0    Alfred        NaN        NaT\n","    1    Batman  Batmobile 1940-04-25\n","    2  Catwoman   Bullwhip        NaT\n","    \n","    Drop the rows where at least one element is missing.\n","    \n","    >>> df.dropna()\n","         name        toy       born\n","    1  Batman  Batmobile 1940-04-25\n","    \n","    Drop the columns where at least one element is missing.\n","    \n","    >>> df.dropna(axis='columns')\n","           name\n","    0    Alfred\n","    1    Batman\n","    2  Catwoman\n","    \n","    Drop the rows where all elements are missing.\n","    \n","    >>> df.dropna(how='all')\n","           name        toy       born\n","    0    Alfred        NaN        NaT\n","    1    Batman  Batmobile 1940-04-25\n","    2  Catwoman   Bullwhip        NaT\n","    \n","    Keep only the rows with at least 2 non-NA values.\n","    \n","    >>> df.dropna(thresh=2)\n","           name        toy       born\n","    1    Batman  Batmobile 1940-04-25\n","    2  Catwoman   Bullwhip        NaT\n","    \n","    Define in which columns to look for missing values.\n","    \n","    >>> df.dropna(subset=['name', 'toy'])\n","           name        toy       born\n","    1    Batman  Batmobile 1940-04-25\n","    2  Catwoman   Bullwhip        NaT\n","    \n","    Keep the DataFrame with valid entries in the same variable.\n","    \n","    >>> df.dropna(inplace=True)\n","    >>> df\n","         name        toy       born\n","    1  Batman  Batmobile 1940-04-25\n","\n"]}]},{"cell_type":"code","metadata":{"id":"xMctMGX0YdfX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1649703385548,"user_tz":-180,"elapsed":374,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"81c3b438-a63a-400f-aeee-38a217dd8e2c"},"source":["#  Выкинуть колонки содержащие nan'ы\n","price.dropna(axis=1).empty"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":341}]},{"cell_type":"code","metadata":{"id":"rDqaj0bgRI1I","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203789583,"user_tz":-180,"elapsed":398,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"91c73cf4-55e5-4eac-e7f7-c7b025821712"},"source":["price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02 -2.000 -1.000\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-92127160-7a71-4b80-8ff3-b4b1bb3ed215\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>-1.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92127160-7a71-4b80-8ff3-b4b1bb3ed215')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-92127160-7a71-4b80-8ff3-b4b1bb3ed215 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-92127160-7a71-4b80-8ff3-b4b1bb3ed215');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"tPgr6JrXYdfY","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666203793500,"user_tz":-180,"elapsed":294,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8c89096b-695d-4a44-d5ab-888c970a4939"},"source":["# Подменить значения\n","price.replace({-1: 0, -2: 0})"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02  0.000  0.000\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN  0.000"],"text/html":["\n","  <div id=\"df-97f2f6d3-9006-4c75-95ad-a5bf4380be86\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.000</td>\n","      <td>0.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>0.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97f2f6d3-9006-4c75-95ad-a5bf4380be86')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-97f2f6d3-9006-4c75-95ad-a5bf4380be86 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-97f2f6d3-9006-4c75-95ad-a5bf4380be86');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["help(pd.DataFrame.replace)"],"metadata":{"id":"Q1P9syZ1fG6Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"etrYO1FrYdfY","colab":{"base_uri":"https://localhost:8080/","height":238},"executionInfo":{"status":"ok","timestamp":1649692637646,"user_tz":-180,"elapsed":348,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"18215b80-98f1-4eac-c324-a661bcd5cc3c"},"source":["price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02 -2.000 -1.000\n","2018-11-03    NaN  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06    NaN -1.000"],"text/html":["\n","  <div id=\"df-012be181-a2a2-43ab-8fb9-cb19a689514e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>-2.000</td>\n","      <td>-1.000</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>NaN</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>NaN</td>\n","      <td>-1.000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-012be181-a2a2-43ab-8fb9-cb19a689514e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-012be181-a2a2-43ab-8fb9-cb19a689514e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-012be181-a2a2-43ab-8fb9-cb19a689514e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":176}]},{"cell_type":"code","metadata":{"id":"P6TIe2TuYdfY"},"source":["del price"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9hsiNEWqYdfY"},"source":["# Слияния и конкатенации таблиц"]},{"cell_type":"markdown","metadata":{"id":"_Z924laCYdfY"},"source":["Если у вас есть две таблицы, то информацию в них можно объединить двумя способами: конкатенация (\"прилепить снизу новую таблицу\") и объединение (найти объединение записей таблиц если у них хранятся одни и те же значения в выбранных колонках)."]},{"cell_type":"code","metadata":{"id":"k7P8CWS9YdfY","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1666204566169,"user_tz":-180,"elapsed":348,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"7bb9a4a9-42c9-488e-b07a-7b868933bcb5"},"source":["operations_old = pd.DataFrame(\n","    data=[\n","        ['DOGE', 'buy', 5000, 0.2],\n","        ['BTC', 'buy', 10, 6000],\n","        ['BTC', 'buy', 2.5, 5900],\n","        ['DOGE', 'sell', 3000, 0.1],\n","        ['BTC', 'sell', 4, 6200],\n","    ],\n","    columns=['symbol', 'type', 'amount', 'price']\n",")\n","operations_old\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount   price\n","0   DOGE   buy  5000.0     0.2\n","1    BTC   buy    10.0  6000.0\n","2    BTC   buy     2.5  5900.0\n","3   DOGE  sell  3000.0     0.1\n","4    BTC  sell     4.0  6200.0"],"text/html":["\n","  <div id=\"df-89b0ef1d-15ad-4c4e-8aab-1ef479800b01\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89b0ef1d-15ad-4c4e-8aab-1ef479800b01')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-89b0ef1d-15ad-4c4e-8aab-1ef479800b01 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-89b0ef1d-15ad-4c4e-8aab-1ef479800b01');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["operations_new = pd.DataFrame(\n","    data=[\n","        ['ETH', 'sell', 10, 400],\n","        ['BTC', 'buy', 1, 5600],\n","        ['ETH', 'buy', 20, 350],\n","        ['ETH', 'sell', 10, 300],\n","        ['DOGE', 'sell', 3000, 0.15]\n","    ],\n","    columns=['symbol', 'type', 'amount', 'price']\n",")\n","operations_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mhEUoQ4bMrzP","executionInfo":{"status":"ok","timestamp":1666204567071,"user_tz":-180,"elapsed":3,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d1b6f579-16e6-44e9-c36e-08991184b007"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price\n","0    ETH  sell      10   400.00\n","1    BTC   buy       1  5600.00\n","2    ETH   buy      20   350.00\n","3    ETH  sell      10   300.00\n","4   DOGE  sell    3000     0.15"],"text/html":["\n","  <div id=\"df-11aeec5f-6352-4b53-aa35-065294388f36\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11aeec5f-6352-4b53-aa35-065294388f36')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-11aeec5f-6352-4b53-aa35-065294388f36 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11aeec5f-6352-4b53-aa35-065294388f36');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"code","metadata":{"id":"IXVK17kIYdfZ","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666204571570,"user_tz":-180,"elapsed":362,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1b004a0b-facf-4829-fdab-94ac846327ae"},"source":["#  Сконкатенировать таблицы в указанном порядке\n","new_df = pd.concat([operations_old, operations_new])\n","new_df"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price\n","0   DOGE   buy  5000.0     0.20\n","1    BTC   buy    10.0  6000.00\n","2    BTC   buy     2.5  5900.00\n","3   DOGE  sell  3000.0     0.10\n","4    BTC  sell     4.0  6200.00\n","0    ETH  sell    10.0   400.00\n","1    BTC   buy     1.0  5600.00\n","2    ETH   buy    20.0   350.00\n","3    ETH  sell    10.0   300.00\n","4   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-dd725d48-152c-44b0-8f03-51a51d470d06\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dd725d48-152c-44b0-8f03-51a51d470d06')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dd725d48-152c-44b0-8f03-51a51d470d06 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dd725d48-152c-44b0-8f03-51a51d470d06');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":91}]},{"cell_type":"code","metadata":{"id":"TDAoY-OhSMIb","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666204155613,"user_tz":-180,"elapsed":401,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"faae65ec-31b5-41ec-f79b-703df726ce53"},"source":["new_df.reset_index()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   index symbol  type  amount    price\n","0      0   DOGE   buy  5000.0     0.20\n","1      1    BTC   buy    10.0  6000.00\n","2      2    BTC   buy     2.5  5900.00\n","3      3   DOGE  sell  3000.0     0.10\n","4      4    BTC  sell     4.0  6200.00\n","5      0    ETH  sell    10.0   400.00\n","6      1    BTC   buy     1.0  5600.00\n","7      2    ETH   buy    20.0   350.00\n","8      3    ETH  sell    10.0   300.00\n","9      4   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-bbc77fbb-18a8-44ae-9a24-0d6d20954587\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1</td>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2</td>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>4</td>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bbc77fbb-18a8-44ae-9a24-0d6d20954587')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bbc77fbb-18a8-44ae-9a24-0d6d20954587 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bbc77fbb-18a8-44ae-9a24-0d6d20954587');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["new_df.reset_index().drop(columns='index')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"Go-rG3GZNAJL","executionInfo":{"status":"ok","timestamp":1649692643733,"user_tz":-180,"elapsed":9,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"6b9e5e53-5c44-4a0b-9fde-16587e6c171d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price\n","0   DOGE   buy  5000.0     0.20\n","1    BTC   buy    10.0  6000.00\n","2    BTC   buy     2.5  5900.00\n","3   DOGE  sell  3000.0     0.10\n","4    BTC  sell     4.0  6200.00\n","5    ETH  sell    10.0   400.00\n","6    BTC   buy     1.0  5600.00\n","7    ETH   buy    20.0   350.00\n","8    ETH  sell    10.0   300.00\n","9   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-41b27902-b0d7-4591-9d72-0fb3c7f828f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41b27902-b0d7-4591-9d72-0fb3c7f828f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-41b27902-b0d7-4591-9d72-0fb3c7f828f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-41b27902-b0d7-4591-9d72-0fb3c7f828f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":182}]},{"cell_type":"code","metadata":{"id":"r1PS-ygyS6Nj"},"source":["new_df.drop?"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rAEeVVLiYdfZ","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1649692644486,"user_tz":-180,"elapsed":9,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"a9bbc251-f784-47f2-9a30-4070fb143d73"},"source":["# При конкатенации таблицам можно назначать теги чтобы понимать, где какая таблица\n","pd.concat([operations_old, operations_new], keys=['old', 'new'])\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      symbol  type  amount    price\n","old 0   DOGE   buy  5000.0     0.20\n","    1    BTC   buy    10.0  6000.00\n","    2    BTC   buy     2.5  5900.00\n","    3   DOGE  sell  3000.0     0.10\n","    4    BTC  sell     4.0  6200.00\n","new 0    ETH  sell    10.0   400.00\n","    1    BTC   buy     1.0  5600.00\n","    2    ETH   buy    20.0   350.00\n","    3    ETH  sell    10.0   300.00\n","    4   DOGE  sell  3000.0     0.15"],"text/html":["\n","  <div id=\"df-f328de0b-7670-458d-8083-da6295f07c85\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">old</th>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">new</th>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f328de0b-7670-458d-8083-da6295f07c85')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f328de0b-7670-458d-8083-da6295f07c85 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f328de0b-7670-458d-8083-da6295f07c85');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":184}]},{"cell_type":"code","metadata":{"id":"TbnaVgcOYdfZ","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1666204588127,"user_tz":-180,"elapsed":423,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6e62a084-cb0b-4fc5-a0c2-9588021d72b4"},"source":["# Как видно при конкатенации индексы старых таблиц копируются.\n","# Если вам не нужно это поведение, используйте ignore_index\n","operations = pd.concat([operations_new, operations_old], ignore_index=True)\n","operations"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price\n","0    ETH  sell    10.0   400.00\n","1    BTC   buy     1.0  5600.00\n","2    ETH   buy    20.0   350.00\n","3    ETH  sell    10.0   300.00\n","4   DOGE  sell  3000.0     0.15\n","5   DOGE   buy  5000.0     0.20\n","6    BTC   buy    10.0  6000.00\n","7    BTC   buy     2.5  5900.00\n","8   DOGE  sell  3000.0     0.10\n","9    BTC  sell     4.0  6200.00"],"text/html":["\n","  <div id=\"df-11faa356-4f50-4b17-9987-048dde22ab32\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11faa356-4f50-4b17-9987-048dde22ab32')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-11faa356-4f50-4b17-9987-048dde22ab32 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-11faa356-4f50-4b17-9987-048dde22ab32');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["operations_old = pd.DataFrame(\n","    data=[\n","        ['DOGE', 'buy', 0.2],\n","        ['BTC', 'buy', 6000],\n","        ['BTC', 'buy', 5900],\n","        ['DOGE', 'sell', 0.1],\n","        ['BTC', 'sell', 200],\n","    ],\n","    columns=['symbol', 'type', 'price']\n",")\n","operations_new = pd.DataFrame(\n","    data=[\n","        ['ETH', 'sell', 10],\n","        ['BTC', 'buy', 1],\n","        ['ETH', 'buy', 20],\n","        ['ETH', 'sell', 10],\n","        ['DOGE', 'sell', 3000]\n","    ],\n","    columns=['symbol', 'type', 'amount']\n",")"],"metadata":{"id":"WyCG_y7nAoio"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["operations = pd.concat([operations_new, operations_old], ignore_index=True)\n","operations"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"jOJET6Q6A1n0","executionInfo":{"status":"ok","timestamp":1666204349828,"user_tz":-180,"elapsed":777,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"43e8ed20-6d5b-4590-d832-290e09080054"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount   price\n","0    ETH  sell    10.0     NaN\n","1    BTC   buy     1.0     NaN\n","2    ETH   buy    20.0     NaN\n","3    ETH  sell    10.0     NaN\n","4   DOGE  sell  3000.0     NaN\n","5   DOGE   buy     NaN     0.2\n","6    BTC   buy     NaN  6000.0\n","7    BTC   buy     NaN  5900.0\n","8   DOGE  sell     NaN     0.1\n","9    BTC  sell     NaN   200.0"],"text/html":["\n","  <div id=\"df-a5949014-394e-4322-9332-4b0c9edf17af\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>NaN</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>NaN</td>\n","      <td>6000.0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>NaN</td>\n","      <td>5900.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>NaN</td>\n","      <td>0.1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>NaN</td>\n","      <td>200.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5949014-394e-4322-9332-4b0c9edf17af')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a5949014-394e-4322-9332-4b0c9edf17af button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a5949014-394e-4322-9332-4b0c9edf17af');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":86}]},{"cell_type":"markdown","metadata":{"id":"kWlGLqXbYdfZ"},"source":["Данные можно собирать вместе и более умным способом. А именно, вы выбираете какие колонки вас интересуют. Далее если есть записи из двух таблиц у котороых в выбранных колонках значения совпадают мы их \"объединяем\". Это очень упрощенное объяснение. В pandas эта операция называется merge в SQL - join. Делать объединение можно разными сопособами, поэтому возникает несколько стратегий: left, right, inner и full."]},{"cell_type":"code","metadata":{"id":"uhMNtb1zYdfa","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1666204494274,"user_tz":-180,"elapsed":244,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a04f4adf-8922-4f1e-8e4b-520c92305776"},"source":["transactions = pd.DataFrame(\n","    data=[\n","        ['DOGE', 'sell', 'Rockfeller'],\n","        ['DOGE', 'buy', 'J.P. Morgan'],\n","        ['BTC', 'buy', 'John Doe'],\n","        ['ADA', 'sell', 'Rick'],\n","        ['ETH', 'buy', 'Morty']\n","    ],\n","    columns=['symbol', 'type', 'user']\n",")\n","transactions"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type         user\n","0   DOGE  sell   Rockfeller\n","1   DOGE   buy  J.P. Morgan\n","2    BTC   buy     John Doe\n","3    ADA  sell         Rick\n","4    ETH   buy        Morty"],"text/html":["\n","  <div id=\"df-cb122500-91fd-44d4-a7d8-ba3a727b5e63\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>user</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>J.P. Morgan</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ADA</td>\n","      <td>sell</td>\n","      <td>Rick</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>Morty</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb122500-91fd-44d4-a7d8-ba3a727b5e63')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cb122500-91fd-44d4-a7d8-ba3a727b5e63 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cb122500-91fd-44d4-a7d8-ba3a727b5e63');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":["operations"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"cCbc3HobiJgu","executionInfo":{"status":"ok","timestamp":1666204609902,"user_tz":-180,"elapsed":455,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a7b6df98-ae53-4c3b-8209-e386a55a88b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price\n","0    ETH  sell    10.0   400.00\n","1    BTC   buy     1.0  5600.00\n","2    ETH   buy    20.0   350.00\n","3    ETH  sell    10.0   300.00\n","4   DOGE  sell  3000.0     0.15\n","5   DOGE   buy  5000.0     0.20\n","6    BTC   buy    10.0  6000.00\n","7    BTC   buy     2.5  5900.00\n","8   DOGE  sell  3000.0     0.10\n","9    BTC  sell     4.0  6200.00"],"text/html":["\n","  <div id=\"df-1f91fe81-2cd2-45f3-8b45-7ad7cc7176e4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f91fe81-2cd2-45f3-8b45-7ad7cc7176e4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1f91fe81-2cd2-45f3-8b45-7ad7cc7176e4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1f91fe81-2cd2-45f3-8b45-7ad7cc7176e4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":94}]},{"cell_type":"code","metadata":{"id":"NlPiowvyYdfa","colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"status":"ok","timestamp":1666204594502,"user_tz":-180,"elapsed":299,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"76bdea20-c299-4d48-e4b3-c035f2969694"},"source":["# Объединение таблиц по типу монеты и операции\n","# По умолчанию производится inner join остаются записи в которых были полные совпадения\n","pd.merge(operations, transactions, on=['symbol', 'type'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price         user\n","0    BTC   buy     1.0  5600.00     John Doe\n","1    BTC   buy    10.0  6000.00     John Doe\n","2    BTC   buy     2.5  5900.00     John Doe\n","3    ETH   buy    20.0   350.00        Morty\n","4   DOGE  sell  3000.0     0.15   Rockfeller\n","5   DOGE  sell  3000.0     0.10   Rockfeller\n","6   DOGE   buy  5000.0     0.20  J.P. Morgan"],"text/html":["\n","  <div id=\"df-7cbe2ca6-3d07-440a-a120-ea94f0e97cb6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","      <th>user</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","      <td>Morty</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","      <td>J.P. Morgan</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cbe2ca6-3d07-440a-a120-ea94f0e97cb6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7cbe2ca6-3d07-440a-a120-ea94f0e97cb6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7cbe2ca6-3d07-440a-a120-ea94f0e97cb6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["pd.merge(transactions, operations, on=['symbol', 'type'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"FaE_-jEbN1E_","executionInfo":{"status":"ok","timestamp":1649704008186,"user_tz":-180,"elapsed":380,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"79ec7acd-e0ed-4930-d674-e5a8f4d9776c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type         user  amount    price\n","0   DOGE  sell   Rockfeller  3000.0     0.15\n","1   DOGE  sell   Rockfeller  3000.0     0.10\n","2   DOGE   buy  J.P. Morgan  5000.0     0.20\n","3    BTC   buy     John Doe     1.0  5600.00\n","4    BTC   buy     John Doe    10.0  6000.00\n","5    BTC   buy     John Doe     2.5  5900.00\n","6    ETH   buy        Morty    20.0   350.00"],"text/html":["\n","  <div id=\"df-24605784-ea3e-46d4-94d3-4dcdbbb63090\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>user</th>\n","      <th>amount</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>Rockfeller</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>Rockfeller</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>J.P. Morgan</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>John Doe</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>John Doe</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>John Doe</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>Morty</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24605784-ea3e-46d4-94d3-4dcdbbb63090')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-24605784-ea3e-46d4-94d3-4dcdbbb63090 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-24605784-ea3e-46d4-94d3-4dcdbbb63090');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":352}]},{"cell_type":"code","metadata":{"id":"jAz81WEyYdfa","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1649704051134,"user_tz":-180,"elapsed":361,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"9cf50899-79ab-4284-e5f4-a0c473f9108f"},"source":["# Левый join таблиц - все записи из первой таблицы остаются и к ним присоединяются записи из правой.\n","# Аналогично работает правый join\n","pd.merge(operations, transactions, on=['symbol', 'type'], how='left')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  symbol  type  amount    price         user\n","0    ETH  sell    10.0   400.00          NaN\n","1    BTC   buy     1.0  5600.00     John Doe\n","2    ETH   buy    20.0   350.00        Morty\n","3    ETH  sell    10.0   300.00          NaN\n","4   DOGE  sell  3000.0     0.15   Rockfeller\n","5   DOGE   buy  5000.0     0.20  J.P. Morgan\n","6    BTC   buy    10.0  6000.00     John Doe\n","7    BTC   buy     2.5  5900.00     John Doe\n","8   DOGE  sell  3000.0     0.10   Rockfeller\n","9    BTC  sell     4.0  6200.00          NaN"],"text/html":["\n","  <div id=\"df-c4f515c5-f56e-4339-85b8-02fdfd01a00e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","      <th>user</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","      <td>Morty</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","      <td>J.P. Morgan</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c4f515c5-f56e-4339-85b8-02fdfd01a00e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c4f515c5-f56e-4339-85b8-02fdfd01a00e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c4f515c5-f56e-4339-85b8-02fdfd01a00e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":353}]},{"cell_type":"code","metadata":{"id":"4FRKDd7DYdfa","colab":{"base_uri":"https://localhost:8080/","height":394},"executionInfo":{"status":"ok","timestamp":1649704085457,"user_tz":-180,"elapsed":389,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"bb87792a-7c27-4d42-f98c-3193d0b6936b"},"source":["# Outer join - собираем вместе записи из обеих таблиц\n","pd.merge(operations, transactions, on=['symbol', 'type'], how='outer')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   symbol  type  amount    price         user\n","0     ETH  sell    10.0   400.00          NaN\n","1     ETH  sell    10.0   300.00          NaN\n","2     BTC   buy     1.0  5600.00     John Doe\n","3     BTC   buy    10.0  6000.00     John Doe\n","4     BTC   buy     2.5  5900.00     John Doe\n","5     ETH   buy    20.0   350.00        Morty\n","6    DOGE  sell  3000.0     0.15   Rockfeller\n","7    DOGE  sell  3000.0     0.10   Rockfeller\n","8    DOGE   buy  5000.0     0.20  J.P. Morgan\n","9     BTC  sell     4.0  6200.00          NaN\n","10    ADA  sell     NaN      NaN         Rick"],"text/html":["\n","  <div id=\"df-f42618ba-9c3c-4574-badf-df7dbeb5e1a7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>symbol</th>\n","      <th>type</th>\n","      <th>amount</th>\n","      <th>price</th>\n","      <th>user</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>400.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ETH</td>\n","      <td>sell</td>\n","      <td>10.0</td>\n","      <td>300.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>1.0</td>\n","      <td>5600.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>10.0</td>\n","      <td>6000.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BTC</td>\n","      <td>buy</td>\n","      <td>2.5</td>\n","      <td>5900.00</td>\n","      <td>John Doe</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>ETH</td>\n","      <td>buy</td>\n","      <td>20.0</td>\n","      <td>350.00</td>\n","      <td>Morty</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.15</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>DOGE</td>\n","      <td>sell</td>\n","      <td>3000.0</td>\n","      <td>0.10</td>\n","      <td>Rockfeller</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>DOGE</td>\n","      <td>buy</td>\n","      <td>5000.0</td>\n","      <td>0.20</td>\n","      <td>J.P. Morgan</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>BTC</td>\n","      <td>sell</td>\n","      <td>4.0</td>\n","      <td>6200.00</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>ADA</td>\n","      <td>sell</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Rick</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f42618ba-9c3c-4574-badf-df7dbeb5e1a7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f42618ba-9c3c-4574-badf-df7dbeb5e1a7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f42618ba-9c3c-4574-badf-df7dbeb5e1a7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":354}]},{"cell_type":"code","source":["pd.merge?"],"metadata":{"id":"N42FkKR2B6Xc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame.join?"],"metadata":{"id":"_tMlrP7oi3i5"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s2etsLe-Ydfb"},"source":["del operations_new, operations_old, operations, transactions"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a @ b"],"metadata":{"id":"pKXK0X22jMNB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["np.dot(a, b) # pd.merge(a, b)"],"metadata":{"id":"drjyzXz9jNVN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["a.dot(b) # a.join(b)"],"metadata":{"id":"Y8QU2bBwjOrn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xOgI29BhYdfb"},"source":["# Чтение таблиц"]},{"cell_type":"markdown","metadata":{"id":"Kl3HOz-HYdfb"},"source":["Чтобы данные анализировать их надо где-то взять. Для этого в pandas есть множество функций. Все их названия начинаются с префикса 'read_'. Мы разберем функцию read_csv."]},{"cell_type":"code","metadata":{"id":"HwAu9-qMYdfb","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1649692665103,"user_tz":-180,"elapsed":448,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"b7974833-bf19-487e-d843-4d13122996c6"},"source":["# Прочитать таблицу ни о чем не задумываясь\n","pd.read_csv('coins.csv')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             date       price  txCount      txVolume  activeAddresses symbol  \\\n","0      2013-04-28  135.300000  41702.0  6.879868e+07         117984.0    BTC   \n","1      2013-04-28    4.300000   9174.0  4.431952e+07          17216.0    LTC   \n","2      2013-04-29  134.440000  51602.0  1.138128e+08          86925.0    BTC   \n","3      2013-04-29    4.370000   9275.0  3.647810e+07          18395.0    LTC   \n","4      2013-04-30  144.000000  47450.0  8.426632e+07          76871.0    BTC   \n","...           ...         ...      ...           ...              ...    ...   \n","37583  2018-06-06    0.293325   4830.0  2.312763e+05            659.0    XLM   \n","37584  2018-06-06    0.039586   7205.0  4.947760e+06          18228.0    XVG   \n","37585  2018-06-06  239.760000  10687.0  3.986308e+07          96516.0    ZEC   \n","37586  2018-06-06    0.127555   1313.0  1.596436e+07            733.0    ZIL   \n","37587  2018-06-06    1.270000    795.0  6.094435e+06            599.0    ZRX   \n","\n","           name        open        high         low       close      volume  \\\n","0       Bitcoin  135.300000  135.980000  132.100000  134.210000         0.0   \n","1      Litecoin    4.300000    4.400000    4.180000    4.350000         0.0   \n","2       Bitcoin  134.440000  147.490000  134.000000  144.540000         0.0   \n","3      Litecoin    4.370000    4.570000    4.230000    4.380000         0.0   \n","4       Bitcoin  144.000000  146.930000  134.050000  139.000000         0.0   \n","...         ...         ...         ...         ...         ...         ...   \n","37583   Stellar    0.293325    0.299955    0.289500    0.298269  51165000.0   \n","37584     Verge    0.039586    0.039737    0.037680    0.038797   9307450.0   \n","37585     Zcash  239.750000  240.340000  229.210000  236.050000  56887000.0   \n","37586   Zilliqa    0.127555    0.133254    0.124194    0.131766  54667900.0   \n","37587        0x    1.270000    1.340000    1.250000    1.330000  17778000.0   \n","\n","             market  \n","0      1.500520e+09  \n","1      7.377340e+07  \n","2      1.491160e+09  \n","3      7.495270e+07  \n","4      1.597780e+09  \n","...             ...  \n","37583  5.450080e+09  \n","37584  5.959400e+08  \n","37585  9.769940e+08  \n","37586  9.348810e+08  \n","37587  6.741510e+08  \n","\n","[37588 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-a5cd28ae-71e6-49e2-b78f-102d91475883\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2013-04-28</td>\n","      <td>135.300000</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.300000</td>\n","      <td>135.980000</td>\n","      <td>132.100000</td>\n","      <td>134.210000</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2013-04-28</td>\n","      <td>4.300000</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.300000</td>\n","      <td>4.400000</td>\n","      <td>4.180000</td>\n","      <td>4.350000</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2013-04-29</td>\n","      <td>134.440000</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.440000</td>\n","      <td>147.490000</td>\n","      <td>134.000000</td>\n","      <td>144.540000</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2013-04-29</td>\n","      <td>4.370000</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.370000</td>\n","      <td>4.570000</td>\n","      <td>4.230000</td>\n","      <td>4.380000</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2013-04-30</td>\n","      <td>144.000000</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.000000</td>\n","      <td>146.930000</td>\n","      <td>134.050000</td>\n","      <td>139.000000</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>37583</th>\n","      <td>2018-06-06</td>\n","      <td>0.293325</td>\n","      <td>4830.0</td>\n","      <td>2.312763e+05</td>\n","      <td>659.0</td>\n","      <td>XLM</td>\n","      <td>Stellar</td>\n","      <td>0.293325</td>\n","      <td>0.299955</td>\n","      <td>0.289500</td>\n","      <td>0.298269</td>\n","      <td>51165000.0</td>\n","      <td>5.450080e+09</td>\n","    </tr>\n","    <tr>\n","      <th>37584</th>\n","      <td>2018-06-06</td>\n","      <td>0.039586</td>\n","      <td>7205.0</td>\n","      <td>4.947760e+06</td>\n","      <td>18228.0</td>\n","      <td>XVG</td>\n","      <td>Verge</td>\n","      <td>0.039586</td>\n","      <td>0.039737</td>\n","      <td>0.037680</td>\n","      <td>0.038797</td>\n","      <td>9307450.0</td>\n","      <td>5.959400e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37585</th>\n","      <td>2018-06-06</td>\n","      <td>239.760000</td>\n","      <td>10687.0</td>\n","      <td>3.986308e+07</td>\n","      <td>96516.0</td>\n","      <td>ZEC</td>\n","      <td>Zcash</td>\n","      <td>239.750000</td>\n","      <td>240.340000</td>\n","      <td>229.210000</td>\n","      <td>236.050000</td>\n","      <td>56887000.0</td>\n","      <td>9.769940e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37586</th>\n","      <td>2018-06-06</td>\n","      <td>0.127555</td>\n","      <td>1313.0</td>\n","      <td>1.596436e+07</td>\n","      <td>733.0</td>\n","      <td>ZIL</td>\n","      <td>Zilliqa</td>\n","      <td>0.127555</td>\n","      <td>0.133254</td>\n","      <td>0.124194</td>\n","      <td>0.131766</td>\n","      <td>54667900.0</td>\n","      <td>9.348810e+08</td>\n","    </tr>\n","    <tr>\n","      <th>37587</th>\n","      <td>2018-06-06</td>\n","      <td>1.270000</td>\n","      <td>795.0</td>\n","      <td>6.094435e+06</td>\n","      <td>599.0</td>\n","      <td>ZRX</td>\n","      <td>0x</td>\n","      <td>1.270000</td>\n","      <td>1.340000</td>\n","      <td>1.250000</td>\n","      <td>1.330000</td>\n","      <td>17778000.0</td>\n","      <td>6.741510e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37588 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a5cd28ae-71e6-49e2-b78f-102d91475883')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a5cd28ae-71e6-49e2-b78f-102d91475883 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a5cd28ae-71e6-49e2-b78f-102d91475883');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":192}]},{"cell_type":"code","metadata":{"id":"HmoPxD57Ydfb","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1649692668965,"user_tz":-180,"elapsed":393,"user":{"displayName":"Никита Николаевич Честнов","userId":"04102744290911048542"}},"outputId":"b43183dc-ab8f-4fc7-8c35-eb6d30b747fd"},"source":["# Прочитать таблицу и использовать колонку date как индекс\n","pd.read_csv('coins.csv', index_col='date')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 price  txCount      txVolume  activeAddresses symbol  \\\n","date                                                                    \n","2013-04-28  135.300000  41702.0  6.879868e+07         117984.0    BTC   \n","2013-04-28    4.300000   9174.0  4.431952e+07          17216.0    LTC   \n","2013-04-29  134.440000  51602.0  1.138128e+08          86925.0    BTC   \n","2013-04-29    4.370000   9275.0  3.647810e+07          18395.0    LTC   \n","2013-04-30  144.000000  47450.0  8.426632e+07          76871.0    BTC   \n","...                ...      ...           ...              ...    ...   \n","2018-06-06    0.293325   4830.0  2.312763e+05            659.0    XLM   \n","2018-06-06    0.039586   7205.0  4.947760e+06          18228.0    XVG   \n","2018-06-06  239.760000  10687.0  3.986308e+07          96516.0    ZEC   \n","2018-06-06    0.127555   1313.0  1.596436e+07            733.0    ZIL   \n","2018-06-06    1.270000    795.0  6.094435e+06            599.0    ZRX   \n","\n","                name        open        high         low       close  \\\n","date                                                                   \n","2013-04-28   Bitcoin  135.300000  135.980000  132.100000  134.210000   \n","2013-04-28  Litecoin    4.300000    4.400000    4.180000    4.350000   \n","2013-04-29   Bitcoin  134.440000  147.490000  134.000000  144.540000   \n","2013-04-29  Litecoin    4.370000    4.570000    4.230000    4.380000   \n","2013-04-30   Bitcoin  144.000000  146.930000  134.050000  139.000000   \n","...              ...         ...         ...         ...         ...   \n","2018-06-06   Stellar    0.293325    0.299955    0.289500    0.298269   \n","2018-06-06     Verge    0.039586    0.039737    0.037680    0.038797   \n","2018-06-06     Zcash  239.750000  240.340000  229.210000  236.050000   \n","2018-06-06   Zilliqa    0.127555    0.133254    0.124194    0.131766   \n","2018-06-06        0x    1.270000    1.340000    1.250000    1.330000   \n","\n","                volume        market  \n","date                                  \n","2013-04-28         0.0  1.500520e+09  \n","2013-04-28         0.0  7.377340e+07  \n","2013-04-29         0.0  1.491160e+09  \n","2013-04-29         0.0  7.495270e+07  \n","2013-04-30         0.0  1.597780e+09  \n","...                ...           ...  \n","2018-06-06  51165000.0  5.450080e+09  \n","2018-06-06   9307450.0  5.959400e+08  \n","2018-06-06  56887000.0  9.769940e+08  \n","2018-06-06  54667900.0  9.348810e+08  \n","2018-06-06  17778000.0  6.741510e+08  \n","\n","[37588 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-bdcac7d5-0f69-469b-93d8-e1bf2e0a60ae\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>txCount</th>\n","      <th>txVolume</th>\n","      <th>activeAddresses</th>\n","      <th>symbol</th>\n","      <th>name</th>\n","      <th>open</th>\n","      <th>high</th>\n","      <th>low</th>\n","      <th>close</th>\n","      <th>volume</th>\n","      <th>market</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2013-04-28</th>\n","      <td>135.300000</td>\n","      <td>41702.0</td>\n","      <td>6.879868e+07</td>\n","      <td>117984.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>135.300000</td>\n","      <td>135.980000</td>\n","      <td>132.100000</td>\n","      <td>134.210000</td>\n","      <td>0.0</td>\n","      <td>1.500520e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2013-04-28</th>\n","      <td>4.300000</td>\n","      <td>9174.0</td>\n","      <td>4.431952e+07</td>\n","      <td>17216.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.300000</td>\n","      <td>4.400000</td>\n","      <td>4.180000</td>\n","      <td>4.350000</td>\n","      <td>0.0</td>\n","      <td>7.377340e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2013-04-29</th>\n","      <td>134.440000</td>\n","      <td>51602.0</td>\n","      <td>1.138128e+08</td>\n","      <td>86925.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>134.440000</td>\n","      <td>147.490000</td>\n","      <td>134.000000</td>\n","      <td>144.540000</td>\n","      <td>0.0</td>\n","      <td>1.491160e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2013-04-29</th>\n","      <td>4.370000</td>\n","      <td>9275.0</td>\n","      <td>3.647810e+07</td>\n","      <td>18395.0</td>\n","      <td>LTC</td>\n","      <td>Litecoin</td>\n","      <td>4.370000</td>\n","      <td>4.570000</td>\n","      <td>4.230000</td>\n","      <td>4.380000</td>\n","      <td>0.0</td>\n","      <td>7.495270e+07</td>\n","    </tr>\n","    <tr>\n","      <th>2013-04-30</th>\n","      <td>144.000000</td>\n","      <td>47450.0</td>\n","      <td>8.426632e+07</td>\n","      <td>76871.0</td>\n","      <td>BTC</td>\n","      <td>Bitcoin</td>\n","      <td>144.000000</td>\n","      <td>146.930000</td>\n","      <td>134.050000</td>\n","      <td>139.000000</td>\n","      <td>0.0</td>\n","      <td>1.597780e+09</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2018-06-06</th>\n","      <td>0.293325</td>\n","      <td>4830.0</td>\n","      <td>2.312763e+05</td>\n","      <td>659.0</td>\n","      <td>XLM</td>\n","      <td>Stellar</td>\n","      <td>0.293325</td>\n","      <td>0.299955</td>\n","      <td>0.289500</td>\n","      <td>0.298269</td>\n","      <td>51165000.0</td>\n","      <td>5.450080e+09</td>\n","    </tr>\n","    <tr>\n","      <th>2018-06-06</th>\n","      <td>0.039586</td>\n","      <td>7205.0</td>\n","      <td>4.947760e+06</td>\n","      <td>18228.0</td>\n","      <td>XVG</td>\n","      <td>Verge</td>\n","      <td>0.039586</td>\n","      <td>0.039737</td>\n","      <td>0.037680</td>\n","      <td>0.038797</td>\n","      <td>9307450.0</td>\n","      <td>5.959400e+08</td>\n","    </tr>\n","    <tr>\n","      <th>2018-06-06</th>\n","      <td>239.760000</td>\n","      <td>10687.0</td>\n","      <td>3.986308e+07</td>\n","      <td>96516.0</td>\n","      <td>ZEC</td>\n","      <td>Zcash</td>\n","      <td>239.750000</td>\n","      <td>240.340000</td>\n","      <td>229.210000</td>\n","      <td>236.050000</td>\n","      <td>56887000.0</td>\n","      <td>9.769940e+08</td>\n","    </tr>\n","    <tr>\n","      <th>2018-06-06</th>\n","      <td>0.127555</td>\n","      <td>1313.0</td>\n","      <td>1.596436e+07</td>\n","      <td>733.0</td>\n","      <td>ZIL</td>\n","      <td>Zilliqa</td>\n","      <td>0.127555</td>\n","      <td>0.133254</td>\n","      <td>0.124194</td>\n","      <td>0.131766</td>\n","      <td>54667900.0</td>\n","      <td>9.348810e+08</td>\n","    </tr>\n","    <tr>\n","      <th>2018-06-06</th>\n","      <td>1.270000</td>\n","      <td>795.0</td>\n","      <td>6.094435e+06</td>\n","      <td>599.0</td>\n","      <td>ZRX</td>\n","      <td>0x</td>\n","      <td>1.270000</td>\n","      <td>1.340000</td>\n","      <td>1.250000</td>\n","      <td>1.330000</td>\n","      <td>17778000.0</td>\n","      <td>6.741510e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>37588 rows × 12 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bdcac7d5-0f69-469b-93d8-e1bf2e0a60ae')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bdcac7d5-0f69-469b-93d8-e1bf2e0a60ae button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bdcac7d5-0f69-469b-93d8-e1bf2e0a60ae');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":193}]},{"cell_type":"code","metadata":{"id":"X40KmGIHYdfc"},"source":["# Прочитать таблицу и дать pandas подсказки по поводу типов данных в колонках symbol и name\n","df = pd.read_csv('coins.csv', dtype={'symbol': str, 'name': str, \"open\": str})"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nWEyeyz0mTmO","executionInfo":{"status":"ok","timestamp":1666205710722,"user_tz":-180,"elapsed":889,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fa2d7010-0c64-4bed-df3f-182539ba6761"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 37588 entries, 0 to 37587\n","Data columns (total 13 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   date             37588 non-null  object \n"," 1   price            37261 non-null  float64\n"," 2   txCount          36068 non-null  float64\n"," 3   txVolume         35758 non-null  float64\n"," 4   activeAddresses  36068 non-null  float64\n"," 5   symbol           37588 non-null  object \n"," 6   name             37588 non-null  object \n"," 7   open             37588 non-null  object \n"," 8   high             37588 non-null  float64\n"," 9   low              37588 non-null  float64\n"," 10  close            37588 non-null  float64\n"," 11  volume           37588 non-null  float64\n"," 12  market           37588 non-null  float64\n","dtypes: float64(9), object(4)\n","memory usage: 3.7+ MB\n"]}]},{"cell_type":"markdown","metadata":{"id":"wLSlRk5qYdfc"},"source":["## Запись таблиц"]},{"cell_type":"code","metadata":{"id":"-AwEwueoYdfc"},"source":["coins = pd.read_csv('coins.csv')\n","\n","coins.to_csv('file.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.read_csv?"],"metadata":{"id":"90KClxz1m4id"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pd.DataFrame.to_csv?"],"metadata":{"id":"2Ffqd_FQnMp6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"K9qp898tYdfc"},"source":["# Визуализация"]},{"cell_type":"markdown","metadata":{"id":"ZfKeOFdbYdfc"},"source":["В pandas есть очень простые средства визуализации. Они подойдут для быстрого анализа, но если хочется сделать красиво и информативно, то вы не по адресу. Любая визуализация делается через аттрибут plot у объекта pandas.Series или pandas.DataFrame."]},{"cell_type":"markdown","metadata":{"id":"WYfFszW7Ydfc"},"source":["Стоит отметить что для отображения графиков нужно использовать магическую команду для jupyter\n","```\n","%matplotlib\n","```\n","При этом график появится в отдельном окне. Там же будет несколько полезных кнопок для редактирования и сохранения графика. Если хочется чтобы графики отображались прямо в ноутбуке то надо передать аргумент inline\n","```\n","%matplotlib inline\n","```"]},{"cell_type":"code","metadata":{"id":"oft7ikA3Ydfd"},"source":["%matplotlib inline"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LXN09MrmYdfd","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1666206163328,"user_tz":-180,"elapsed":262,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"dd8bd684-af9a-43d3-dc5c-bf6a9cf7c8a4"},"source":["price = pd.DataFrame(\n","    data=[\n","        [0.547, 0.745],\n","        [0.5, 0.964],\n","        [0.77, 0.718],\n","        [0.135, 0.845],\n","        [0.53, None],\n","        [0.15, 0.795]],\n","    columns=['ADA', 'DOGE'],\n","    index=pd.date_range('2018-11-01', periods=6)\n",")\n","price"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              ADA   DOGE\n","2018-11-01  0.547  0.745\n","2018-11-02  0.500  0.964\n","2018-11-03  0.770  0.718\n","2018-11-04  0.135  0.845\n","2018-11-05  0.530    NaN\n","2018-11-06  0.150  0.795"],"text/html":["\n","  <div id=\"df-d0942a2c-5bda-42c6-bc9d-eb93e36867db\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ADA</th>\n","      <th>DOGE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2018-11-01</th>\n","      <td>0.547</td>\n","      <td>0.745</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-02</th>\n","      <td>0.500</td>\n","      <td>0.964</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-03</th>\n","      <td>0.770</td>\n","      <td>0.718</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-04</th>\n","      <td>0.135</td>\n","      <td>0.845</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-05</th>\n","      <td>0.530</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2018-11-06</th>\n","      <td>0.150</td>\n","      <td>0.795</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0942a2c-5bda-42c6-bc9d-eb93e36867db')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d0942a2c-5bda-42c6-bc9d-eb93e36867db button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d0942a2c-5bda-42c6-bc9d-eb93e36867db');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["coins.groupby('symbol').get_group('BTC').price"],"metadata":{"id":"vIjtuhMmDVdj","executionInfo":{"status":"ok","timestamp":1666206169615,"user_tz":-180,"elapsed":724,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8966ba02-05d4-4f35-ccb7-7b383e9d6848","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         135.30\n","2         134.44\n","4         144.00\n","6         139.00\n","8         116.38\n","          ...   \n","37245    7536.72\n","37315    7632.09\n","37385    7722.53\n","37455    7500.90\n","37525    7625.97\n","Name: price, Length: 1866, dtype: float64"]},"metadata":{},"execution_count":111}]},{"cell_type":"code","source":["coins.groupby('symbol').get_group('BTC').price.plot()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"WvFQRFZ_QaWD","executionInfo":{"status":"ok","timestamp":1666206194925,"user_tz":-180,"elapsed":775,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"f9f4f4b7-46d4-42bd-b9b4-c125375fb42d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c88eed0>"]},"metadata":{},"execution_count":112},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"70hRfhHjYdfd","colab":{"base_uri":"https://localhost:8080/","height":309},"executionInfo":{"status":"ok","timestamp":1666206206605,"user_tz":-180,"elapsed":353,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6d9215b0-420c-4e3e-bf3a-05d0af165eea"},"source":["# Нарисовать график цены монеты ADA.\n","# Так как индекс в нашей таблице временный, то pandas догадывается, что его можно использовать\n","# как ось времени на графиках.\n","price['ADA'].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c77e2d0>"]},"metadata":{},"execution_count":113},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXoAAAETCAYAAAA4W80CAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deXhU5fn/8fc92fcQsm+EJSQEGEQQEbcqIgGi1rbfVlv91daW2tZqtVXRLt9+XarWVq3VWq3d3KXWtsgqCu4bIHtCQghLAmRhyQIh+/P7YwaMmJBJMjNnMnO/rsurmTNnzrk7TD5z8pzn3EeMMSillPJfNqsLUEop5Vka9Eop5ec06JVSys9p0CullJ/ToFdKKT+nQa+UUn7OpaAXkUIRKRWRchFZ0MPz2SKyWkTWi8gmEZnr/lKVUkoNhPQ1j15EgoAyYBZQBawBrjTGFHdb50lgvTHmcREpAJYaY3I8VrVSSimXuXJEPw0oN8ZUGGPagBeBy05axwCxzp/jgH3uK1EppdRgBLuwTgZQ2e1xFXDmSev8CnhNRH4ERAEX9bXRxMREk5OT41qVSimlAFi3bt0BY0xSf17jStC74krg78aY34nIWcAzIjLBGNPVfSURmQ/MB8jOzmbt2rVu2r1SSgUGEdnd39e4MnSzF8jq9jjTuay7a4GFAMaYD4BwIPHkDRljnjTGTDXGTE1K6tcXklJKqQFyJejXALkiMlJEQoErgEUnrbMHmAkgIuNwBH2dOwtVSik1MH0GvTGmA7geWAGUAAuNMVtF5E4RudS52k+A74rIRuAF4BqjbTGVUsonuDRGb4xZCiw9adkvu/1cDJzt3tKUUkq5g14Zq5RSfk6DXiml/JwGvVJK+TkNeuUzXvx4D//dcPLMXaXUYLnrgimlBmXxpn0seGUz8ZEhzJ2YRkiQHoMo5S7626QsV1rdxK0vbyIxOoz65nbeKz9gdUlK+RUNemWphuZ25j+zluiwYP79gxnEhAWzeNN+q8tSyq9o0CvLdHYZbnxpPfvqj/H4VaeTlRDJrPEprNhaTVtHV98bUEq5RINeWebh18t4s7SOX106nikjEgC4xJ5OU0sH72zXDhpKuYsGvbLE8i3V/GFVOVeckcXXp2WfWH72mETiIkJ0+EYpN9KgV15XXtvETxZu4LSseP7vsvGIyInnQoNtzB6fwsriGlraOy2sUin/oUGvvKqxpZ35T68jIjSYP101hbDgoM+tU2RP50hrB2+V6fCNUu6gQa+8pqvLcPNLG9hzqJk/fuN0UuPCe1xvxujhDIvU4Rul3EWDXnnNI6u283pJLb+8pIBpIxN6XS84yEbhhDTeKKnhWJsO3yg1WBr0yitWFtfw8Ovb+fLpmVw9fUSf619iT6O5rZPVpbVeqE4p/6ZBrzxuR90Rbn5pAxMz4rjn8gmfOfnamzNHDScxOozFm/Z5oUKl/JsGvfKoppZ25j+9lpBgG3+6egrhIZ8/+dqTIJswd2Iqq7bVcrS1w8NVKuXfNOiVx3R1GX6ycCO7Djbz6NcnkxEf0a/Xz5uYRkt7F6+X1HioQqUCgwa98pg/vlnOa8U13DF3HDNGJ/b79WfkJJASG8YSnX2j1KBo0CuPWL2tlt+tLOOLp6Xz7bNzBrQNm02YOzGNN8vqaGppd2+BSgUQDXrldrsOHOWGF9czLjWWe79kd+nka2+K7Gm0dXSxsliHb5QaKA165VZHWzuY/8xagmzCE1dPISLUtZOvvZmcNYz0uHAdvlFqEFwKehEpFJFSESkXkQU9PP+QiGxw/lcmIvXuL1X5OmMMt7y8kfLaIzx6paPt8GDZbMI8expvb6+joVmHb5QaiD6DXkSCgMeAOUABcKWIFHRfxxhzkzHmNGPMacAfgFc8UazybX96q4Klm6tZMCefc3L7f/K1N0X2dNo7DSuKq922TaUCiStH9NOAcmNMhTGmDXgRuOwU618JvOCO4tTQ8VZZHb9ZsY0iexrfPXeUW7dtz4wjKyFCe98oNUCuBH0GUNntcZVz2eeIyAhgJLBq8KWpoWLPwWZueGE9eSkx/OYrgzv52hMRYd7EdN4rP8Dho21u3bZSgcDdJ2OvAF42xvTYiUpE5ovIWhFZW1enLWj9QXOb4+QrwBNXTyEyNNgj+ymyp9HZZVi+VYdvlOovV4J+L5DV7XGmc1lPruAUwzbGmCeNMVONMVOTkpJcr1L5JGMMt/1rM6U1TTxy5WRGDI/y2L7Gp8eSMzxSe98oNQCuBP0aIFdERopIKI4wX3TySiKSDwwDPnBvicpXPfXOTl7duI9bZudx/ljPfnGLCEX2dD7YcZADR1o9ui+l/E2fQW+M6QCuB1YAJcBCY8xWEblTRC7ttuoVwIvGGOOZUpUvea/8APcuK2HuxFS+f/5or+yzaFIaXQaWbdHhG6X6w6UBVWPMUmDpSct+edLjX7mvLOXLqg43c/3znzAmOZoHvjLJ7Sdfe5OXEsOY5GgWb9znUk97pZSDXhmr+qWlvZPvPbOOji7DE1dPJSrMMydfe+KYfZPGx7sOUdPY4rX9KjXUadArlxljuP2VzRTvb+T3V5zGyETPnXztzSWT0jAGlm3WOfVKuUqDXrns7+/v4t/r93LzRWO5MD/FkhrGJMeQnxqjF08p1Q8a9MolH1Yc5O4lJcwqSOGHF4yxtJYiexprdx9mX/0xS+tQaqjQoFd92ld/jB8+9wkjhkfy4FcnYbN55+Rrb+bZ0wFYqsM3SrlEg16dUkt7J9c9u47Wji6evHoqMeEhVpfEyMQoxqfH6vCNUi7SoFe9Msbw8/9sYVNVAw9+dRJjkqOtLumEIns6GyrrqTzUbHUpSvk8DXrVq2c/3M3L66q4YWYuF49Ptbqcz5g3MQ2AJTp8o1SfNOhVj9bsOsT/vVrMzPxkfjwz1+pyPid7eCSTMuP0zlNKuUCDXn1OdUML33/2E7ISInnwa6dZfvK1N0X2dDbvbWDXgaNWl6KUT9OgV5/R2uE4+XqsrYMnr55CXIT1J197M9euwzdKuUKDXn3GrxZtZUNlPb/76iRyU2KsLueUMuIjOD07XmffKNUHDXp1wvMf7eGFjyv54QWjKZyQZnU5Limyp1Oyv5EddUesLkUpn6VBrwBYt/sw/7toC+ePTeLmWXlWl+OyuRPTEIHFG/WoXqneaNArahtb+P6z60iLi+CRKyYT5KMnX3uSGhfOGSMS9M5TSp2CBn2Aa+vo4vvPfUJTSwdP/r8pxEX67snX3hRNSmN77RHKapqsLkUpn6RBH+DuXLyVdbsP88D/2MlPjbW6nAGZMyENm8DijXpUr1RPNOgD2Etr9vDsh3v43vmjKHI2ChuKkmLCmD5qOIs37UfvZKnU52nQB6gNlfX84j9bOTc3kVtn51tdzqDNs6dRceAoxfsbrS5FKZ+jQR+A6ppaue6ZdSTHhg25k6+9mTMhjSCbaEsEpXqgQR9g2ju7+OFzn1B/rI0nrp7CsKhQq0tyi4SoUGaM1uEbpXqiQR9g7llSwse7DnH/l+2MT4+zuhy3KrKnsedQM5v3NlhdilI+xaWgF5FCESkVkXIRWdDLOl8VkWIR2Soiz7u3TOUO/1pXxd/f38V3zhnJZadlWF2O280en0qwDt8o9Tl9Br2IBAGPAXOAAuBKESk4aZ1c4HbgbGPMeODHHqhVDcLmqgbu+Pdmzho1nAVzhv7J157ER4Zybm6iDt8odRJXjuinAeXGmApjTBvwInDZSet8F3jMGHMYwBhT694y1WAcPNLKdc+uY3hUKI9+fTLBQf47YldkT2dv/THWV9ZbXYpSPsOV3/gMoLLb4yrnsu7GAmNF5D0R+VBECt1VoBqcjs4urn9+PXVHWnni6qkMjw6zuiSPmjU+hdAgm/a+Uaobdx3aBQO5wBeAK4E/i0j8ySuJyHwRWSsia+vq6ty0a3Uq9y3bxgcVB7n38olMzPSvk689iQ0P4byxSSzdvJ+uLh2+UQpcC/q9QFa3x5nOZd1VAYuMMe3GmJ1AGY7g/wxjzJPGmKnGmKlJSUkDrVm56L8b9vLUuzu5ZkYOX56SaXU5XnPJpDSqG1tYt+ew1aUo5RNcCfo1QK6IjBSRUOAKYNFJ6/wHx9E8IpKIYyinwo11qn7auq+B2/61iWk5Cfxs3jiry/GqmeNSCAu2ae8bpZz6DHpjTAdwPbACKAEWGmO2isidInKpc7UVwEERKQZWA7cYYw56qmh1aoePtvG9Z9YRHxHKY984nRA/Pvnak+iwYC7IS2bplmo6dfhGKYJdWckYsxRYetKyX3b72QA3O/9TFuro7OJHL6yntrGVhdedRVKMf5987U3RpDSWb63m452HOGv0cKvLUcpSgXWoFwAeeK2Ud8sPcPcXJ3Ba1ufOhweMC/OTiQgJ0huSKIUGvV9ZvGkfT7xVwVXTs/nqGVl9v8CPRYYGc+G4ZJZvqaajs8vqcpSylAa9n9hW3cgt/9zElBHD+GXReKvL8QmX2NM4eLSNDysOWV2KUpbSoPcD9c1tzH96HTHhwTz+jdMJDdZ/VoAv5CUTFarDN0ppIgxxnV2GG1/cwP6GYzx+1RSSY8OtLslnhIcEMasgheVbq2nX4RsVwDToh7gHV5byVlkd/3fpBKaMGGZ1OT5nnj2d+uZ23is/YHUpSllGg34IW7Z5P4+t3sGV07L4+pnZVpfjk84bm0hMeDCLtXWxCmAa9ENUWU0TP/nnRk7LiudXl+rJ196EBQdxcUEqK7ZW09rRaXU5SllCg34IajjWzveeWUdkaDB/umoKYcFBVpfk04rsaTS1dPBOmQ7fqMCkQT/EdHUZbnppA5WHmnn8qtNJjdOTr305e0wicREhLNmswzcqMFkW9M1tnfqn9AA8/MZ2Vm2r5X8vKeCMnASryxkSQoNtFI5PZWVxDS3t+plTgceyoN9Rd4SJ//sal//xPe58tZhXN+6j6nCz3gLuFF7bWs0jb2znK1MyuWr6CKvLGVKKJqVxpLWDN0v1Pggq8LjU1MwTshMi+dbZOazfU8/zH+/mr+/tBCApJozJWfFMzh7G5Ox47JlxRIZaVqbPKK89ws0LN2LPjOPuL05ARKwuaUg5a9RwEqJCWbJ5P4UTUq0uRymvsixB4yJCuH2uo096e2cXpdVNrN9zmPV76llfWc9rxTUABNmEvJQYJmd/Gv4jh0dhswVO0DW1tDP/mbWEBdv401VTCA/Rk6/9FRxko3BCKv9Zv5djbZ1EhOp7qAKHTxwqhwTZmJARx4SMOK4+y7Hs0NE2NlbWO8K/sp5FG/bx3Ed7AMeXxGlZ8ZyWFe/4AsgaRlxkiIX/Dzynq8tw88KN7D7YzLPXnkl6fITVJQ1ZRfY0nv9oD6u21TLPnmZ1OUp5jU8EfU8SokK5ID+ZC/KTAUfg7ag74jzidxz5/2HVdo7fV2JUUhSTs4Y5j/zjyUuJIdgPbrjx6OpyVhbX8MuiAu2rPkhnjhxOYnQYizft06BXAcVng/5kNpuQmxJDbkrMiRa8R1o72FRV7wj/PfW8VVbLvz6pAiAiJAh7ZtyJ4Z7JWfFDrg/Mqm01PPR6GZdPzuBbZ+dYXc6QF2QT5k5M5aU1lRxt7SAqbMh8/ANWV5fh2n+sYUxyND+bV2B1OUPWkP6kR4cFM2N0IjNGJwJgjKHq8DE+6TbW/5d3K2jvdBz2Z8RHfGasf3x6rM9ebLTzwFFufHEDBWmx/PryiXry1U2K7Ok8/cFuXi+p4bLTMqwuR/Xh1U37WF1ax+rSOi6ZlI49M3BvpjMYQzroTyYiZCVEkpUQeeKXuKW9k637GtlwfLx/T/2JvichQUJBepxzlk88p2cPI3NYhOWheqS1g/lPryXYJvzpqil64tCNpo4YRkpsGIs37deg93GtHZ389rVS8lNjOHCklbsWF7Pwe2dZ/vs5FPlV0PckPCSIKSOGOTs7jgSgtrGF9ZXHh3wO89KaSv7+/i4AEqNDOa3bWL89M55oL/6Jb4zhln9uZEfdEZ659kyyEiK9tu9AYLMJcyem8dyHe2hsaSc23D9P4vuDZz/cQ+WhYzz97WlUHT7GHf/ezLIt1cydqOdX+svvg74nybHhzB6fyuzxjvnUHZ1dlNY0nRjrX195mNdLHNM7bQJjU2JODPecnh3PqMRoj03vfPytHSzbUs3P5o7j7DGJHtlHoCuyp/O393bxenENXzo90+pyVA8ajrXz6KrtnJubyHljk+jsMjz9wS7uXVbChfnJOsW4nwIy6E8WHGRjfHoc49PjTlxxWt/c5hzuqWdDZT1LNu3jhY8d0ztjwoMdUzudF3adlhXPsKjQQdfxZmktD6wo5ZJJ6Xzn3JGD3p7q2enZ8WTER7B4034Neh/1p7d2cLi5ndsK8wHHifSfzyvgqr98xN/f38V154+2uMKhRYO+F/GRoXwhL5kv5H06vXPnwaMnhnvW76nn0dXlJ6Z3jkyMOjHWPzl7GHmpMYT0Y3rn7oNHueGF9eSlxHD/l/XkqyeJOGbf/P39XTQ0t/vtNRhD1f6GY/z13Z1cPjmDCRlxJ5afk5vIzPxkHl1VzlemZJIYHWZhlUOLS0EvIoXA74Eg4CljzH0nPX8N8ACw17noUWPMU26s03I2mzA6KZrRSdF8ZYrjKPBoaweb9zacCP93yg/wynrHWxAeYsOeEX9irH9y9jBSepne2dzWwfeeWYeI8OTVU7XlgxcU2dP58zs7WVFczVenZlldjurmoZVlGAM3zxr7uedunzuOwoff5sGVZfz68okWVDc09ZkoIhIEPAbMAqqANSKyyBhTfNKqLxljrvdAjT4rKiyY6aOGM32U40ImYwx764+dGPJZv+cwf3tvF0+87bhfaXpc+ImhnsnZ8UzIiCMs2MatL2+irKaJv39rGtnD9eSrN9gz48hOiGTxpv0a9D6ktLqJl9dV8e2zR/Y4EWFMcjRXTR/B0x/s4v+dNYL81FjvFzkEuXLoOA0oN8ZUAIjIi8BlwMlBH/BEhMxhkWQOi6TIng44poiV7O/ex+fwib7owTYhe3gkFXVHua0wn/PGJllZfkAREebZ03jy7QoOHW0jwQ3nWNTg3b98G9FhwVx/4Zhe17lxZi7/Xr+Xe5aU8PS3p+kwpwtcCfoMoLLb4yrgzB7W+7KInAeUATcZYypPXkFE5gPzAbKzA+Mep2HBQSf68nzrbMeyuqbWz8zrP3t0ItedP8raQgPQvIlpPP7mDpZvqdZ77vqAD3YcZNW2WhbMySc+svcv3mFRodwwM5e7FhezurSWC/NTvFjl0OSuZjCvAjnGGDuwEvhHTysZY540xkw1xkxNSgrco9ekmDBmFaRwa2E+L8yfzl3adtgS49NjGZkYxZLN+6wuJeAZY7hvWQnpceFcMyOnz/Wvnj6CkYlR3LOkhPbOLs8XOMS5EvR7ge6DmJl8etIVAGPMQWNMq/PhU8AU95SnlOeICEX2ND7YcZC6pta+X6A8Zsnm/WysauDmi/NcmiMfGmzjjrnj2FF3lOedXW1V71wJ+jVAroiMFJFQ4ApgUfcVRKT7pWqXAiXuK1Epz5lnT6PLwPItej9Zq7R1dPGb5Y5WB5dPdr0txUXjkpkxejgPvV5GQ3O7Bysc+voMemNMB3A9sAJHgC80xmwVkTtF5FLnajeIyFYR2QjcAFzjqYKVcqe8lBjGJEef6H+kvO/5j3az51AzC+bkE9SPK85FHBdRNRxr55FV2z1Y4dDn0hi9MWapMWasMWa0MeYe57JfGmMWOX++3Rgz3hgzyRhzgTFmmyeLVspdjg/ffLzrEDWNLVaXE3CaWtp5ZFU5M0YP5/wBzDorSI/la1OzePqDXew8cNT9BfqJoX9nDqUGqciehjGwdLMe1XvbE285prfePmfcgCck3HzxWEKDbPx6qY4Y90aDXgW8Mckx5KfG6PCNl9U0tvDUuxVcOimdiZlxfb+gF8kx4fzggjGsLK7h/R0H3Fih/9CgVwrHUf263YfZV3/M6lICxkMry+jsMtwyO2/Q27r2nJFkxEdw1+ISOo83oFInaNArBSeuZNbhG+/YXtPEwrWVXD09xy33XAgPCeK2OfmU7G/k5XWfu1Yz4GnQKwXkJEYxISOWV3X4xivuX76NqNBTtzror0vsaZyeHc8DK8o40trhtu36Aw16pZzmTUxnY2U9lYearS7Fr3288xCvl9Ty/QtGu7XHkIjwi6ICDhxp5fE3y922XX+gQa+UU5Hdcd3fEh2+8RhjDL9eWkJqbDjfPtv9N9eZnD2My05ztKCuOqxf2Mdp0CvllJUQyaSseBZv0t43nrJsSzUbKuu5+eKxHrsd4K2F+Qjwm+WlHtn+UKRBr1Q3RRPT2LK3kV168Y3btXd28Zvl28hLieHLHryFY0Z8BPPPG8Wijfv4ZM9hj+1nKNGgV6qbeTp84zEvfLyHXQebuW1OXr9aHQzEdeePJjkmjLsWF2OMTrfUoFeqm/T4CKaMGMarG3X4xp2OtHbw+9e3M31UAhc478PsSVFhwfx0dh7r99SzSP8tNeiVOlmRPY1t1U2U1x6xuhS/8eTbFRwcZKuD/vrK6ZmMT4/l/mXbaGnv9Mo+fZUGvVInmTsxDRH0pKyb1Da28Oe3KyiypzEpK95r+7XZHN0t9zW08NQ7FV7bry/SoFfqJCmx4ZyRk8ASvXjKLR5+YzsdXV1uaXXQX2eNHs7FBSn88c0d1AZwd1INeqV6cIk9je21RyitbrK6lCGtvPYIL62p5BtnjmDE8ChLarhj7jjaO7v47WuBO91Sg16pHhROSMOmwzeD9pvl24gICeJHbmx10F85iVF886wc/rmuii17Gyyrw0oa9Er1ICkmjOmjhrNk036dnjdAa3cd4rXiGq47fxTDo8MsreVHM3OJjwjh7iWBOd1Sg16pXhTZ06k4cJTi/Y1WlzLkHG91kBIbxrXnjLK6HOIiQrhp1lg+rHB8+QQaDXqlelE4IZUgm+gNSQZgxdYaPtlTz00XjSUi1DOtDvrr69OyGZMczb1LS2jr6LK6HK/SoFeqFwlRocwYPZzFm/YF5J/7A3W81cGY5Gi+MsVzrQ76KzjIxs/mjWPXwWae/mCX1eV4lQa9UqdwiT2dykPH2BygJ/EG4qU1lVQcOMqCwnyCg3wrYi7IS+a8sUk88sZ2Dh9ts7ocr/GtfwWlfMzs8amEBOnwjauOtnbw8OvbmZaTwMxxnm91MBA/nzeOo22dPPx6mdWleI1LQS8ihSJSKiLlIrLgFOt9WUSMiEx1X4lKWScuMoRzxiTq7BsX/fmdCg4caeX2uflea3XQX2NTYrhyWhbPfrSH8trAuE6iz6AXkSDgMWAOUABcKSIFPawXA9wIfOTuIpWyUpE9nb31x1hfWW91KT6trqmVJ9+uYO7EVCZnD7O6nFO66aKxRIYEcc+SEqtL8QpXjuinAeXGmApjTBvwInBZD+vdBdwPBO51xsovzRqfQmiQjcUbdfjmVH7/RhltHV3cMjvf6lL6NDw6jOsvHMPq0jreLquzuhyPcyXoM4Dut1Wvci47QUROB7KMMUtOtSERmS8ia0VkbV2d/7+5yj/Ehodwfl4SSzfvp6tLh296sqPuCC98XMnXz8xmZKI1rQ7665qzc8hOiOTuJcV0dPr3dMtBn4wVERvwIPCTvtY1xjxpjJlqjJmalJQ02F0r5TVF9jSqG1tYu1vvWNSTB5aXEh5s44aZuVaX4rKw4CBun5NPWc0RXlxT2fcLhjBXgn4vkNXtcaZz2XExwATgTRHZBUwHFukJWeVPZo5LISzYxhLtffM563YfZvnWar53/mgSLW510F+FE1KZNjKBh1aW0djSbnU5HuNK0K8BckVkpIiEAlcAi44/aYxpMMYkGmNyjDE5wIfApcaYtR6pWCkLRIcFc2F+Mku3VNOpwzcnGGO4b1kJSTFhfOfckVaX028iwi/mFXCouY3HVpVbXY7H9Bn0xpgO4HpgBVACLDTGbBWRO0XkUk8XqJSvmGdPo66plY92HrS6FJ+xsriGNbsO8+OLcokMDba6nAGZmBnHlyZn8rf3drHnYLPV5XiES2P0xpilxpixxpjRxph7nMt+aYxZ1MO6X9CjeeWPLsxPJiIkSG9I4tTR2cX9y7cxKimKr03N6vsFPuzWQscNy+9b7p/TLfXKWKVcFBkazMxxySzfUu33szRcsXBtFTvqjnKbD7Y66K+U2HCuO380SzdX8/HOQ1aX43ZD+19HKS8rsqdz8GgbH1QE9vBNc1sHD71extQRw7i4IMXqctxi/nmjSIsL567FxX43jVaDXql++EJeElGhQQF/8dRf3tlJXZNvtzror4jQIG4tzGPz3gb+vX5v3y8YQjToleqH8JAgZhWksHxrNe0BOnxz4Egrf3prB7PHpzBlRILV5bjVZZMymJQZx29WbKO5rcPqctxGg16pfiqyp9NwrJ13yw9YXYol/vDGdlo6uri10PdbHfSXzSb8oqiAmsZWnnirwupy3EaDXql+OndsIjHhwQE5fLPzwFGe+2gPV5yRxeikaKvL8YipOQnMm5jGE2/vYH/DMavLcQsNeqX6KSw4iIsLUnmtuJrWjk6ry/Gq364oJTTYxo0XDZ1WBwOxYE4+XV2O1g7+QINeqQEompRGU0sH75QFzvDN+j2HWbJ5P989dxTJMeFWl+NRWQmRfPuckbyyfi8b/aA9tQa9UgNwzphE4iJCWBwgvW+MMdy7bBuJ0WF897xRVpfjFT+8YDSJ0aHctbh4yN90RoNeqQEICbJROD6VlcU1tLT7//DNqm21fLzzEDdelEt02NBsddBfMeEh3Dwrj7W7D7N0c7XV5QyKBr1SA1Q0KY2jbZ28Werf91bo6OzivmXbGJUYxRVnDO1WB/31tTOyyE+N4b7lJUP6C12DXqkBOmvUcIZHhfr98M2/Pqlie+0Rbi3MI2SItzroryCb8PN5BVQeOsbf399ldTkDFlj/akq5UXCQjcIJqbxRUutXF9d0d6ytkwdXlnF6djyzx6daXY4lzslNZGZ+Mo+uKufAkVaryxkQDXqlBmGePY1j7Z2s2lZrdSke8df3dlLT2Mrtc8f5TauDgbhj3jha2h1fekORBr1Sg3DmyOEkxYT5ZevigxCCYxIAABRnSURBVEdaefzNHcwqSOGMHP9qddBfo5OiuWr6CF78eA/bqhutLqffNOiVGoQgmzB3QiqrttVypNW/hm/+sKqc5rYObivMs7oUn/Dji3KJCQ/hniUlQ266pQa9UoM0z55Oa0cXb5TUWF2K2+w+eJTnPtrN187IZkxyjNXl+IT4yFBumJnLO9sPsLp0aA3VadArNUhTRwwjNTacxX40fPPAilKCbTZu8vNWB/119fQRjEyM4u4lJUOqe6kGvVKDZLMJcyem8VZpHY0t7VaXM2gbK+tZvGk/3z13JMmx/t3qoL9Cg23cMXccFXVHee7D3VaX4zINeqXcoGhSGm2dXazcOrSHbxytDkoYHhXK/PNHW12OT7poXDIzRg/n4Te209A8NL7YNeiVcoPJWfFkxEcM+Yun3iyt48OKQ9wwM3BaHfSXiOMiqoZj7fz+je1Wl+MSDXql3EBEmGdP453tB4bMUd7JOrsM9y3bRs7wSK6clm11OT6tID2Wr03N4ukPdlFRd8TqcvrkUtCLSKGIlIpIuYgs6OH560Rks4hsEJF3RaTA/aUq5duK7Gl0dBlWbB2aDbD+9UkVpTVN3DI7n9BgPQbsy80XjyUs2Ma9y7ZZXUqf+vzXFJEg4DFgDlAAXNlDkD9vjJlojDkN+A3woNsrVcrHTcyIIzshkleH4PBNS3snD60sY1JWPHMnBmarg/5KjgnnBxeMYWVxDe/v8O37ErjytT0NKDfGVBhj2oAXgcu6r2CM6X6pWBQwtK4mUMoNjg/fvL/jIIeOtlldTr/87b1d7G9o4Y45+QHd6qC/rj1nJBnxEdy1uITOLt+NPVeCPgOo7Pa4yrnsM0TkhyKyA8cR/Q09bUhE5ovIWhFZW1fn361dVWAqsqfR2WVYvmXoDN8cPtrGH98sZ2Z+MmeOGm51OUNKeEgQC+bkU7K/kZfXVfb9Aou4bSDOGPOYMWY0cBvw817WedIYM9UYMzUpKcldu1bKZxSkxTIqMWpIzb55dHU5R1s7uG1OvtWlDElF9jROz47ngRVlPtsGw5Wg3wt0v9tApnNZb14EvjiYopQaqo4P33xYcZC6Jt9vaVt5qJmnP9jF/0zJYmyKtjoYCBHhF0UFHDjSyuNvlltdTo9cCfo1QK6IjBSRUOAKYFH3FUSk+3XS84ChMblUKQ8osqfTZWD5Ft9vifDb10oJsgk3zRprdSlD2uTsYVx2Wjp/fmcnVYebrS7nc/oMemNMB3A9sAIoARYaY7aKyJ0icqlztetFZKuIbABuBr7psYqV8nF5qTHkJkfzqo/3vtmyt4H/btjHteeMJDVOWx0M1q2F+Qhw//JSq0v5HJcufTPGLAWWnrTsl91+vtHNdSk1pM2zp/H7N7ZT09hCig/2izne6mBYZAjf01YHbpERH8H880bxh1XlXDMjhykjhlld0gl6VYRSHlBkT8cYWLrZN4/q395+gPfKD3LDzFxiw0OsLsdvXHf+aJJjwrhrcTFdPjTdUoNeKQ8YkxxNfmqMT7Yu7uwy3Lu0hOyESL5x5giry/ErUWHB/HR2Hhsq633qwjkNeqU85JJJ6azbfZh99cesLuUz/rN+L9uqm7hldp62OvCAr5yeyfj0WO5fto2W9k6rywE06JXymHkT0wB86n6yLe2d/O61UuyZcSfqU+5lszmmW+5raOGpdyqsLgfQoFfKY3ISo5iQEctiHxqn/8f7u9jX0MKCOfnYbNrqwFOmjxrO7PEp/PHNHdQ2tlhdjga9Up5UZE9nY2U9lYesn1td39zGY6vLuSAviRmjE60ux+/dPmcc7Z1d/PY166dbatAr5UHHh0d84aTsY6vLadJWB16TkxjFNTNy+Oe6KrbsbbC0Fg16pTwoKyGSSVnxLNls7QyMykPN/OP93Xzl9EzyU2MtrSWQXH9hLvERIdy9pBhjrJtuqUGvlIddYk9jy95Gdh04alkND64sQ8RxswzlPXERIdw0aywfVhzitWLr7iesQa+Uh809MXxjzVH91n0N/GfDXr59zkjS4iIsqSGQfX1aNmOSo7l3aQltHV2W1KBBr5SHpcdHMGXEMMvG6e9bto24iBCu01YHlggOsvGzeePYddDRKdQKGvRKeUGRPY1t1U2U1zZ5db/vbK/jne0HuP6CMcRFaKsDq1yQl8x5Y5P4/RvbLbn7mAa9Ul4wd2IaIt6dfdPVZbh36TYyh0Vw9Vna6sBqP583jua2Th5+vczr+9agV8oLUmLDmZaTwOJN+702++K/G/dSvL+RW2bnERYc5JV9qt6NTYnhymlZPPfRHrbXePcvOw16pbykyJ5Gee0RSr3wS97S3slvV5QxISOWS+zpHt+fcs1NF40lMjSIXy8t8ep+NeiV8pLCCWnYxDu9b579cDd7649x+5xx2urAhwyPDuNHF45hdWkdb5fVeW2/GvRKeUlSTBhnjR7u8eGbhuZ2/rCqnPPGJnH2GG114Gu+OSOHEcMjuXtJMR2d3pluqUGvlBfNm5jOzgNH2bqv0WP7+ONb5TS2tLOgUFsd+KKw4CBun5NPWc0RXlxT6ZV9atAr5UWFE1IJsglLPNTRcm/9Mf723i4un5xBQbq2OvBVs8enMm1kAg+tLKOxpd3j+9OgV8qLEqJCOXtMIos37fPI8M2Drzmm7v3k4jy3b1u5j4jwi3kFHGpu47FV5R7fnwa9Ul5WZE+j8tAxNlW5t6Nhyf5GXllfxbdm5JARr60OfN3EzDi+NDmTv723iz0HPdvGWoNeKS+bXZBKSJC4vffNfcu2ERsewg++MMat21Wec2thHkE24d5lnp1u6VLQi0ihiJSKSLmILOjh+ZtFpFhENonIGyKil+Ep1Yu4yBDOzU1iiRtn37xXfoC3yuocrQ4itdXBUJESG851549m2ZZqPqo46LH99Bn0IhIEPAbMAQqAK0Wk4KTV1gNTjTF24GXgN+4uVCl/UmRPY19DC5/sqR/0trq6DPcuKyEjXlsdDEXzzxtFWlw4dy8poavLM9NuXTminwaUG2MqjDFtwIvAZd1XMMasNsYcH2T6EMh0b5lK+ZeLClIIDbK5Zfjm1U372LK3kZ/OHkt4iLY6GGoiQoO4tTCPzXsbeGX9Xo/sw5WgzwC6T/asci7rzbXAsp6eEJH5IrJWRNbW1XnvqjClfE1seAjn5yWxdPP+QR3FtXZ08tvXSilIi+WySaf6tVS+7LJJGUzKjOOBFdtobutw+/bdejJWRK4CpgIP9PS8MeZJY8xUY8zUpKQkd+5aqSGnyJ5GTWMra3cfHvA2nv1wD5WHjrFgTr62OhjCbDbhF0UF1DS28sRbFe7fvgvr7AWyuj3OdC77DBG5CPgZcKkxptU95Snlvy4al0JY8MCHbxqOtfPoqu2cm5vIeWP1wGmom5qTwDx7Gk+8vYP9Dcfcum1Xgn4NkCsiI0UkFLgCWNR9BRGZDDyBI+Rr3VqhUn4qKiyYC/OTWbq5ms4BDN/86a0dHG5u5zZtdeA3FhTm02XggeWlbt1un0FvjOkArgdWACXAQmPMVhG5U0Quda72ABAN/FNENojIol42p5TqpsiezoEjrXy0s39T6/Y3HOOv7+7k8skZTMiI81B1ytuyEiL59tkjeWX9XjZWDn5G1nEujdEbY5YaY8YaY0YbY+5xLvulMWaR8+eLjDEpxpjTnP9deuotKqUALsxPJiIkqN93nnpoZRnGwM2zxnqoMmWVH14wmsToUO5aXOy26yz0ylilLBQRGsTMccks31Ltcsva0uomXl5Xxf87awRZCZEerlB5W0x4CDfPymPt7sMs3Vztlm1q0CtlsSJ7OoeOtvGBi1dG3r98G9FhwVx/obY68FdfOyOL/NQY7l1WQkt756C3p0GvlMW+kJdEdFgwizf2PXzzwY6DrNpWyw8uGEN8ZKgXqlNWCLIJP59XQNVhR9vpwdKgV8pi4SFBzCpIYfnWato6eh++Od7qID0unGtm5HivQGWJc3ITmZmfzGOry6lrGtyMdQ16pXzAvIlpNBxr573yA72us2TzfjZVNXDzxXna6iBA3DFvHC3tnTy4smxQ29GgV8oHnDs2kZjw4F5n37R1dPHAilLyU2O4fLK2OggUo5OiuWr6CF5as4dt1QO//aQGvVI+ICw4iNnjU3mtuJrWjs+ffHv+o93sOdTMgjn5BGmrg4Dy44tyiQkP4e7FJQOebqlBr5SPmGdPo6mlg7fLPjt809TSziOrypkxejjna6uDgBMfGcqNM3N5t/wAq0sH1nhAg14pH3HOmETiI0NYclLvmyfequDQ0TZunzMOET2aD0RXnzWCUYlR3L1kYHei0qBXykeEBNkoHJ/KyuKaE3OnqxtaeOrdCi6dlM7ETG11EKhCgmzcPnccFXVHB/R6DXqlfEiRPZ2jbZ286fwT/eHXy+jsMtwyO8/iypTVLhqXPOChOw16pXzI9FEJDI8K5dVN+9le08TCtZVcPT1HWx0oRIS/XXPGgF4b7OZalFKDEBxko3BCKq98spfGY+1EhWqrA/Wpgd5cRo/olfIxRfZ0jrV38s72A3z/gtEkRGmrAzU4ekSvlI+ZNjKBpJgwgkT49tkjrS5H+QENeqV8TJBNeOLqKYQF27TVgXILDXqlfNDp2cOsLkH5ER2jV0opP6dBr5RSfk6DXiml/JwGvVJK+TkNeqWU8nMa9Eop5ec06JVSys9p0CullJ+Tgd6aatA7FmkCSi3Zue+JAxqsLsJH6HvxKX0vPqXvxafyjDEx/XmBlVfGlhpjplq4f58hIk8aY+ZbXYcv0PfiU/pefErfi0+JyNr+vkaHbnzDq1YX4EP0vfiUvhef0vdiEKwculmrR/RKKdU/A8lOK4/on7Rw30opNVT1OzstC3pjTEAGvYgUikipiJSLyALnsuecy7aIyF9FJMTqOr2hl/fiLyKyUUQ2icjLIhJtdZ3e0NN70e25R0TkiFW1eVsvn4u/i8hOEdng/O80q+u0ykCy07Khm0AkIkFAGTALqALWAFcCOcAy52rPA28bYx63okZvOcV7UWWMaXSu8yBQa4y5z7JCvaC398IYUywiU4EbgcuNMX7/pXeKz8WtwGJjzMsWljdkeeWIvpdv6Oudj42IJHqjDh8wDSg3xlQYY9qAF4HLjDFLjRPwMZBpaZXe0dt7cTzkBYgAAuFIpMf3whl6D+AIuUDR43thcU2W6SU7RUTuEZEyESkRkRv62o7Hg975YX0MmAMUAFeKSAHwHnARsNvTNfiQDKCy2+Mq5zIAnEM2VwPLvVyXFXp9L0Tkb0A1kA/8wfuleV1v78X1wCJjzH5LqrLGqX5H7nEO6T0kImHeL827TpGd1wBZQL4xZhyOL8NT8sYRfW9HbuuNMbu8sP+h5I84hm3esboQKxljvgWkAyXA1ywuxyqRwP8QGF90rrgdxxf/GUACcJu15XhFb3/dfB+40xjTBWCMqe1rQ94I+lMexQaYvTi+iY/LdC5DRP4XSAJutqAuK/T6XgAYYzpxfLC/7OW6rNDTe7EDGAOUi8guIFJEyi2ozdt6/FwYY/Y7Rzdbgb/hCEF/11t2jga+JiJrRWSZiOT2tSG9YMq71gC5IjJSREKBK4BFIvIdYDaOE3BdllboPb29F2PgxBj9pcA2C2v0lp7ei/8YY1KNMTnGmByg2RgzxtIqvaO3z0UanPhcfBHYYmGNVgsDWpxz6f8M/LWvF3ijBcIpj9wCiTGmQ0SuB1YAQcBfjTFbRWQjjnMVHzg+x7xijLnTwlI9rqf3AsdQzTsiEgsIsBHHn6l+rbfPhcVlWeIUvyOrRCQJx+diA3CdlXV6SW/ZWQW84lz2bxx/4ZySx6dXikgwjulSM3EUuQb4+vEPsvPP0qnGmAMeLUQppYaQ3rITx4SNMmPMX0XkC8ADxpgzTrUtjw/dGGM6cMweWIHjiG2h8xv6BhGpwvEttUlEnvJ0LUopNVT0lp3AfcCXRWQzcC/wnb62pRdMKaWUn9OTsUop5ec06JVSys9p0CullJ/zSNA7+9f8rtvjn4rIrzyxL6WUUqfmqSP6VuBLAdSsTCmlfJangr4DR3P8m05+QkRynBc/bBKRN0QkW0TiRGS3iNic60SJSGWg9GVXSilP8uQY/WPAN0Qk7qTlfwD+YYyxA88BjxhjGnBc7Xa+c50iYIUxpt2D9SmlVEDwWNA7+4o/DZzcK/ksHDfXAHgGOMf580t82qnwCudjpZRSg+TpWTcPA9cCUS6suwgoFJEEYAqwypOFKaVUoPBo0BtjDgELcYT9ce/jOGIH+AbwjnPdIzh6Ofwexy3DOj1Zm1JKBQpvzKP/HdB99s2PgG+JyCYczXlu7PbcS8BV6LCNUkq5jfa6UUopP6dXxiqllJ/ToFdKKT/ntqAXkSwRWS0ixSKyVURudC5PEJGVIrLd+b/DnMvzReQDEWkVkZ+etK2bnNvYIiIviEi4u+pUSqlA484j+g7gJ8aYAmA68EMRKQAWAG8YY3KBN5yPAQ7hmGP/2+4bEZEM5/KpxpgJOG4ndgVKKaUGxG1B77xL+yfOn5tw3BElA7gM+IdztX/guLEvxphaY8waoKerX4OBCOettCKBfe6qUymlAo2nulfmAJOBj4AUY8x+51PVQMqpXmuM2YvjKH8PsB9oMMa85ok6lVIqELg96EUkGvgX8GNnG4QTjGMu5ynnczrH8C8DRgLpQJSIXOXuOpVSKlC4Neid3Sb/BTxnjHnFubhGRNKcz6cBtX1s5iJgpzGmztnU7BVghjvrVEqpQOLOWTcC/AUoMcY82O2pRcA3nT9/E/hvH5vaA0wXkUjnNmfiGO9XSik1AG67MlZEzsHRt2Yz0OVcfAeOcfqFQDawG/iqMeaQiKQCa4FY5/pHgAJjTKOI/B+OTpYdwHrgO8aYVrcUqpRSAUZbICillJ/TK2OVUsrPadArpZSf06BXSik/p0GvlFJ+ToNeKaX8nAa9Ukr5OQ16pZTycxr0Sinl5/4/U2y++mQGb2sAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"pKwCHnB0Ydfd","colab":{"base_uri":"https://localhost:8080/","height":308},"executionInfo":{"status":"ok","timestamp":1666206230318,"user_tz":-180,"elapsed":432,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8a98fbc7-ec25-4200-f36b-45194c3d0538"},"source":["# Можно на одном графике нарисовать поведение цены сразу нескольких монет\n","price[['ADA', 'DOGE']].plot()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c4ec290>"]},"metadata":{},"execution_count":114},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"EBFKS0S_Ydfd","colab":{"base_uri":"https://localhost:8080/","height":377},"executionInfo":{"status":"ok","timestamp":1666206266524,"user_tz":-180,"elapsed":603,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fd72dbbc-d670-46a8-c2e4-3842b61c824a"},"source":["# Цену можно рисовать и в виде столбцовой диаграммы c различными настройками\n","price.plot.bar(stacked=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c479810>"]},"metadata":{},"execution_count":115},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"-zXCcPC9Ydfe","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1666206278476,"user_tz":-180,"elapsed":733,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a1f902a2-0ece-4357-8834-c59bc263888f"},"source":["# Горизонтальная столбцовая диаграмма\n","price.plot.barh()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c151f90>"]},"metadata":{},"execution_count":116},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"J7FEsEb2Ydfe","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1666206282435,"user_tz":-180,"elapsed":447,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b7c07446-31da-4657-b167-f754b9a781ba"},"source":["# Гистограмма\n","price.plot.hist(bins=3)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c0bf4d0>"]},"metadata":{},"execution_count":117},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAX4AAAD4CAYAAADrRI2NAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAS/klEQVR4nO3de5TcZX3H8feXJJ6NmJo2Gywmxk1UCJdoiIvao+Ktci1Y5VTDJRL0JFVRixEFrKdCe/BCESyVnhovBxRdQKgJFdFKFZQeURISDSFYNS6yiiaEagISicu3f8wQAiTZ3272NzPL836ds4f5zfwu33nYfPaZZ555JjITSVI59mp3AZKk1jL4JakwBr8kFcbgl6TCGPySVJjx7S5gR93d3dnT09PuMiRpzFi5cuW9mTl1OMd0VPD39PSwYsWKdpchSWNGRNw13GMc6pGkwhj8klQYg1+SCtNRY/w7s23bNgYGBti6dWu7S2mLrq4upk+fzoQJE9pdiqQniY4P/oGBASZNmkRPTw8R0e5yWioz2bRpEwMDA8ycObPd5Uh6kuj4oZ6tW7cyZcqU4kIfICKYMmVKsa92JNWj1h5/RPQDW4BB4I+Z2TvC84xmWWNKyc9dUj1aMdTzqsy8twXXkSRV0PFj/I/Xc9Z1o3q+/o8eU2m/ZcuW8frXv55169Yxe/Zs+vv7OeCAA5g9ezZbt25l0qRJvOMd72DhwoWPOW7u3LnMnj2bK664YlTrlqSRqjv4E/iviEjgU5m59PE7RMRiYDHAjBkzai5n5Pr6+njZy15GX18f5557LgDPec5zWLVqFQDr16/nDW94A5nJqaeeCsC6desYHBzku9/9Lg888AB777132+qXtjvn6e2uQI93zu9aerm639x9WWbOA44CTouIwx6/Q2YuzczezOydOnVYy020zP3338/NN9/MZz/72V323GfNmsWFF17IxRdfvP2+vr4+FixYwOGHH87y5ctbVa4k7VatwZ+Zv2z+dwPwFeBFdV6vLsuXL+fII49kv/32Y8qUKaxcuXKn+82bN48777xz+/aVV17J/PnzOeGEE+jr62tVuZK0W7UFf0TsHRGTHrkNHA7cXtf16tTX18f8+fMBmD9//i5DfMfvL16xYgXd3d3MmDGD17zmNaxatYr77ruvJfVK0u7UOcb/DOArzemI44EvZebXa7xeLe677z6+9a1vsWbNGiKCwcFBIoLTTjvtCfuuWrWKAw44AGj8sbjzzjt5ZJnpzZs3c80117Bo0aJWli9JT1Bbjz8z12fmC5o/B2XmeXVdq05XX301CxYs4K677qK/v5+7776bmTNncvfddz9mv/7+fs444wze9a538fDDD3PVVVexZs0a+vv76e/vZ/ny5Q73SOoIY246Z9Xpl6Olr6+PM8888zH3HX/88XzkIx/hZz/7GYcccsj26Zzvfve7WbhwITfddBPTpk3jmc985vZjDjvsMO644w7uuece9t1335Y+B0naUew4Lt1uvb29+fgvYlm3bt324ZNS2QYaVU7n7Dx7MJ0zIlYOd1WEjl+rR5I0ugx+SSqMwS9JhTH4JakwBr8kFcbgl6TCjLl5/KM+Fa3CNKpx48YxZ84ctm3bxvjx43nzm9/Me97zHvbaq/F38+abb2bJkiVs3rwZgCVLlrB48eLtx19++eWcf/75DA4OMn78eA499FAuuOACJk+ezCtf+UruueceJk6cCMBzn/tcrr766tF9jpK0g7EX/G0wceJEVq9eDcCGDRs48cQT2bx5M+eeey6//vWvOfHEE1m2bBnz5s3j3nvv5YgjjmDatGkcc8wxfP3rX+eiiy7i+uuvZ9q0aQwODnLZZZfxm9/8hsmTJwPwxS9+kd7eEX05mSQNm0M9w7TPPvuwdOlSPvnJT5KZXHLJJSxcuJB58+YB0N3dzfnnn89HP/pRAM477zwuuOACpk2bBjRePbzlLW9h//33b9tzkFQ2g38EZs2axeDgIBs2bGDt2rW88IUvfMzjvb29rF27FoC1a9du/6OwKyeddBJz585l7ty5vO9976utbkkCh3paas2aNSxYsIAtW7bw4Q9/mDe96U2AQz2SWsse/wisX7+ecePGsc8++3DggQc+4YtZVq5cyUEHHQTAQQcdxG233QbAnDlzWL16NUcddRQPPvhgy+uWJDD4h23jxo287W1v453vfOf2dfkvvfTS7W/+btq0iTPPPJP3v//9AJx99tmcccYZDAwMbD+HoS+pncbeUE+Lv5QYGkE9d+7c7dM5FyxYwJIlSwDYd999ufzyy1m0aBFbtmwhMzn99NM59thjATj66KPZuHEjRx11FIODg0yePJmDDz6YI444Yvv5TzrppO3TObu7u7nhhhta/hwllWPsBX8bDA4O7vbxww47jFtvvXWXj59yyimccsopO33sxhtv3JPSJGnYHOqRpMIY/JJUmDER/J30LWGtVvJzl1SPjg/+rq4uNm3aVGQAZiabNm2iq6ur3aVIehLp+Dd3p0+fzsDAABs3bmx3KW3R1dXF9OnT212GpCeRjg/+CRMmMHPmzHaXIUlPGh0/1CNJGl0GvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwtQd/RIyLiFUR8dW6ryVJGlorevx/B6xrwXUkSRXUGvwRMR04BvhMndeRJFVXd4//E8D7gYd3tUNELI6IFRGxotQVOCWplWoL/oj4K2BDZq7c3X6ZuTQzezOzd+rUqXWVI0lqqrPH/1LguIjoB64AXh0Rl9d4PUlSBbUFf2aenZnTM7MHmA98KzNPrut6kqRqnMcvSYVpyTdwZeaNwI2tuJYkaffs8UtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TCGPySVBiDX5IKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwlYI/IubUXYgkqTWq9vj/LSJ+EBHviIin11qRJKlWlYI/M18OnAQ8C1gZEV+KiNfWWpkkqRaVx/gz8yfAB4EzgVcAF0fEnRHxhrqKkySNvqpj/M+PiIuAdcCrgWMz84Dm7Yt2cUxXc3johxGxNiLOHbWqJUkjNr7ifv8KfAb4QGY++MidmfmriPjgLo75A/DqzLw/IiYAN0fE9Zl5y56VLEnaE1WD/xjgwcwcBIiIvYCuzPx9Zn5hZwdkZgL3NzcnNH9yD+uVJO2hqmP8NwATd9h+avO+3YqIcRGxGtgAfDMzvz/8EiVJo6lqj78rMx/pvdMcvnnqUAc1XyHMjYjJwFci4uDMvH3HfSJiMbAYYMaMGdUrV8frOeu6dpegnejvancFareqPf4HImLeIxsR8ULgwd3s/xiZ+Vvg28CRO3lsaWb2Zmbv1KlTq55SkjRCVXv8pwNfjohfAQH8OfCm3R0QEVOBbZn524iYCLwW+NieFCtJ2nOVgj8zb42I2cD+zbt+nJnbhjhsX+CyiBhH45XFVZn51ZGXKkkaDVV7/ACHAj3NY+ZFBJn5+V3tnJk/Ag7Zs/IkSaOtUvBHxBeA5wCrgcHm3QnsMvglSZ2pao+/FziwOTdfkjSGVZ3VczuNN3QlSWNc1R5/N3BHRPyAxlIMAGTmcbVUJUmqTdXgP6fOIiRJrVN1OudNEfFs4HmZeUPzU7vj6i1NklSHqssyLwKuBj7VvGsasKyuoiRJ9an65u5pwEuBzbD9S1n2qasoSVJ9qgb/HzLzoUc2ImI8LrEsSWNS1eC/KSI+AExsftful4H/rK8sSVJdqgb/WcBGYA3wt8DXaHz/riRpjKk6q+dh4NPNH0nSGFZ1rZ6fs5Mx/cycNeoVSZJqNZy1eh7RBfwN8GejX44kqW6Vxvgzc9MOP7/MzE/Q+AJ2SdIYU3WoZ94Om3vReAUwnLX8JUkdomp4f3yH238E+oE3jno1kqTaVZ3V86q6C5EktUbVoZ4lu3s8My8cnXIkSXUbzqyeQ4Frm9vHAj8AflJHUZKk+lQN/unAvMzcAhAR5wDXZebJdRUmSapH1SUbngE8tMP2Q837JEljTNUe/+eBH0TEV5rbfw1cVk9JkqQ6VZ3Vc15EXA+8vHnXqZm5qr6yJEl1qTrUA/BUYHNm/gswEBEza6pJklSjql+9+CHgTODs5l0TgMvrKkqSVJ+qPf7XA8cBDwBk5q+ASXUVJUmqT9Xgfygzk+bSzBGxd30lSZLqVDX4r4qITwGTI2IRcAN+KYskjUlDzuqJiACuBGYDm4H9gX/IzG/WXJskqQZDBn9mZkR8LTPnAIa9JI1xVYd6bouIQ2utRJLUElU/ufti4OSI6KcxsydovBh4fl2FSZLqsdvgj4gZmfkL4IjhnjginkVjqYdn0JgNtLT54S9JUhsN1eNfRmNVzrsi4prMPH4Y5/4j8N7MvC0iJgErI+KbmXnHiKuVJO2xocb4Y4fbs4Zz4sy8JzNva97eAqwDpg2vPEnSaBuqx5+7uD0sEdEDHAJ8fyePLQYWA8yYMWOkl6DnrOtGfKwklWSoHv8LImJzRGwBnt+8vTkitkTE5ioXiIinAdcAp2fmE47JzKWZ2ZuZvVOnTh3+M5AkDctue/yZOW5PTh4RE2iE/hcz8z/25FySpNExnGWZh6X5id/PAuv8MnZJ6hy1BT/wUmAB8OqIWN38ObrG60mSKqj6Aa5hy8ybeeysIElSB6izxy9J6kAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TCGPySVBiDX5IKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9Jhakt+CPicxGxISJur+sakqThq7PHfylwZI3nlySNQG3Bn5nfAe6r6/ySpJFp+xh/RCyOiBURsWLjxo3tLkeSnvTaHvyZuTQzezOzd+rUqe0uR5Ke9Noe/JKk1jL4JakwdU7n7AO+B+wfEQMR8da6riVJqm58XSfOzBPqOrckaeQc6pGkwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUGINfkgpj8EtSYQx+SSqMwS9JhTH4JakwBr8kFcbgl6TCGPySVBiDX5IKY/BLUmEMfkkqjMEvSYUx+CWpMAa/JBXG4Jekwhj8klQYg1+SCmPwS1JhDH5JKozBL0mFMfglqTAGvyQVxuCXpMLUGvwRcWRE/DgifhoRZ9V5LUlSNbUFf0SMAy4BjgIOBE6IiAPrup4kqZo6e/wvAn6amesz8yHgCuB1NV5PklTB+BrPPQ24e4ftAeDFj98pIhYDi5ub90fEj2usaU90A/e2u4gOZxtV09Z2inZdeHjK+l06d0T/Vx5po2cP98A6g7+SzFwKLG13HUOJiBWZ2dvuOjqZbVSN7TQ022hoe9JGdQ71/BJ41g7b05v3SZLaqM7gvxV4XkTMjIinAPOBa2u8niSpgtqGejLzjxHxTuAbwDjgc5m5tq7rtUDHD0d1ANuoGttpaLbR0EbcRpGZo1mIJKnD+cldSSqMwS9JhTH4dzDUEhMRsSQi7oiIH0XEf0fEsOfPPhlUXYojIo6PiIyI4qblVWmjiHhj8/dpbUR8qdU1doIK/+ZmRMS3I2JV89/d0e2os50i4nMRsSEibt/F4xERFzfb8EcRMW/Ik2amP433OcYBPwNmAU8Bfggc+Lh9XgU8tXn77cCV7a67E9upud8k4DvALUBvu+vutDYCngesAv60ub1Pu+vu0HZaCry9eftAoL/ddbehnQ4D5gG37+Lxo4HraXw27yXA94c6pz3+Rw25xERmfjszf9/cvIXGZxNKU3Upjn8CPgZsbWVxHaJKGy0CLsnM/wPIzA0trrETVGmnBP6kefvpwK9aWF9HyMzvAPftZpfXAZ/PhluAyRGx7+7OafA/amdLTEzbzf5vpfFXtjRDtlPzpeazMvO6VhbWQar8Lu0H7BcR/xMRt0TEkS2rrnNUaadzgJMjYgD4GvCu1pQ2pgw3u9q/ZMNYFBEnA73AK9pdS6eJiL2AC4GFbS6l042nMdzzShqvHL8TEXMy87dtrarznABcmpkfj4i/AL4QEQdn5sPtLmwss8f/qEpLTETEXwJ/DxyXmX9oUW2dZKh2mgQcDNwYEf00xhyvLewN3iq/SwPAtZm5LTN/DvwvjT8EJanSTm8FrgLIzO8BXTQWJ9Ojhr08jsH/qCGXmIiIQ4BP0Qj9EsdkYYh2yszfZWZ3ZvZkZg+N90KOy8wV7Sm3LaosV7KMRm+fiOimMfSzvpVFdoAq7fQL4DUAEXEAjeDf2NIqO9+1wJubs3teAvwuM+/Z3QEO9TTlLpaYiIh/BFZk5rXAPwNPA74cEQC/yMzj2lZ0G1Rsp6JVbKNvAIdHxB3AIPC+zNzUvqpbr2I7vRf4dES8h8YbvQuzOZWlFBHRR6OT0N18r+NDwASAzPx3Gu99HA38FPg9cOqQ5yysDSWpeA71SFJhDH5JKozBL0mFMfglqTAGvyQVxuCXpMIY/JJUmP8HieZcnobsG48AAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"h1eB26m_Ydfe","colab":{"base_uri":"https://localhost:8080/","height":340},"executionInfo":{"status":"ok","timestamp":1666206301558,"user_tz":-180,"elapsed":273,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"009e4ca5-91f5-4ec7-e0f2-70a351ebab7e"},"source":["# Ящики с усами\n","price.plot.box()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/matplotlib/cbook/__init__.py:1376: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  X = np.atleast_1d(X.T if isinstance(X, np.ndarray) else np.asarray(X))\n"]},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67c066210>"]},"metadata":{},"execution_count":118},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXQAAAD7CAYAAAB68m/qAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAANWklEQVR4nO3df6hf913H8eerSUqD61o0tzqa2Fslo43Wrd2lDLaxonWkLSSDSZe4opWy/LOq2Fq5Y9K6+ofZOsaYRmc2ZmfZGuoUiSQ1hdExFKu9/emSmJFm2ZqskNuyheKi/cHbP+7p+Hpz7/1+b/q9P/LJ8wGXfM85n3POJ3DzzDfnfM9NqgpJ0tnvvKWegCRpOAy6JDXCoEtSIwy6JDXCoEtSIwy6JDWib9CTfDnJiSTfnmV7knw+yeEkzya5ZvjTlCT1M8g79PuBjXNsvwFY331tA/7qzU9LkjRfK/sNqKpvJRmdY8hm4G9r6gmlx5JcnORtVfXCXMdds2ZNjY7OdVhJ0nRPPPHEi1U1MtO2vkEfwKXA8z3Lx7p1cwZ9dHSUiYmJIZxeks4dSb4327ZFvSmaZFuSiSQTk5OTi3lqSWreMIJ+HFjXs7y2W3eaqtpZVWNVNTYyMuO/GCRJZ2gYQd8N/Fb3aZd3Ayf7XT+XJA1f32voSR4ErgPWJDkG3AOsAqiqLwB7gRuBw8CPgd9ZqMlKkmY3yKdctvbZXsDHhjYjSdIZ8UlRSWqEQZekRhh0SWrEMB4skiRGx/fMe5+j229agJmcuwy6pKGYLc6j43sM9yLxkoskNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNWLlUk9A0tnlHZ98hJOnXp3XPqPje+Y1/qLVq3jmng/Max8ZdEnzdPLUqxzdftOCnmO+fwFoipdcJKkRBl2SGmHQJakRBl2SGmHQJakRAwU9ycYkh5IcTjI+w/afT/JokqeSPJvkxuFPVZI0l75BT7IC2AHcAGwAtibZMG3YHwMPVdXVwBbgL4c9UUnS3AZ5h34tcLiqjlTVK8AuYPO0MQW8tXt9EfCD4U1RkjSIQYJ+KfB8z/Kxbl2vPwFuSXIM2Av87kwHSrItyUSSicnJyTOYriRpNsO6KboVuL+q1gI3Ag8kOe3YVbWzqsaqamxkZGRIp5YkwWCP/h8H1vUsr+3W9boN2AhQVf+W5AJgDXBiGJOUtHxceOU4V33ltM9GDPkcAAv74wVaNEjQHwfWJ7mcqZBvAX5z2pjvA78G3J/kSuACwGsqUoNePrjdn+WyTPW95FJVrwG3A/uAg0x9mmV/knuTbOqG3Ql8NMkzwIPArVVVCzVpSdLpBvppi1W1l6mbnb3r7u55fQB4z3CnJkmaD58UlaRGGHRJaoT/wcVZ5ExvFC30DSxJy4NBP4vMFebR8T2GWzrHeclFkhph0CWpEQZdkhrhNXRJ87bQT3JetHrVgh6/VQZd0rzM9+a7N+wXj5dcJKkRBl2SGmHQJakRBl2SGmHQJakRfspF0lDM9VHG2bb56ZfhMuiShsI4Lz0vuUhSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwYKepKNSQ4lOZxkfJYxNyc5kGR/kq8Nd5qSpH5W9huQZAWwA/h14BjweJLdVXWgZ8x64OPAe6rqh0kuWagJS5JmNsg79GuBw1V1pKpeAXYBm6eN+Siwo6p+CFBVJ4Y7TUlSP4ME/VLg+Z7lY926Xm8H3p7kX5M8lmTjTAdKsi3JRJKJycnJM5uxJGlGw7opuhJYD1wHbAW+mOTi6YOqamdVjVXV2MjIyJBOLUmCwYJ+HFjXs7y2W9frGLC7ql6tqu8C32Eq8JKkRTJI0B8H1ie5PMn5wBZg97Qx/8jUu3OSrGHqEsyRIc5TktRH36BX1WvA7cA+4CDwUFXtT3Jvkk3dsH3AS0kOAI8Cd1XVSws1aUnS6fp+bBGgqvYCe6etu7vndQF3dF+SpCXgk6KS1AiDLkmNMOiS1AiDLkmNMOiS1AiDLkmNMOiS1AiDLkmNGOjBIi2ud3zyEU6eenXe+42O7xl47EWrV/HMPR+Y9zkkLV8GfRk6eepVjm6/aUHPMZ/4Szo7eMlFkhph0CWpEQZdkhph0CWpEd4UXYYuvHKcq74yvsDnAFjYG6+SFpdBX4ZePrjdT7lImjcvuUhSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDVioKAn2ZjkUJLDScbnGPehJJVkbHhTlCQNom/Qk6wAdgA3ABuArUk2zDDuQuD3gX8f9iQlSf0N8g79WuBwVR2pqleAXcDmGcb9KfAp4H+GOD9J0oAGCfqlwPM9y8e6dT+R5BpgXVXtGeLcJEnz8KZviiY5D/gscOcAY7clmUgyMTk5+WZPLUnqMUjQjwPrepbXduvecCHwy8A3kxwF3g3snunGaFXtrKqxqhobGRk581lLkk4zSNAfB9YnuTzJ+cAWYPcbG6vqZFWtqarRqhoFHgM2VdXEgsxYkjSjvkGvqteA24F9wEHgoaran+TeJJsWeoKSpMGsHGRQVe0F9k5bd/csY69789OSJM2XT4pKUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiNWLvUENLPR8T0LevyLVq9a0ONLWnwGfRk6uv2mee8zOr7njPaT1A4vuUhSIwy6JDXCoEtSIwy6JDVioKAn2ZjkUJLDScZn2H5HkgNJnk3yjSSXDX+qkqS59A16khXADuAGYAOwNcmGacOeAsaq6leArwOfHvZEJUlzG+Qd+rXA4ao6UlWvALuAzb0DqurRqvpxt/gYsHa405Qk9TNI0C8Fnu9ZPtatm81twMMzbUiyLclEkonJycnBZylJ6muoN0WT3AKMAffNtL2qdlbVWFWNjYyMDPPUknTOG+RJ0ePAup7ltd26/yfJ9cAngPdX1f8OZ3qSpEEN8g79cWB9ksuTnA9sAXb3DkhyNfDXwKaqOjH8aUqS+ukb9Kp6Dbgd2AccBB6qqv1J7k2yqRt2H/AW4O+SPJ1k9yyHkyQtkIF+OFdV7QX2Tlt3d8/r64c8L0nSPPmkqCQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMMuiQ1wqBLUiMGevRfy8Po+J4z2n50+00LMR1Jy4xBP4sYZklz8ZKLJDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSIwy6JDXCoEtSI1JVS3PiZBL43pKcvE1rgBeXehLSDPzeHK7Lqmpkpg1LFnQNV5KJqhpb6nlI0/m9uXi85CJJjTDoktQIg96OnUs9AWkWfm8uEq+hS1IjfIcuSY0w6GeBJB9MUkmu6JZHk5xK8lSSg0n+I8mtM+z3dJJdiz5hNSnJ69331P4kzyS5M8l5Pdvf230v/lf3tW3a/rckebZn/y8lubjb9s0kh7rjP53k64v9+2uB/8HF2WEr8C/dr/d0656rqqsBkvwC8A9JUlV/0627ElgBvC/JT1XVfy/BvNWWU1X1ToAklwBfA94K3JPk57rlD1bVk0nWAPuSHK+qPUk2An8A3FBVx5OsAH4b+FngR93xP1JVE4v9m2qJ79CXuSRvAd4L3AZsmWlMVR0B7gB+r2f1VuAB4BFg8wJPU+eYqjoBbANuTxLgY8D9VfVkt/1F4I+A8W6XTwB/WFXHu+2vV9WXq+rQ4s++XQZ9+dsM/HNVfQd4Kcm7Zhn3JHBFz/KHgV3Ag0zFXRqq7o3ECuAS4JeAJ6YNmejW0/36ZJ9DfrXnkst9Q53sOcKgL39bmQoz3a+zxTk/eZGMAS9W1feBbwBXJ/npBZ2lNKAkV3XRfi7Jh3s2faSq3tl93bVkEzyLGfRlrIvwrwJfSnIUuAu4mZ5497gaONi93gpc0e3zHFPXOT+00PPVuaW7d/M6cAI4AEz/1+O7gP3d6/3ANQBV9Z/dtfiHgdWLM9tzg0Ff3n4DeKCqLquq0apaB3wXWNc7KMko8Bngz7tPHdwMXNXtM8rUZRsvu2hokowAXwD+oqYeZtkB3JrkjZumPwN8Cvh0t8ufAZ9JsrbnMMZ8yPyUy/K2lak/FL3+Hvg48ItJngIuAF4GPl9V9yd5P3C8qn7Qs8+3gA1J3lZVLyzGxNWk1UmeBlYBrzF10/2zAFX1QpJbgC8muZCpf0V+rqr+qdu+t/tL4OHuEy4/Ar4N7Os5/leTnOpev1hV1y/K76ohPikqSY3wkoskNcKgS1IjDLokNcKgS1IjDLokNcKgS1IjDLokNcKgS1Ij/g++TRyLnMDDAQAAAABJRU5ErkJggg==\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"MP-bqvcVYdfe","colab":{"base_uri":"https://localhost:8080/","height":306},"executionInfo":{"status":"ok","timestamp":1666206305846,"user_tz":-180,"elapsed":491,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"76178ed5-05fb-428e-be78-b907b1403bdf"},"source":["# Графики с заливкой\n","price.plot.area()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67bf906d0>"]},"metadata":{},"execution_count":119},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"1A1z9wdrYdff","colab":{"base_uri":"https://localhost:8080/","height":296},"executionInfo":{"status":"ok","timestamp":1666206309425,"user_tz":-180,"elapsed":661,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6a0bbddb-78e7-47f5-a56a-58b101419e62"},"source":["# Если хочется нарисовать пары каких либо значений в виде точек на плоскости, то подойдет scatter plot\n","price.plot.scatter(x='ADA', y='DOGE')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe67bf20710>"]},"metadata":{},"execution_count":120},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAY8AAAEGCAYAAACdJRn3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAVmElEQVR4nO3df5Bdd33e8fez1iIpyBAhqTTV2pYDZrAJipxsnHScBvIDYpipDFGbShko7tC4yWAydZzaZso41ClDImiSaetJx3RcCJ3iumimKFODoWAnpcUTr2tbjc3YkQXBK5JGFvJgTSV55f30j3sEV2t5734l3b271vs1c0fnfM85d5+9s97H53zvnpuqQpKkFmOjDiBJWn4sD0lSM8tDktTM8pAkNbM8JEnNVow6wNmyfv362rRp06hjSNKy8uCDDz5dVRtaj3vJlMemTZuYmpoadQxJWlaS/MXpHOdlK0lSM8tDktTM8pAkNbM8JEnNLA9JUjPLQ1rGDh4+xiNPPcPBw8dGHUXnmJfMW3Wlc81nH97PTbv2MD42xszsLDu3bWbrlo2jjqVzhGce0jJ08PAxbtq1h6Mzszx77DhHZ2a5cdcez0C0aCwPaRmaPnSE8bGT//MdHxtj+tCRESXSucbykJahibWrmZmdPWlsZnaWibWrR5RI5xrLQ1qG1q1Zyc5tm1k1Psb5K1ewanyMnds2s27NylFH0znCCXNpmdq6ZSNXvnY904eOMLF2tcWhRWV5SMvYujUrLQ2NhJetJEnNLA9JUjPLQ5LUbKjlkeSqJI8n2Zvk5lNsvyjJl5LsSXJfkom+bc8nebh77B5mTklSm6FNmCc5D7gNeAswDTyQZHdVPda328eAP6yqTyb5GeAjwLu7bUeqasuw8kmSTt8wzzyuAPZW1b6qeg64E7h6zj6XAV/ulu89xXZJ0hI0zPLYCDzVtz7djfV7BPiFbvmdwPlJ1nXrq5JMJbk/yTtO9QWSXNvtM3XgwIGzmV2SNI9RT5j/BvCmJA8BbwL2A8932y6qqkngl4DfT/KauQdX1e1VNVlVkxs2bFi00JJ0rhvmHwnuBy7oW5/oxr6rqr5Fd+aRZA2wraqe6bbt7/7dl+Q+4HLgySHmlSQt0DDPPB4ALklycZKXAduBk941lWR9khMZPgDc0Y2vTbLyxD7AlUD/RLskaYSGVh5VdRy4DrgH+BpwV1U9muTWJFu73d4MPJ7kCeDVwIe78UuBqSSP0JtI/+0579KSJI1QqmrUGc6KycnJmpqaGnUMSVpWkjzYzS83GfWEuSRpGbI8JEnNLA9JUjPLQ5LUzPKQJDWzPCRJzSwPSVIzy0OS1MzykCQ1szwkSc0sD0lSM8tDktTM8pAkNbM8JEnNLA9JUjPLQ5LUzPKQJDWzPCRJzSwPSVIzy0OS1MzykCQ1szwkSc0sD0lSM8tDktTM8pAkNbM8JEnNLA9JUjPLQ5LUzPKQJDWzPCRJzSwPSVIzy0OS1Gyo5ZHkqiSPJ9mb5OZTbL8oyZeS7ElyX5KJvm3vSfLn3eM9w8wpSWoztPJIch5wG/A24DJgR5LL5uz2MeAPq2ozcCvwke7YVwG/Cfw4cAXwm0nWDiurJKnNMM88rgD2VtW+qnoOuBO4es4+lwFf7pbv7dv+88AXq+rbVXUI+CJw1RCzSpIaDLM8NgJP9a1Pd2P9HgF+oVt+J3B+knULPJYk1yaZSjJ14MCBsxZckjS/UU+Y/wbwpiQPAW8C9gPPL/Tgqrq9qiaranLDhg3DyihJmmPFEJ97P3BB3/pEN/ZdVfUtujOPJGuAbVX1TJL9wJvnHHvfELNKkhoM88zjAeCSJBcneRmwHdjdv0OS9UlOZPgAcEe3fA/w1iRru4nyt3ZjkqQlYGjlUVXHgevo/dL/GnBXVT2a5NYkW7vd3gw8nuQJ4NXAh7tjvw38Fr0CegC4tRuTJC0BqapRZzgrJicna2pqatQxJGlZSfJgVU22HjfqCXNJ0jJkeUiSmlkekqRmlockqZnlIUlqZnlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockqZnlIUlqZnlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockqZnlIUlqZnlIkprNWx5J7upb/p05274wrFCSpKVt0JnHJX3Lb5mzbcOgJ09yVZLHk+xNcvMptl+Y5N4kDyXZk+Tt3fimJEeSPNw9/t3A70SStGhWDNhep7mNJOcBt9ErnWnggSS7q+qxvt0+CNxVVX+Q5DLgbmBTt+3JqtoyIJ8kaQQGlcf3Jbmc3hnK6m453WP1gGOvAPZW1T6AJHcCVwP95VHAK7rlVwLfaosvSRqFQeXxl8Dvdst/1bd8Yn0+G4Gn+tangR+fs8+HgC8keT/wcuDn+rZdnOQh4DvAB6vqf8z9AkmuBa4FuPDCCwfEkSSdLfOWR1X99JC//g7gE1X1r5L8beBTSX6IXmldWFUHk/wo8F+TvKGqvjMn3+3A7QCTk5PzXkabz8HDx5g+dISJtatZt2bl6X83knSOmLc8krwCeHVV/Xm3/vf53uWqe6rq/85z+H7ggr71iW6s33uBqwCq6qtJVgHrq+qvgWPd+INJngReB0wt6Ltq8NmH93PTrj2Mj40xMzvLzm2b2bpl49n+MpL0kjLo3VYfA67sW/8I8GPATwH/YsCxDwCXJLk4ycuA7cDuOft8E/hZgCSXAquAA0k2dBPuJPlBeu/62jf422lz8PAxbtq1h6Mzszx77DhHZ2a5cdceDh4+dra/lCS9pAya8/gx4J/0rT9bVe8HSPKV+Q6squNJrgPuAc4D7qiqR5PcCkxV1W7gBuDjSa6nN3l+TVVVkp8Cbk0yA8wCv1JV3z6db3A+04eOMD42xlFmvzs2PjbG9KEjXr6SpHkMKo8VVdU/l/DuvuXvH/TkVXU3vbff9o/d0rf8GCef2ZwY3wXsGvT8Z2pi7WpmZmdPGpuZnWVi7aA3kknSuW3QZavZJH/zxEpV/RlAko3A7IsetUysW7OSnds2s2p8jPNXrmDV+Bg7t232rEOSBhh05vFR4I+S3AA81I39CL25kI8OM9hi2bplI1e+dr3vtpKkBoPeqvsfkzwN/EvgDd3wnwG3VNXnhh1usaxbs9LSkKQGg848qKrPA59fhCySpGVi4C3Zk7wtyR8nebp7/PGJGxhKks5Ng/5I8JfpvVX3Rr73B3qTwG8nmej+wluSdI4ZdNnqeuAn5/yNxZeTvA34Ct2tQSRJ55ZBl61yqj/Oq6qDQ8ojSVoGBpXHd5L88NzBbuzZ4USSJC11gy5b3QDsTvIfgAe7sUngPcC7hhlMkrR0zXvmUVVfofcZHGPANd1jDPiJbpsk6Ry0kL/z+CvgliQbuvUDQ08lSVrS5j3zSM+HkhwAHgceT3IgyS3zHSdJemkbNGF+Pb273l5RVa+qqlfRu4x1ZXcbdUnSOWhQebwb2FFVXz8xUFX76E2W/8NhBpMkLV2DymO8qp6eO9jNe4wPJ5IkaakbVB7PneY2SdJL2KB3W/1wku+cYjz0Pm9cknQOGvR5HuctVhBJ0vIx8JbskiTNZXlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockqdlQyyPJVUkeT7I3yc2n2H5hknuTPJRkT5K39237QHfc40l+fpg5JUltBt2S/bQlOQ+4DXgLMA08kGR3VT3Wt9sHgbuq6g+SXAbcDWzqlrcDbwD+FvDfk7yuqp4fVl5J0sIN88zjCmBvVe2rqueAO4Gr5+xTwCu65VcC3+qWrwburKpj3Ufg7u2eT5K0BAyzPDYCT/WtT3dj/T4EvCvJNL2zjvc3HEuSa5NMJZk6cODA2cotSRpg1BPmO4BPVNUE8HbgU0kWnKmqbq+qyaqa3LBhw1ACHjx8jEeeeoaDh48N5fklaTka2pwHsB+4oG99ohvr917gKoCq+mqSVcD6BR47dJ99eD837drD+NgYM7Oz7Ny2ma1bXnACJEnnnGGeeTwAXJLk4iQvozcBvnvOPt8EfhYgyaX0Phf9QLff9iQrk1wMXAL86RCzvsDBw8e4adcejs7M8uyx4xydmeXGXXs8A5EkhnjmUVXHk1wH3AOcB9xRVY8muRWYqqrdwA3Ax5NcT2/y/JqqKuDRJHcBjwHHgfct9jutpg8dYXxsjKPMfndsfGyM6UNHWLdm5WJGkaQlZ5iXraiqu+lNhPeP3dK3/Bhw5Ysc+2Hgw8PMN5+JtauZmZ09aWxmdpaJtatHlEiSlo5RT5gvWevWrGTnts2sGh/j/JUrWDU+xs5tmz3rkCSGfOax3G3dspErX7ue6UNHmFi72uKQpI7lMcC6NSstDUmaw8tWkqRmlockqZnlIUlqZnlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockqZnlIUlqZnlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockqZnlIUlqZnlIkpoNtTySXJXk8SR7k9x8iu2/l+Th7vFEkmf6tj3ft233MHNKktqsGNYTJzkPuA14CzANPJBkd1U9dmKfqrq+b//3A5f3PcWRqtoyrHySpNM3zDOPK4C9VbWvqp4D7gSunmf/HcCnh5hHknSWDLM8NgJP9a1Pd2MvkOQi4GLgy33Dq5JMJbk/yTte5Lhru32mDhw4cLZyS5IGWCoT5tuBz1TV831jF1XVJPBLwO8nec3cg6rq9qqarKrJDRs2LFZW6SXv4OFjPPLUMxw8fGzUUbREDW3OA9gPXNC3PtGNncp24H39A1W1v/t3X5L76M2HPHn2Y0rq99mH93PTrj2Mj40xMzvLzm2b2brllBcNdA4b5pnHA8AlSS5O8jJ6BfGCd00leT2wFvhq39jaJCu75fXAlcBjc4+VdHYdPHyMm3bt4ejMLM8eO87RmVlu3LXHMxC9wNDKo6qOA9cB9wBfA+6qqkeT3Jpka9+u24E7q6r6xi4FppI8AtwL/Hb/u7QkDcf0oSOMj538a2F8bIzpQ0dGlEhL1TAvW1FVdwN3zxm7Zc76h05x3P8C3jjMbJJeaGLtamZmZ08am5mdZWLt6hEl0lK1VCbMJS0B69asZOe2zawaH+P8lStYNT7Gzm2bWbdm5aijaYkZ6pmHpOVn65aNXPna9UwfOsLE2tUWh07J8pD0AuvWrLQ0NC8vW0mSmlkekqRmlockqZnlIUlqZnlIkppZHpKkZpaHJKmZ5SFJamZ5SJKaWR6SpGaWhySpmeUhSWpmeUiSmlkekqRmlockLWMHDx/jkaeeWfTPmffzPCRpmfrsw/u5adcexsfGmJmdZee2zWzdsnFRvrZnHpK0DB08fIybdu3h6Mwszx47ztGZWW7ctWfRzkAsD0lahqYPHWF87ORf4eNjY0wfOrIoX9/ykKRlaGLtamZmZ08am5mdZWLt6kX5+paHJC1D69asZOe2zawaH+P8lStYNT7Gzm2bF+2z550wl6RlauuWjVz52vVMHzrCxNrVi1YcYHlI0rK2bs3KRS2NE7xsJUlqZnlIkppZHpKkZpaHJKmZ5SFJapaqGnWGsyLJAeAvRp3jNK0Hnh51iDNg/tEy/+gs5+zQy//yqtrQeuBLpjyWsyRTVTU56hyny/yjZf7RWc7Z4czye9lKktTM8pAkNbM8lobbRx3gDJl/tMw/Oss5O5xBfuc8JEnNPPOQJDWzPCRJzSyPRZTkqiSPJ9mb5OZTbP/1JI8l2ZPkS0kuGkXOF7OA/L+S5P8keTjJV5JcNoqcpzIoe99+25JUkiX19ssFvPbXJDnQvfYPJ/nHo8j5Yhby+if5xe7n/9Ek/2mxM85nAa//7/W99k8keWYUOV/MAvJfmOTeJA91v3/ePvBJq8rHIjyA84AngR8EXgY8Alw2Z5+fBr6vW/5V4D+POndj/lf0LW8FPj/q3AvN3u13PvAnwP3A5KhzN7721wD/dtRZzyD/JcBDwNpu/W+MOnfrz0/f/u8H7hh17sbX/3bgV7vly4BvDHpezzwWzxXA3qraV1XPAXcCV/fvUFX3VtX/61bvByYWOeN8FpL/O32rLweWyrsxBmbv/BbwO8DRxQy3AAvNv1QtJP8vA7dV1SGAqvrrRc44n9bXfwfw6UVJtjALyV/AK7rlVwLfGvSklsfi2Qg81bc+3Y29mPcCnxtqojYLyp/kfUmeBHYCv7ZI2QYZmD3JjwAXVNV/W8xgC7TQn51t3SWHzyS5YHGiLchC8r8OeF2S/5nk/iRXLVq6wRb83253qfli4MuLkGuhFpL/Q8C7kkwDd9M7e5qX5bEEJXkXMAl8dNRZWlXVbVX1GuAm4IOjzrMQScaA3wVuGHWWM/BHwKaq2gx8EfjkiPO0WkHv0tWb6f2f+8eTfP9IE52e7cBnqur5UQdptAP4RFVNAG8HPtX9d/GiLI/Fsx/o/7/BiW7sJEl+DvjnwNaqOrZI2RZiQfn73Am8Y6iJFm5Q9vOBHwLuS/IN4CeA3Uto0nzga19VB/t+Xv498KOLlG0hFvKzMw3srqqZqvo68AS9MlkKWn72t7O0LlnBwvK/F7gLoKq+Cqyid9PEFzfqyZxz5UHv/6z20TulPTFp9YY5+1xOb2LrklHnPc38l/Qt/11gatS5F5p9zv73sbQmzBfy2v9A3/I7gftHnbsx/1XAJ7vl9fQus6wbdfaWnx/g9cA36P74eqk8Fvj6fw64plu+lN6cx7zfx4p5m0VnTVUdT3IdcA+9dz/cUVWPJrmV3i/Z3fQuU60B/ksSgG9W1daRhe6zwPzXdWdOM8Ah4D2jS/w9C8y+ZC0w/68l2QocB75N791XS8IC898DvDXJY8DzwD+rqoOjS/09DT8/24E7q/sNvFQsMP8N9C4VXk9v8vyaQd+HtyeRJDVzzkOS1MzykCQ1szwkSc0sD0lSM8tDktTM8pDOUJJ3dHfifX23vinJke4OpV9L8qdJrjnFcQ8nuXPRA0tngeUhnbkdwFe6f094sqour6pL6b3//58m+UcnNia5lN577v9OkpcvalrpLLA8pDOQZA3wk/Ru77D9VPtU1T7g1zn5RpE7gE8BX2B53SFXAiwP6UxdTe9zS54ADiZ5sXtK/W96t6844R/Qu//Xpzn5jEVaFiwP6czsoFcCdP++WBHkuwu9Gy4+XVXfBL4EXJ7kVUNNKZ1l3ttKOk3dL/yfAd6YpOjNYRRw2yl2vxz4Wre8A3h9dwdf6H0Izzbg40MNLJ1FnnlIp+/vAZ+qqouqalNVXQB8nZNvf02STcDHgH/TfUbCLwJv7I7ZRO/Sl5eutKx45iGdvh30Pra23y7gA8BrkjxE73MRngX+dVV9IsmbgP1V1f8xn38CXJbkB6rqLxcjuHSmvKuuJKmZl60kSc0sD0lSM8tDktTM8pAkNbM8JEnNLA9JUjPLQ5LU7P8DB2okIqPG++IAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Ekut8X0KYdff","colab":{"base_uri":"https://localhost:8080/","height":463},"executionInfo":{"status":"ok","timestamp":1666206316780,"user_tz":-180,"elapsed":648,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2b64dd09-cb49-4977-eb9a-afd68c775653"},"source":["# И на десерт - пирожковая диаграмма\n","price.plot.pie(subplots=True, figsize=(15,7.5))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([<matplotlib.axes._subplots.AxesSubplot object at 0x7fe67c0eda50>,\n","       <matplotlib.axes._subplots.AxesSubplot object at 0x7fe67bfa6a50>],\n","      dtype=object)"]},"metadata":{},"execution_count":121},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x540 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"nK4cX50GkU2p"},"source":["# Другие инструменты работы с данными"]},{"cell_type":"markdown","source":["Если ваш датасет не слишком большой, то pandas это де-факто лучший инструмент в наличии. В противном случае есть альтернативы:\n"," - [numpy](http://www.numpy.org/) - библиотека для низкоуровневой работы с многомерными массивами из примитивных типов данных. Подходит для \"векторизованной\" обработки. Numpy - ваш последний шанс все еще писать на обычном питоне, без биндингов на С. Подходит для задач быстрой обработки не слишком больших данных. На самом деле внутри, pandas использует numpy.\n"," - [Graphlab](https://turi.com/) - Платная питоновская библиотека для работы как большими данными так и с маленькими датасетами. Данные представляются как SFrame объекты, во многом похожие на DataFrame из pandas.\n"," - [Hadoop](https://hadoop.apache.org/) - стек технологии для работы с очень большими данными, в частности есть классический MapReduce."],"metadata":{"id":"JUWs0go5xT9d"}},{"cell_type":"markdown","metadata":{"id":"Om8fw2FOkU2p"},"source":["# Другие инструменты визуализации"]},{"cell_type":"markdown","source":["Для визуализации библиотек намного больше. Вот самые популярные\n"," - [Pandas](https://pandas.pydata.org/) - для быстрой и очень простой визуализации. Любая мелкая настройка потребует знания matplotlib\n"," - [Seaborn](https://seaborn.pydata.org/) - широкий но фиксированный набор сложных визуализаций с красивыми цветовыми схемами. Библиотека является надстройкой над matplotlib, и, опять же, тонкие настройки потребуют знания matplotlib.\n","   - [Галерея с примерами](https://seaborn.pydata.org/examples/index.html)\n","   - [Руководство](https://seaborn.pydata.org/tutorial.html)\n"," - [ggplot](http://ggplot.yhathq.com/) - многообещающая библиотека скопированная из R. Пока на этапе развития\n"," - [Bokeh](https://bokeh.pydata.org/en/latest/) - библиотека для визуализации в web.\n"," - [Plot.ly](https://plot.ly/) - библиотека для интерактивных и статических визуализаций. Нацелена на работу в облаке, но можно работать и локально.\n","   - [Галерея с примерами](https://plot.ly/python/)\n","   - [Краткое введение](https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf)"],"metadata":{"id":"zy_qqaIYxYDr"}}],"metadata":{"celltoolbar":"Slideshow","kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.5"},"colab":{"provenance":[{"file_id":"1ndXjWQeLbxaRXhke7OI9U2akiFBhnM71","timestamp":1700458254887},{"file_id":"1f5ZwWOTnVULmwZ2nTbHoH3hvDR5ocxMd","timestamp":1681845434692},{"file_id":"1Xw9re1eQ7is0zExbBFRuRNu0kI3XYEfA","timestamp":1669023776344}],"toc_visible":true}},"nbformat":4,"nbformat_minor":0}