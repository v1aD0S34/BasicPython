{"cells":[{"cell_type":"markdown","source":["# Практикум Python\n","\n","\n","<img src=\"https://www.python.org/static/community_logos/python-logo-master-v3-TM.png\" align=\"right\" style=\"height: 200px;\"/>"],"metadata":{"id":"Hbbnl-ENj9I-"}},{"cell_type":"markdown","metadata":{"id":"LlmAifELkU13"},"source":["# Работа с сетью. Клиенты и парсинг"]},{"cell_type":"code","source":["pip install scrapy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KnegIsH7yq09","executionInfo":{"status":"ok","timestamp":1710802802606,"user_tz":-180,"elapsed":20871,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"3e4493b7-b0ad-4b4f-8e42-68202d2b7b89"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting scrapy\n","  Downloading Scrapy-2.11.1-py2.py3-none-any.whl (287 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m287.8/287.8 kB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting Twisted>=18.9.0 (from scrapy)\n","  Downloading twisted-24.3.0-py3-none-any.whl (3.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.2/3.2 MB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: cryptography>=36.0.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (42.0.5)\n","Collecting cssselect>=0.9.1 (from scrapy)\n","  Downloading cssselect-1.2.0-py2.py3-none-any.whl (18 kB)\n","Collecting itemloaders>=1.0.1 (from scrapy)\n","  Downloading itemloaders-1.1.0-py3-none-any.whl (11 kB)\n","Collecting parsel>=1.5.0 (from scrapy)\n","  Downloading parsel-1.9.0-py2.py3-none-any.whl (17 kB)\n","Requirement already satisfied: pyOpenSSL>=21.0.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.1.0)\n","Collecting queuelib>=1.4.2 (from scrapy)\n","  Downloading queuelib-1.6.2-py2.py3-none-any.whl (13 kB)\n","Collecting service-identity>=18.1.0 (from scrapy)\n","  Downloading service_identity-24.1.0-py3-none-any.whl (12 kB)\n","Collecting w3lib>=1.17.0 (from scrapy)\n","  Downloading w3lib-2.1.2-py3-none-any.whl (21 kB)\n","Collecting zope.interface>=5.1.0 (from scrapy)\n","  Downloading zope.interface-6.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (247 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m247.3/247.3 kB\u001b[0m \u001b[31m15.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting protego>=0.1.15 (from scrapy)\n","  Downloading Protego-0.3.0-py2.py3-none-any.whl (8.5 kB)\n","Collecting itemadapter>=0.1.0 (from scrapy)\n","  Downloading itemadapter-0.8.0-py3-none-any.whl (11 kB)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from scrapy) (67.7.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.0)\n","Collecting tldextract (from scrapy)\n","  Downloading tldextract-5.1.1-py3-none-any.whl (97 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m97.7/97.7 kB\u001b[0m \u001b[31m9.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: lxml>=4.4.1 in /usr/local/lib/python3.10/dist-packages (from scrapy) (4.9.4)\n","Collecting PyDispatcher>=2.0.5 (from scrapy)\n","  Downloading PyDispatcher-2.0.7-py3-none-any.whl (12 kB)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/dist-packages (from cryptography>=36.0.0->scrapy) (1.16.0)\n","Collecting jmespath>=0.9.5 (from itemloaders>=1.0.1->scrapy)\n","  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n","Requirement already satisfied: attrs>=19.1.0 in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (23.2.0)\n","Requirement already satisfied: pyasn1 in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (0.5.1)\n","Requirement already satisfied: pyasn1-modules in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (0.3.0)\n","Collecting automat>=0.8.0 (from Twisted>=18.9.0->scrapy)\n","  Downloading Automat-22.10.0-py2.py3-none-any.whl (26 kB)\n","Collecting constantly>=15.1 (from Twisted>=18.9.0->scrapy)\n","  Downloading constantly-23.10.4-py3-none-any.whl (13 kB)\n","Collecting hyperlink>=17.1.1 (from Twisted>=18.9.0->scrapy)\n","  Downloading hyperlink-21.0.0-py2.py3-none-any.whl (74 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m74.6/74.6 kB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting incremental>=22.10.0 (from Twisted>=18.9.0->scrapy)\n","  Downloading incremental-22.10.0-py2.py3-none-any.whl (16 kB)\n","Requirement already satisfied: typing-extensions>=4.2.0 in /usr/local/lib/python3.10/dist-packages (from Twisted>=18.9.0->scrapy) (4.10.0)\n","Requirement already satisfied: idna in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (3.6)\n","Requirement already satisfied: requests>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (2.31.0)\n","Collecting requests-file>=1.4 (from tldextract->scrapy)\n","  Downloading requests_file-2.0.0-py2.py3-none-any.whl (4.2 kB)\n","Requirement already satisfied: filelock>=3.0.8 in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (3.13.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from automat>=0.8.0->Twisted>=18.9.0->scrapy) (1.16.0)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.12->cryptography>=36.0.0->scrapy) (2.21)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (3.3.2)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (2024.2.2)\n","Installing collected packages: PyDispatcher, incremental, zope.interface, w3lib, queuelib, protego, jmespath, itemadapter, hyperlink, cssselect, constantly, automat, Twisted, requests-file, parsel, tldextract, service-identity, itemloaders, scrapy\n","Successfully installed PyDispatcher-2.0.7 Twisted-24.3.0 automat-22.10.0 constantly-23.10.4 cssselect-1.2.0 hyperlink-21.0.0 incremental-22.10.0 itemadapter-0.8.0 itemloaders-1.1.0 jmespath-1.0.1 parsel-1.9.0 protego-0.3.0 queuelib-1.6.2 requests-file-2.0.0 scrapy-2.11.1 service-identity-24.1.0 tldextract-5.1.1 w3lib-2.1.2 zope.interface-6.2\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uDE5me7jeY8B"},"outputs":[],"source":["# Убедитесь, что вотэтовотвсё установлено\n","\n","import urllib, requests, socket, re, lxml, io, bs4, scrapy, sqlite3, pandas, sqlalchemy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nFwOl5XNeY8C","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1710802814227,"user_tz":-180,"elapsed":10198,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"98312ab8-5271-4214-ac03-6ae9921ad573"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: lxml in /usr/local/lib/python3.10/dist-packages (4.9.4)\n","Collecting bs4\n","  Downloading bs4-0.0.2-py2.py3-none-any.whl (1.2 kB)\n","Requirement already satisfied: scrapy in /usr/local/lib/python3.10/dist-packages (2.11.1)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: sqlalchemy in /usr/local/lib/python3.10/dist-packages (2.0.28)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from bs4) (4.12.3)\n","Requirement already satisfied: Twisted>=18.9.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.3.0)\n","Requirement already satisfied: cryptography>=36.0.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (42.0.5)\n","Requirement already satisfied: cssselect>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from scrapy) (1.2.0)\n","Requirement already satisfied: itemloaders>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from scrapy) (1.1.0)\n","Requirement already satisfied: parsel>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (1.9.0)\n","Requirement already satisfied: pyOpenSSL>=21.0.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.1.0)\n","Requirement already satisfied: queuelib>=1.4.2 in /usr/local/lib/python3.10/dist-packages (from scrapy) (1.6.2)\n","Requirement already satisfied: service-identity>=18.1.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.1.0)\n","Requirement already satisfied: w3lib>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (2.1.2)\n","Requirement already satisfied: zope.interface>=5.1.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (6.2)\n","Requirement already satisfied: protego>=0.1.15 in /usr/local/lib/python3.10/dist-packages (from scrapy) (0.3.0)\n","Requirement already satisfied: itemadapter>=0.1.0 in /usr/local/lib/python3.10/dist-packages (from scrapy) (0.8.0)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from scrapy) (67.7.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from scrapy) (24.0)\n","Requirement already satisfied: tldextract in /usr/local/lib/python3.10/dist-packages (from scrapy) (5.1.1)\n","Requirement already satisfied: PyDispatcher>=2.0.5 in /usr/local/lib/python3.10/dist-packages (from scrapy) (2.0.7)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.25.2)\n","Requirement already satisfied: typing-extensions>=4.6.0 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy) (4.10.0)\n","Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy) (3.0.3)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.10/dist-packages (from cryptography>=36.0.0->scrapy) (1.16.0)\n","Requirement already satisfied: jmespath>=0.9.5 in /usr/local/lib/python3.10/dist-packages (from itemloaders>=1.0.1->scrapy) (1.0.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n","Requirement already satisfied: attrs>=19.1.0 in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (23.2.0)\n","Requirement already satisfied: pyasn1 in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (0.5.1)\n","Requirement already satisfied: pyasn1-modules in /usr/local/lib/python3.10/dist-packages (from service-identity>=18.1.0->scrapy) (0.3.0)\n","Requirement already satisfied: automat>=0.8.0 in /usr/local/lib/python3.10/dist-packages (from Twisted>=18.9.0->scrapy) (22.10.0)\n","Requirement already satisfied: constantly>=15.1 in /usr/local/lib/python3.10/dist-packages (from Twisted>=18.9.0->scrapy) (23.10.4)\n","Requirement already satisfied: hyperlink>=17.1.1 in /usr/local/lib/python3.10/dist-packages (from Twisted>=18.9.0->scrapy) (21.0.0)\n","Requirement already satisfied: incremental>=22.10.0 in /usr/local/lib/python3.10/dist-packages (from Twisted>=18.9.0->scrapy) (22.10.0)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->bs4) (2.5)\n","Requirement already satisfied: idna in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (3.6)\n","Requirement already satisfied: requests>=2.1.0 in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (2.31.0)\n","Requirement already satisfied: requests-file>=1.4 in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (2.0.0)\n","Requirement already satisfied: filelock>=3.0.8 in /usr/local/lib/python3.10/dist-packages (from tldextract->scrapy) (3.13.1)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.12->cryptography>=36.0.0->scrapy) (2.21)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (3.3.2)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.1.0->tldextract->scrapy) (2024.2.2)\n","Installing collected packages: bs4\n","Successfully installed bs4-0.0.2\n"]}],"source":["!pip install lxml bs4 scrapy pandas sqlalchemy"]},{"cell_type":"markdown","source":["# Как работает Интернет?"],"metadata":{"id":"OlWhajN-_CxZ"}},{"cell_type":"markdown","source":["Два основных концепта:\n","- пакеты\n","- протоколы"],"metadata":{"id":"AvBs2Bn3e4FW"}},{"cell_type":"markdown","source":["**Пакет** - малый фрагмент большого сообщения. Каждый пакет несет полезные данные и информацию об этих данных (aka *заголовок*), благодаря которой получатель пакета понимает что с ним делать.\n","\n","Пересылка данных выполняется следующим образом:\n","- данные разбиваются на набор пакетов\n","- пакеты преобразуются в биты (набор 0 и 1) и отправляются в сеть\n","- пакеты перемещаются по сети с помощью маршрутизирующих устройств (роутеры, свитчи)\n","- пакеты попадают на целевой компьютер\n","- целевой компьютер с помощью заголовков собирает из пакетов исходные данные\n","\n","Пакеты передаются по сети с помощью **коммутации пакетов** (packet switching). Промежуточные роутеры и свитчи могут обрабатывать пакеты независимо, без учета откуда они пришли и куда направляются. Это приводит к тому, что ни одно соединение не является более приоритетным - в итоге это соединение не будет занимать единолично сетевое устройство."],"metadata":{"id":"l8lWX6z2fDd_"}},{"cell_type":"markdown","source":["Соединение двух компьютеров, у которых может быть разное \"железо\" и разные программы - одна из основных проблем, появившихся на заре Интернета. Необходимы правила передачи информации, которые были бы универсальны для всех компьютеров.\n","\n","Эту проблемы удалось разрешить с помощью введения **протоколов** - стандатизированного способа выполнения определенных действий и форматирования данных, чтобы устройства могли друг друга понимать.\n","\n","Существует огромное количество протоколов:\n","- для передачи пакетов между устройствами внутри одной сети (Ethernet)\n","- для передачи пакетов между сетями (IP)\n","- для гарантированной передачи пакетов в нужном порядке (TCP)\n","- для форматирования данных для вебсайтов и приложений (HTTP)\n","\n","Помимо этих основных протоколов существует огромное количество других протоколов, которые используются для разных целей - маршрутизации, тестирования, шифрования и т.д."],"metadata":{"id":"8SdmeOkviEOJ"}},{"cell_type":"markdown","source":["## Пример - подключение к colab"],"metadata":{"id":"mMqjFpyBmcM4"}},{"cell_type":"markdown","source":["Для отображения этой страницы компьютеры обмениваются тысячами пакетов, которые передаются по кабелям и волнам через роутеры и свитчи. Ваш компьютер получает эти пакеты и передает их в браузер, а затем браузер интерпретирует данные из пакетов, чтобы отобразить этот текст.\n","\n","Какие шаги вовлечены в этот процесс:\n","- **Запрос в браузере.** Вы вбиваете URI ресурса, который вам нужен:\n","    \n","    `<схема>:[//[<логин>[:<пароль>]@]<хост>[:<порт>]][/<URL‐путь>][?<параметры>][#<якорь>]`  \n","- **DNS запрос.** Для идентификации компьютеров в сети используются IP адреса вида `127.0.0.1`. Эти адреса удобны для машин, но неудобны для людей (цифры неудобно запоминать) - намного удобнее использовать *доменные имена*, например, `google.com`. Чтобы сопоставлять IP адреса и доменные имена используются службы доменных имен (*Domain Name Service*, *DNS*). - они помогают по доменному имени получать IP адрес компьютера (не только это, но опустим).\n","- **TCP рукопожатие.** Браузер устанавлиевает соединение с этим IP адресом.\n","- **TLS рукопожатие.** Браузер также устанавливает шифрование с сервером, чтобы никто еще не смог прочитать данные из пакетов.\n","- **HTTP запрос.** Браузер запрашивает содержимое этой веб-страницы.\n","- **HTTP ответ.** Сервер отдает содержимое веб-страницы в виде HTML, CSS и JavaScript кода, разбитых на набор пакетов. Как только бразуер получает пакеты и проверяет их содержимое, он интерпретирует их как веб-страница, которую вы видите.\n","\n","Весь процесс занимает 1-2 секунды."],"metadata":{"id":"N5HdDkCFoGSW"}},{"cell_type":"markdown","source":["## HTML"],"metadata":{"id":"DEzjLcvu_aia"}},{"cell_type":"markdown","source":["\n","\n","**HTML** (HyperText Markup Language) -- язык разметки, который используется для web-страниц.\n","\n","Это механизм для получения структурного текста, который понимают браузеры.\n","\n","Структура в тексте задаётся вложенными тегами, теги определяют то, как текст будет показан (отрендерен).\n","\n","Это тег: `<тег>`, теги бывают открывающими (`<тег>`) и закрывающими (`</тег>`)."],"metadata":{"id":"uE7cHjwj_cWT"}},{"cell_type":"markdown","source":["Пример HTML-разметки:\n","\n","```html\n","<!DOCTYPE html>\n","<html>\n","   <head>\n","      <meta charset=\"utf-8\" />\n","      <title>HTML Document</title>\n","   </head>\n","   <body>\n","      <p> <!-- p -- это параграф, а в такие странные скобки заключается комментарий -->\n","         <b>\n","            Этот текст будет полужирным, <i>а этот — ещё и курсивным</i>.\n","         </b>\n","      </p>\n","   </body>\n","</html>\n","```"],"metadata":{"id":"7DKlNPHMwDI4"}},{"cell_type":"markdown","source":["Так он выглядит после рендеринга:\n","\n","<!DOCTYPE html>\n","<html>\n","   <head>\n","      <meta charset=\"utf-8\" />\n","      <title>HTML Document</title>\n","   </head>\n","   <body>\n","      <p> <!-- p -- это параграф, а в такие странные скобки заключается комментарий -->\n","         <b>\n","            Этот текст будет полужирным, <i>а этот — ещё и курсивным</i>.\n","         </b>\n","      </p>\n","   </body>\n","</html>"],"metadata":{"id":"PtTEyd4SwGVp"}},{"cell_type":"markdown","source":["Видно, что HTML-разметка имеет древовидную структуру - каждый тег (вершина дерева) имеет 0 (тогда это лист дерева) или больше (тогда это внутренняя вершина) вложенных в него тегов.\n","\n","Значит, чтобы доставать из HTML какую-то информацию, можно использовать его структуру.\n","\n","Мы этим займёмся чуть позже.\n","\n","А ещё у тегов бывают **атрибуты**:\n","\n","```html\n","<a href=\"http://example.com\">Ссылка на example.com</a>\n","```\n","Отрендерим этот кусок:\n","<a href=\"http://example.com\">Ссылка на example.com</a>\n","\n","А этот текст (безусловно, имеющий структуру), был написан с помощью другого языка разметки -- **Markdown**. [Руководство](https://paulradzkov.com/2014/markdown_cheatsheet/)\n","\n","**P.S.**\n","На самом деле, такую же структуру имеет и формат XML (другой язык разметки).\n","\n","Формально, HTML -- это более стандартизированное подмножество XML."],"metadata":{"id":"YHFa2150wI3U"}},{"cell_type":"markdown","source":["## HTTP"],"metadata":{"id":"ByXDOM6CAfTX"}},{"cell_type":"markdown","source":["**HTTP** (HyperText Transfer Protocol) - протокол передачи гипертекста.\n","\n","На самом деле, в HTTP мы передаём не только гипертекст, а **ресурсы** -- обобщение, куда попадает и гипертекст, и картинки, и музыка и т.д. Но стандарт подходит для всего этого.\n","\n","Каждый ресурс имеет адрес -- **URI** (Uniform Resource Identifier) -- аналог пути в системе компьютера.\n","\n","Не будем говорить про низкоуровневую сторону вопроса: стек TCP/IP, сокеты, порты и т.д."],"metadata":{"id":"BbJk7OMsAd6h"}},{"cell_type":"markdown","source":["Чтобы получить данные, клиент делает запрос на сервер. В запросе должны быть 3 части:\n","* Starting line -- определяет тип сообщения;\n","* Headers -- характеризуют тело сообщения, параметры передачи и прочие сведения;\n","* Message body -- непосредственно данные сообщения.\n","\n","Ответное сообщение от сервера имеет такую же структуру.\n","\n","Чтобы посылать эти запросы \"руками\", а не через браузер, можно использовать утилиту `curl`. Ей и воспользуемся."],"metadata":{"id":"qDLPrwTezlmy"}},{"cell_type":"code","source":["%%bash\n","curl example.com/index.html -v"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-FLO9nbH-xvz","executionInfo":{"status":"ok","timestamp":1680164026306,"user_tz":-180,"elapsed":424,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fad230d6-42f1-451b-a404-c9df567861cf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n"]},{"output_type":"stream","name":"stderr","text":["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n","                                 Dload  Upload   Total   Spent    Left  Speed\n","\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying 93.184.216.34:80...\n","* TCP_NODELAY set\n","* Connected to example.com (93.184.216.34) port 80 (#0)\n","> GET /index.html HTTP/1.1\r\n","> Host: example.com\r\n","> User-Agent: curl/7.68.0\r\n","> Accept: */*\r\n","> \r\n","* Mark bundle as not supporting multiuse\n","< HTTP/1.1 200 OK\r\n","< Accept-Ranges: bytes\r\n","< Age: 370922\r\n","< Cache-Control: max-age=604800\r\n","< Content-Type: text/html; charset=UTF-8\r\n","< Date: Thu, 30 Mar 2023 08:13:45 GMT\r\n","< Etag: \"3147526947\"\r\n","< Expires: Thu, 06 Apr 2023 08:13:45 GMT\r\n","< Last-Modified: Thu, 17 Oct 2019 07:18:26 GMT\r\n","< Server: ECS (oxr/8324)\r\n","< Vary: Accept-Encoding\r\n","< X-Cache: HIT\r\n","< Content-Length: 1256\r\n","< \r\n","{ [1256 bytes data]\n","\r100  1256  100  1256    0     0  66105      0 --:--:-- --:--:-- --:--:-- 66105\n","* Connection #0 to host example.com left intact\n"]}]},{"cell_type":"markdown","source":["### Методы HTTP\n","\n","HTTP метод определяет операцию, которую мы хотим произвести над ресурсом.\n","\n","Самые частые методы: GET, POST, PUT, DELETE (но есть и другие).\n","\n","* **GET** -- запрос содержимого ресурса. <br>GET-запросы идемпотентны. Поэтому они могут кэшироваться.\n","* **POST** -- передача данных на ресурс (например, при отправке комментария на форуме или вводе пароля на сайте). <br> Не идемпотентны => при отправке одного и того же комментария на форум он появится там дважды.  <br>Не кэшируются.\n","* **PUT** -- передача данных в конкретный URI (изменение существующего ресурса). Не кэшируются.\n","* **DELETE** -- удаление ресурса."],"metadata":{"id":"z8jkJKP0A8y6"}},{"cell_type":"markdown","source":["### Коды HTTP\n","\n","В ответном сообщении придёт код ответа HTTP, который определяет результат выполнения операции.\n","\n","Самые частые коды: `200 OK`, `400 BadRequest`, `404 Not Found`, `500 Internal Server Error`.\n","\n","Общий обзор кодов:\n","* **1xx** -- Informational. Информационные коды, например, `102 Processing` (запрос пока обрабатывается);\n","* **2xx** -- Success. Успех. Всё хорошо, запрос отработал и ничего не сломал. По крайней мере, пока.\n","* **3xx** -- Redirection. Перенаправление на другой ресурс/страницу.\n","* **4xx** -- Client error. Ошибка клиента (неверные данные запроса или неправильный путь).\n","* **5xx** -- Server error. Что-то сломалось на сервере (там поделили на ноль, например)."],"metadata":{"id":"8yzKVLqnBADJ"}},{"cell_type":"markdown","source":["### Разбор примера\n","\n","Давайте ещё раз посмотрим на запрос к `example.com/index.html`.\n","\n","Служебная информация от `curl`:\n","\n","```\n","*   Trying 93.184.216.34...\n","* TCP_NODELAY set\n","* Connected to example.com (93.184.216.34) port 80 (#0)\n","```\n","Запрос клиента:\n","```\n","> GET /index.html HTTP/1.1    # Starting line: метод GET, URI -- /index.html, версия протокола -- HTTP/1.1\n","> Host: example.com           # Заголовки сообщения\n","> User-Agent: curl/7.58.0\n","> Accept: */*\n",">                             # Пустое тело, т.к. мы ничего не передали на сервер.\n","```\n","\n","Ответ сервера:\n","```\n","< HTTP/1.1 200 OK                          # Starting line: версия протокола и код ответа\n","< Accept-Ranges: bytes                     # Заголовки ответа\n","< Age: 482235\n","< Cache-Control: max-age=6048000            \n","< Content-Type: text/html; charset=UTF-8\n","< Date: Wed, 27 Apr 2022 12:33:28 GMT\n","< Etag: \"3147526947+gzip\"\n","< Expires: Wed, 04 May 2022 12:33:28 GMT\n","< Last-Modified: Thu, 17 Oct 2019 07:18:26 GMT\n","< Server: ECS (nyb/1D10)\n","< Vary: Accept-Encoding\n","< X-Cache: HIT\n","< Content-Length: 1256\n","<                                          # Пустая строка -- нужна по стандарту\n","<!doctype html>                            # Тело ответа -- HTML-документ\n","<html>\n","<head>\n","    <title>Example Domain</title>\n",". . .\n","```\n"],"metadata":{"id":"y4bDOiEIBGBj"}},{"cell_type":"markdown","source":["### REST API\n","\n","**API (Application programming interface)** — это контракт, который предоставляет программа. «Ко мне можно обращаться так и так, я обязуюсь делать то и это».\n","\n","Одним из популярных видов REST (REpresentational State Transfer) - [подробнее](https://aws.amazon.com/ru/what-is/restful-api/)."],"metadata":{"id":"ZdAVG4ERB5jc"}},{"cell_type":"markdown","metadata":{"id":"Ddry6MEqeY8H"},"source":["### Полезные ссылки"]},{"cell_type":"markdown","source":["https://faun.pub/http-and-everything-you-need-to-know-about-it-8273bc224491 - доступно про HTTP (english)"],"metadata":{"id":"SM9bJ-_ciRYr"}},{"cell_type":"markdown","metadata":{"id":"bKq5r8_NeY8H"},"source":["# Web scraping"]},{"cell_type":"markdown","source":["**Веб-скрапинг** - это технология получения веб-данных путем извлечения их со страниц веб-ресурсов.\n","\n","Состоит из двух этапов:\n","* Получение html\n","* Парсинг html"],"metadata":{"id":"UOEzXA5S32V9"}},{"cell_type":"markdown","source":["## Получение html\n","\n","\n","\n","Варианты инструментов:\n","\n","* `urllib`\n","* `requests` (de-facto standard)\n","* `socket` (low-level)"],"metadata":{"id":"VJpsmZNyCK5_"}},{"cell_type":"markdown","source":["### `urllib`"],"metadata":{"id":"5hFXZ-8qClZg"}},{"cell_type":"code","source":["import urllib.request"],"metadata":{"id":"saNpl4nqAxJk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["response = urllib.request.urlopen('http://example.com/')\n","html = response.read()\n","print(*[x for x in html.split(b'\\n')], sep='\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tj25Sa3xCsu5","executionInfo":{"status":"ok","timestamp":1680164705123,"user_tz":-180,"elapsed":9,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8a440c6a-9e4f-4585-9293-f5ec4b0ea34f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["b'<!doctype html>'\n","b'<html>'\n","b'<head>'\n","b'    <title>Example Domain</title>'\n","b''\n","b'    <meta charset=\"utf-8\" />'\n","b'    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />'\n","b'    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />'\n","b'    <style type=\"text/css\">'\n","b'    body {'\n","b'        background-color: #f0f0f2;'\n","b'        margin: 0;'\n","b'        padding: 0;'\n","b'        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;'\n","b'        '\n","b'    }'\n","b'    div {'\n","b'        width: 600px;'\n","b'        margin: 5em auto;'\n","b'        padding: 2em;'\n","b'        background-color: #fdfdff;'\n","b'        border-radius: 0.5em;'\n","b'        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);'\n","b'    }'\n","b'    a:link, a:visited {'\n","b'        color: #38488f;'\n","b'        text-decoration: none;'\n","b'    }'\n","b'    @media (max-width: 700px) {'\n","b'        div {'\n","b'            margin: 0 auto;'\n","b'            width: auto;'\n","b'        }'\n","b'    }'\n","b'    </style>    '\n","b'</head>'\n","b''\n","b'<body>'\n","b'<div>'\n","b'    <h1>Example Domain</h1>'\n","b'    <p>This domain is for use in illustrative examples in documents. You may use this'\n","b'    domain in literature without prior coordination or asking for permission.</p>'\n","b'    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>'\n","b'</div>'\n","b'</body>'\n","b'</html>'\n","b''\n"]}]},{"cell_type":"code","source":["type(html)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tg1p8vsYCtHg","executionInfo":{"status":"ok","timestamp":1680164732583,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e6b16aa4-d7d5-41a0-a67c-4d158c144578"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["bytes"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["type(response)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FyjFMlmtCuwY","executionInfo":{"status":"ok","timestamp":1680164738574,"user_tz":-180,"elapsed":409,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"80b2aff0-3754-4fc7-8ad3-62293bf1152f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["http.client.HTTPResponse"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["html = html.decode('utf-8')\n","print(html)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C8S-IFmNCway","executionInfo":{"status":"ok","timestamp":1680164740618,"user_tz":-180,"elapsed":15,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8545b58c-e4ab-4dc2-abe6-e51f14c5e55d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n","\n"]}]},{"cell_type":"markdown","source":["На всякий случай сохраним этот html, пригодится:"],"metadata":{"id":"k4bJJqb1C002"}},{"cell_type":"code","source":["with open('example.com.txt', 'w', encoding='utf-8') as f:\n","    f.write(html)"],"metadata":{"id":"CUI__CM6Cxpc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(dir(response))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mNRdSWaQC4az","executionInfo":{"status":"ok","timestamp":1680164757628,"user_tz":-180,"elapsed":397,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fb5afd6e-bf43-44ac-d640-9ae04436d421"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['__abstractmethods__', '__class__', '__del__', '__delattr__', '__dict__', '__dir__', '__doc__', '__enter__', '__eq__', '__exit__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__next__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '_abc_impl', '_checkClosed', '_checkReadable', '_checkSeekable', '_checkWritable', '_check_close', '_close_conn', '_get_chunk_left', '_method', '_peek_chunked', '_read1_chunked', '_read_and_discard_trailer', '_read_next_chunk_size', '_read_status', '_readall_chunked', '_readinto_chunked', '_safe_read', '_safe_readinto', 'begin', 'chunk_left', 'chunked', 'close', 'closed', 'code', 'debuglevel', 'detach', 'fileno', 'flush', 'fp', 'getcode', 'getheader', 'getheaders', 'geturl', 'headers', 'info', 'isatty', 'isclosed', 'length', 'msg', 'peek', 'read', 'read1', 'readable', 'readinto', 'readinto1', 'readline', 'readlines', 'reason', 'seek', 'seekable', 'status', 'tell', 'truncate', 'url', 'version', 'will_close', 'writable', 'write', 'writelines']\n"]}]},{"cell_type":"code","source":["response.url"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"myFoTnCS4Nec","executionInfo":{"status":"ok","timestamp":1680164800055,"user_tz":-180,"elapsed":529,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d4f64f43-fd30-4564-d2fe-ba65b21f7d93"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'http://example.com/'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["response.msg"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"sXpWXcBW4OhH","executionInfo":{"status":"ok","timestamp":1680164801977,"user_tz":-180,"elapsed":374,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"5ac801c2-6604-4c22-8f95-c8461dc2f311"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'OK'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["response.code"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0UfEqcpK4P0b","executionInfo":{"status":"ok","timestamp":1680164802305,"user_tz":-180,"elapsed":2,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9670cda3-d67f-4bff-be9e-776c7fffea02"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["200"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["response.headers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PpaNSTYX4TLD","executionInfo":{"status":"ok","timestamp":1680164802634,"user_tz":-180,"elapsed":14,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"92f7f214-45b7-480d-b554-c672efea5c46"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<http.client.HTTPMessage at 0x7f8953e0ba00>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["dict(response.headers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZLBkF_CIC8hL","executionInfo":{"status":"ok","timestamp":1680164806187,"user_tz":-180,"elapsed":327,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"ac3d5ff1-e256-4551-d8fd-f6a6478d79b1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Age': '235271',\n"," 'Cache-Control': 'max-age=604800',\n"," 'Content-Type': 'text/html; charset=UTF-8',\n"," 'Date': 'Thu, 30 Mar 2023 08:25:04 GMT',\n"," 'Etag': '\"3147526947+ident\"',\n"," 'Expires': 'Thu, 06 Apr 2023 08:25:04 GMT',\n"," 'Last-Modified': 'Thu, 17 Oct 2019 07:18:26 GMT',\n"," 'Server': 'ECS (oxr/8323)',\n"," 'Vary': 'Accept-Encoding',\n"," 'X-Cache': 'HIT',\n"," 'Content-Length': '1256',\n"," 'Connection': 'close'}"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["### requests"],"metadata":{"id":"B2lCvWTmDA2z"}},{"cell_type":"markdown","source":[">HTTP for humans"],"metadata":{"id":"Hy0FiEj1DEhh"}},{"cell_type":"code","source":["import requests"],"metadata":{"id":"6E4_nVmUC-fc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["response = requests.get('https://example.com')\n","response"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p3ymZzTJDIgL","executionInfo":{"status":"ok","timestamp":1710841465726,"user_tz":-180,"elapsed":1091,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"fab175fc-1bea-447e-dc68-c32e543f4b08"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Response [200]>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["print(dir(response))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JDy7CsM6DJgh","executionInfo":{"status":"ok","timestamp":1710841466681,"user_tz":-180,"elapsed":4,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"2061e3be-de20-4f67-8b8f-197fcf186f80"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["['__attrs__', '__bool__', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__enter__', '__eq__', '__exit__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', '_next', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'elapsed', 'encoding', 'headers', 'history', 'is_permanent_redirect', 'is_redirect', 'iter_content', 'iter_lines', 'json', 'links', 'next', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']\n"]}]},{"cell_type":"code","source":["response.url"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"s7kA6yiS4dqF","executionInfo":{"status":"ok","timestamp":1710841467676,"user_tz":-180,"elapsed":548,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"0cae9d68-5e51-4805-b677-fb3d152476e0"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'https://example.com/'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["response.connection"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MoBj-63B4fZ1","executionInfo":{"status":"ok","timestamp":1710841468113,"user_tz":-180,"elapsed":4,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"9a6c8560-cde9-455a-a18d-941c80000ea1"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<requests.adapters.HTTPAdapter at 0x7e9b5c063be0>"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["response.headers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WFarrIJ24gZz","executionInfo":{"status":"ok","timestamp":1710841469038,"user_tz":-180,"elapsed":5,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"11e65b29-e64a-4dbe-8960-a6e3b6c4db19"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'Content-Encoding': 'gzip', 'Age': '477576', 'Cache-Control': 'max-age=604800', 'Content-Type': 'text/html; charset=UTF-8', 'Date': 'Tue, 19 Mar 2024 09:44:25 GMT', 'Etag': '\"3147526947+gzip\"', 'Expires': 'Tue, 26 Mar 2024 09:44:25 GMT', 'Last-Modified': 'Thu, 17 Oct 2019 07:18:26 GMT', 'Server': 'ECS (sed/58BA)', 'Vary': 'Accept-Encoding', 'X-Cache': 'HIT', 'Content-Length': '648'}"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["response.ok"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t7U9jRH84hev","executionInfo":{"status":"ok","timestamp":1710841469959,"user_tz":-180,"elapsed":4,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"3ff63fd8-9a52-4b5d-defd-d4ffc909011e"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["response.status_code"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rdh9fSyK4iij","executionInfo":{"status":"ok","timestamp":1710841470399,"user_tz":-180,"elapsed":2,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"81e5968f-e9ea-4148-8e44-c034b2152bb4"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["200"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["response.encoding"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"vgIdvYip4ji9","executionInfo":{"status":"ok","timestamp":1710841472217,"user_tz":-180,"elapsed":8,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"3767b6b0-6101-4473-bbc3-252b346033c7"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'UTF-8'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["response.links"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jsIc4wk74lJ5","executionInfo":{"status":"ok","timestamp":1710841477879,"user_tz":-180,"elapsed":6,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"25aafd78-6ab6-4f4b-f75b-dbc9c392d618"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{}"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["response.links"],"metadata":{"id":"AvwgjwqIGBkk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["type(response.links)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h-vXf6q-DMR2","executionInfo":{"status":"ok","timestamp":1710841484053,"user_tz":-180,"elapsed":5,"user":{"displayName":"Бояров Алексей","userId":"05058840961708249492"}},"outputId":"bd094def-c446-445f-fbcf-7d36e303cf54"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dict"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["print(response.text)"],"metadata":{"id":"vYyDuGLqDO5o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### socket"],"metadata":{"id":"gMNBc2a8DTPK"}},{"cell_type":"markdown","source":["Низкоуровневая (low-level) библиотека, если вам в жизни хочется больше \"ассемблера\":"],"metadata":{"id":"Z2DYr7U2DbPM"}},{"cell_type":"code","source":["import socket"],"metadata":{"id":"2LE8L5NYDQbm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n","host = socket.gethostbyname('www.example.com')\n","port = 80\n","print(host, port)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EnGTYu9sDopR","executionInfo":{"status":"ok","timestamp":1680164990208,"user_tz":-180,"elapsed":8,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"d97bfabc-0571-41ca-b6e7-35ea36cb74f2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["93.184.216.34 80\n"]}]},{"cell_type":"code","source":["sock.connect((host,port))\n","sock.sendall(b'GET / HTTP/1.1\\r\\nHost: www.example.com\\r\\n\\r\\n')\n","\n","val = sock.recv(4096)\n","print(val.decode('utf-8'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GL_7TPTm4s7J","executionInfo":{"status":"ok","timestamp":1680165007101,"user_tz":-180,"elapsed":290,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"9f42c923-d402-4c20-b9a7-ae368b75c194"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["HTTP/1.1 200 OK\r\n","Age: 16805\r\n","Cache-Control: max-age=604800\r\n","Content-Type: text/html; charset=UTF-8\r\n","Date: Thu, 30 Mar 2023 08:30:06 GMT\r\n","Etag: \"3147526947+ident\"\r\n","Expires: Thu, 06 Apr 2023 08:30:06 GMT\r\n","Last-Modified: Thu, 17 Oct 2019 07:18:26 GMT\r\n","Server: ECS (oxr/8314)\r\n","Vary: Accept-Encoding\r\n","X-Cache: HIT\r\n","Content-Length: 1256\r\n","\r\n","<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n","\n"]}]},{"cell_type":"code","source":["# Split off the HTTP headers\n","val = val.split(b'\\r\\n\\r\\n', 1)[1]\n","print(val.decode('utf-8'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AFgsoBrTDp9F","executionInfo":{"status":"ok","timestamp":1680165061352,"user_tz":-180,"elapsed":596,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"bb94639f-c876-439f-895b-794beb213c11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n","\n"]}]},{"cell_type":"markdown","source":["## Парсинг html"],"metadata":{"id":"djRJm_huDzPd"}},{"cell_type":"markdown","source":["**Парсинг** - процесс разбора и систематизации информации и выделения полезных сущностей.\n","\n","Популярные инструменты:\n","* re\n","* lxml\n","* BeautifulSoup"],"metadata":{"id":"SAuTNQiQD6r2"}},{"cell_type":"code","source":["with open('example.com.txt', 'r', encoding='utf-8') as f:\n","    html = f.read()\n","print(html)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ltDQ_LJBDtSL","executionInfo":{"status":"ok","timestamp":1680165185479,"user_tz":-180,"elapsed":639,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6f745998-aa0d-4867-8ee0-a563dcd64d3f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n","\n"]}]},{"cell_type":"markdown","source":["### re"],"metadata":{"id":"Qr-0yeqmES1b"}},{"cell_type":"markdown","source":["**Регулярные выражения (Regex)** – это строки, задающие шаблон для поиска определенных фрагментов в тексте. Помимо поиска, с помощью специальных Regex-шаблонов можно манипулировать текстовыми фрагментами – удалять и изменять подстроки частично или полностью."],"metadata":{"id":"h7SRrGMD5j3o"}},{"cell_type":"markdown","source":["Регулярные выражения состоят из набора литералов (букв и цифр) и метасимволов и выглядят примерно так:\n","\n","```\n","r'(https?://)?(www\\.)?youtube\\.(com|nl)/watch\\?v=([\\w-]+)(&.*?)?(?=[^-\\w&=%])'\n","```\n","\n","Используя метасимволы, можно создавать сложные шаблоны, содержащие специальные конструкции для работы с определенными последовательностями и группами символов.\n","\n","Regex-выражения применяют для обработки текстовых данных, в том числе в скриптах для веб-скрапинга. Кроме того, Regex используют в составе OCR-приложений для очистки отсканированного текста.\n","\n"],"metadata":{"id":"BlIbPsFL6EaD"}},{"cell_type":"markdown","source":["#### Регулярные выражения в Python"],"metadata":{"id":"qNItuKeW6XuW"}},{"cell_type":"markdown","source":["Для работы с регулярными выражениями в Python имеется модуль `re`.\n","\n","Для экранирования служебных символов в шаблонах поиска и замены используют два способа – обратный слэш \\ и «сырые» строки r''. Второй метод предпочтительнее – он позволяет избежать нагромождения слэшей в шаблонах."],"metadata":{"id":"Ifg0sOWy6bkT"}},{"cell_type":"code","source":["import re"],"metadata":{"id":"fHDdIwMz6-M0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**Основные функции `re`**"],"metadata":{"id":"FZizGn1K6spT"}},{"cell_type":"markdown","source":["`re.match()` – находит вхождение фрагмента в начале строки. Обычный формат использования – `re.match(r'шаблон', строка)`:"],"metadata":{"id":"pdy_uqlR667a"}},{"cell_type":"code","source":["s = \"кутка крякает, кукушка кукует, петух кукарекает\"\n","match = re.match(r'ку', s)\n","print(match)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F7PDlFFs7ENF","executionInfo":{"status":"ok","timestamp":1666806788067,"user_tz":-180,"elapsed":239,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"3e281056-b21f-4e0e-b488-71b429267e9f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<re.Match object; span=(0, 2), match='ку'>\n"]}]},{"cell_type":"markdown","source":["Этот код вернет `None`, несмотря на то, что в строке есть 5 фрагментов «ку». Это происходит потому, что оба фрагмента расположены не в начале строки."],"metadata":{"id":"CWfclZuV7Gvp"}},{"cell_type":"markdown","source":["`re.search()` – находит первое вхождение фрагмента в любом месте и возвращает объект `match`. Если в строке есть другие фрагменты, соответствующие запросу, `re.search` их проигнорирует. У `re.search` есть дополнительные методы:\n","- `.span()` – возвращает кортеж, содержащий начальную и конечную позиции искомого фрагмента\n","- `.string` – вернет строку, переданную в функцию `re.search`\n","- `.group()` – возвращает фрагмент строки, в котором было обнаружено совпадение"],"metadata":{"id":"xTcieeri7N_j"}},{"cell_type":"code","source":["s = \"oт топота копыт пыль по полю летит\"\n","match = re.search(r'по', s)\n","print(match, match.span(), match.string, match.group(), sep='\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A2VzRqRA7gfi","executionInfo":{"status":"ok","timestamp":1666806893623,"user_tz":-180,"elapsed":9,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"711641b1-cdc1-4e89-d3ff-61a2a654711e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<re.Match object; span=(5, 7), match='по'>\n","(5, 7)\n","oт топота копыт пыль по полю летит\n","по\n"]}]},{"cell_type":"markdown","source":["`re.findall()` – находит все вхождения фрагмента, в любом месте. Функция `re.findall()` учитывает регистр символов. Чтобы в результат вошли фрагменты с символами в другом регистре, применяют флаг `re.IGNORECASE`:"],"metadata":{"id":"0JOqcQNk7p7G"}},{"cell_type":"code","source":["s = \"Не видно, ликвидны акции или неликвидны.\"\n","match = re.findall(r'не', s, re.I)\n","print(match)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KofyIpMx7uDY","executionInfo":{"status":"ok","timestamp":1666806958932,"user_tz":-180,"elapsed":305,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"6f369a78-d131-45c6-8851-3b2c53fc888f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Не', 'не']\n"]}]},{"cell_type":"markdown","source":["`re.split()` – расщепляет строку по заданному шаблону. Количество расщеплений задается флагом – в этом примере от строки отделяется только первое слово:"],"metadata":{"id":"gRO0xilA71P5"}},{"cell_type":"code","source":["s = \"Обладаешь ли ты налогооблагаемой благодатью?\"\n","res = re.split(r' ', s, 1)\n","res"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y_GRAGDf74Xx","executionInfo":{"status":"ok","timestamp":1666807001902,"user_tz":-180,"elapsed":245,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"829f94e6-fd68-4193-9ca3-62a6ddf2ce5b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Обладаешь', 'ли ты налогооблагаемой благодатью?']"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["`re.sub()` – заменяет фрагмент в соответствии с шаблоном:"],"metadata":{"id":"u0nz_lYe780Y"}},{"cell_type":"code","source":["s = \"Коала какао лениво лакала\"\n","res = re.sub(r'коала', 'макака', s)\n","print(res)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ruoUT8Qx7-Vv","executionInfo":{"status":"ok","timestamp":1666807063289,"user_tz":-180,"elapsed":203,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"bd47ce8c-bc20-4d88-de55-44f402459343"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Коала какао лениво лакала\n"]}]},{"cell_type":"markdown","source":["`re.compile()` – создает объект из регулярного выражения. Применяется, если один и тот же поисковый шаблон используется в коде несколько раз:      \n"],"metadata":{"id":"nnEVTR7w8DZH"}},{"cell_type":"code","source":["st = re.compile('угнал')\n","res1 = st.findall(\"Карл у Клары угнал Maclaren, а Клара у Карла угнала Corvette.\")\n","res2 = st.findall(\"Карл у Клары угнал кораллы, а Клара у Карла угнала кларнет.\")\n","print(res1, res2, sep='\\n')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pGFTti7h8HF5","executionInfo":{"status":"ok","timestamp":1666807088290,"user_tz":-180,"elapsed":236,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"24bde42c-3ec7-4a0c-8393-8ace4c2202e5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['угнал', 'угнал']\n","['угнал', 'угнал']\n"]}]},{"cell_type":"markdown","source":["#### Основные метасимволы в Regex"],"metadata":{"id":"u09yCGTJ8Fpm"}},{"cell_type":"markdown","source":["- `[]`– используется для указания набора или диапазона символов"],"metadata":{"id":"uf-LrI2h8YSs"}},{"cell_type":"code","source":["re.findall(r'[с-я]', \"Камер-юнкер юркнул в бункер\", re.I)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8F7QyVek8acx","executionInfo":{"status":"ok","timestamp":1666807138518,"user_tz":-180,"elapsed":218,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"1c809443-93d8-40e7-d3ab-81323420a7ff"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['ю', 'ю', 'у', 'у']"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["re.findall(r'[аж]', \"ажиотаж, мандраж, багаж\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dxSFEyR98cRO","executionInfo":{"status":"ok","timestamp":1666807158442,"user_tz":-180,"elapsed":216,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a1e54e0e-0eb4-4c52-d7de-a2204ec5d8eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['а', 'ж', 'а', 'ж', 'а', 'а', 'ж', 'а', 'а', 'ж']"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["- `\\` – указывает на начало последовательности (мы рассмотрим их ниже) или экранирует служебные символы\n","- `.` – выбирает любой символ, кроме новой строки `\\n`\n","- `^` – проверяет, начинается ли строка с определенного символа / слова / набора символов.\n","\n","    Например, `r'^Привет'` проверит, начинается ли строка с «Привет».\n","    \n","    Метасимвол `^` в наборе `[]` имеет другое значение – проверяет, отсутствуют ли в строке определенные символы (подробнее об этом ниже)\n","- `$` – проверяет, заканчивается ли строка в соответствии с шаблоном `r'До свиданья.$'`\n","- `*` – ноль или больше совпадений с шаблоном `r'ко.*аборация'`.\n","- `+` – одно и более совпадений `r'к.+ператив'`.\n","- `?` – ноль или одно совпадение `r'ф.?нтастика'`. Кроме того, нейтрализует «жадность» выражений, которые используют `.`, `*`, `+` для выбора любых символов.\n","- `{}` – точное число совпадений `r'Интерсте.{2}ар'`.\n","- `|`– любой из двух вариантов `r'уйду|останусь'`.\n","- `()` – захватывает группу для дальнейших манипуляций – `re.sub(r'(www)', r'\\1.', \"wwwwear-gear.com\")`.\n","- `<>` – создает именованную группу – `re.search('(?P<группа1>\\w+),(?P<группа2>\\w+),(?P<группа3>\\w+)', 'дом,улица,фонарь')`"],"metadata":{"id":"9_9JStRB8PHN"}},{"cell_type":"markdown","source":["#### Визуализация регулярных выражений"],"metadata":{"id":"iouzudef-FXP"}},{"cell_type":"markdown","source":["Чем сложнее регулярное выражение, тем труднее его правильно составить и протестировать. В интернете есть немало визуализаторов Regex, которые значительно упрощают эту задачу. Самый удобный ресурс – [regex101](https://regex101.com/) . Сайт предоставляет справочную и отладочную информацию, позволяет визуально тестировать шаблоны для поиска и замены. Помимо Python, поддерживает PHP, Java, Golang и JavaScript."],"metadata":{"id":"e23vzDyZ-LmS"}},{"cell_type":"markdown","source":["![regex](https://habrastorage.org/r/w1560/webt/l1/z1/9s/l1z19s49sk5bpc8vkmcbho7zgro.jpeg)"],"metadata":{"id":"Qx0p02Ct5wLw"}},{"cell_type":"markdown","source":["#### Регулярки для парсинга"],"metadata":{"id":"2wHPBREw-W0R"}},{"cell_type":"markdown","source":["Давайте забудем, что HTML -- дерево, и попробуем попарсить его, как строчку."],"metadata":{"id":"xeCHUGSnEUmC"}},{"cell_type":"code","source":["import re"],"metadata":{"id":"CzVatRWOEPqI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["h1 = re.findall(r'<h1>[\\w ]+</h1>', html)\n","print(h1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FiUr666FEXwL","executionInfo":{"status":"ok","timestamp":1680165256425,"user_tz":-180,"elapsed":302,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8b53f1da-6bef-42a3-dfb3-7a7b62ac3553"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['<h1>Example Domain</h1>']\n"]}]},{"cell_type":"code","source":["h1 = re.findall(r'<h1>([\\w ]+)</h1>', html)\n","print(h1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bt-OVeATf2RC","executionInfo":{"status":"ok","timestamp":1680165266462,"user_tz":-180,"elapsed":329,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"211f6325-4e77-47c1-d27e-30078323cf81"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['Example Domain']\n"]}]},{"cell_type":"code","source":["paragraphs = re.findall(r'<p>(.*)</p>', html)\n","paragraphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wfhf24siEZyE","executionInfo":{"status":"ok","timestamp":1680165272622,"user_tz":-180,"elapsed":321,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4c587394-1eef-4a53-e285-204219eae968"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['<a href=\"https://www.iana.org/domains/example\">More information...</a>']"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["print(html)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KSSJouKKgNit","executionInfo":{"status":"ok","timestamp":1666808085356,"user_tz":-180,"elapsed":11,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"4b42fa6d-4c67-43a4-e4df-f2108bf042de"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<!doctype html>\n","<html>\n","<head>\n","    <title>Example Domain</title>\n","\n","    <meta charset=\"utf-8\" />\n","    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\" />\n","    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n","    <style type=\"text/css\">\n","    body {\n","        background-color: #f0f0f2;\n","        margin: 0;\n","        padding: 0;\n","        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n","        \n","    }\n","    div {\n","        width: 600px;\n","        margin: 5em auto;\n","        padding: 2em;\n","        background-color: #fdfdff;\n","        border-radius: 0.5em;\n","        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\n","    }\n","    a:link, a:visited {\n","        color: #38488f;\n","        text-decoration: none;\n","    }\n","    @media (max-width: 700px) {\n","        div {\n","            margin: 0 auto;\n","            width: auto;\n","        }\n","    }\n","    </style>    \n","</head>\n","\n","<body>\n","<div>\n","    <h1>Example Domain</h1>\n","    <p>This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.</p>\n","    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\n","</div>\n","</body>\n","</html>\n","\n"]}]},{"cell_type":"markdown","source":["Там же 2 параграфа, почему не нашёлся второй?"],"metadata":{"id":"tI_Ls7WNEj-x"}},{"cell_type":"code","source":["paragraphs = re.findall(r'<p>([\\w\\W]*)</p>', html)\n","paragraphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"G2tfA2-OEhhC","executionInfo":{"status":"ok","timestamp":1666808136247,"user_tz":-180,"elapsed":201,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"035851a6-351e-4013-8b84-ba707372b62b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['This domain is for use in illustrative examples in documents. You may use this\\n    domain in literature without prior coordination or asking for permission.</p>\\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a>']"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["Опять плохо.."],"metadata":{"id":"5GAIJZOTEslk"}},{"cell_type":"code","source":["paragraphs = re.findall(r'<p>([\\w\\W]*?)</p>', html) # * - greedy; *? - lazy (non-greedy)\n","paragraphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LUiQhJbFEplF","executionInfo":{"status":"ok","timestamp":1680165346255,"user_tz":-180,"elapsed":432,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"17254da5-d219-4e0a-fdcb-0b822fb13e2e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['This domain is for use in illustrative examples in documents. You may use this\\n    domain in literature without prior coordination or asking for permission.',\n"," '<a href=\"https://www.iana.org/domains/example\">More information...</a>']"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["Жесть, да?"],"metadata":{"id":"YcT9Ks3LEwgl"}},{"cell_type":"markdown","source":["### lxml"],"metadata":{"id":"_v71dbI_E0DX"}},{"cell_type":"markdown","source":["Воспользуемся библиотекой, которая знает про структуру XML (и HTML)."],"metadata":{"id":"B6kBRDDeE2TK"}},{"cell_type":"code","source":["from lxml import etree\n","from io import StringIO, BytesIO"],"metadata":{"id":"tyMNhEDCEvxs"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["parser = etree.HTMLParser()\n","tree = etree.parse(StringIO(html), parser)\n","tree"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9Cb_EsCGE5T2","executionInfo":{"status":"ok","timestamp":1680165451208,"user_tz":-180,"elapsed":7,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"b74e0ff7-56e3-4d65-dcf8-2ad31362f5e8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<lxml.etree._ElementTree at 0x7f8953201580>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["print(dir(tree))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"COAeKsgTE-07","executionInfo":{"status":"ok","timestamp":1680165451208,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"53526a06-0869-445c-e84d-26b260250cd2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['__class__', '__copy__', '__deepcopy__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__ne__', '__new__', '__pyx_vtable__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '_setroot', 'docinfo', 'find', 'findall', 'findtext', 'getelementpath', 'getiterator', 'getpath', 'getroot', 'iter', 'iterfind', 'parse', 'parser', 'relaxng', 'write', 'write_c14n', 'xinclude', 'xmlschema', 'xpath', 'xslt']\n"]}]},{"cell_type":"code","source":["print(tree.getroot())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pSDqH_hUFA1M","executionInfo":{"status":"ok","timestamp":1680165454907,"user_tz":-180,"elapsed":537,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"60025c6a-8240-497d-a7ea-d4b1e016f7d8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<Element html at 0x7f8953201540>\n"]}]},{"cell_type":"code","source":["print(etree.tostring(tree.getroot(), pretty_print=True, method='html'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oxaWK1-VjhLR","executionInfo":{"status":"ok","timestamp":1680165461427,"user_tz":-180,"elapsed":283,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"af0ec62b-1232-40d3-eb8d-ad6c11a999c3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["b'<html>\\n<head>\\n    <title>Example Domain</title>\\n\\n    <meta charset=\"utf-8\">\\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\">\\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n    <style type=\"text/css\">\\n    body {\\n        background-color: #f0f0f2;\\n        margin: 0;\\n        padding: 0;\\n        font-family: -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", \"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\\n        \\n    }\\n    div {\\n        width: 600px;\\n        margin: 5em auto;\\n        padding: 2em;\\n        background-color: #fdfdff;\\n        border-radius: 0.5em;\\n        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);\\n    }\\n    a:link, a:visited {\\n        color: #38488f;\\n        text-decoration: none;\\n    }\\n    @media (max-width: 700px) {\\n        div {\\n            margin: 0 auto;\\n            width: auto;\\n        }\\n    }\\n    </style>    \\n</head>\\n\\n<body>\\n<div>\\n    <h1>Example Domain</h1>\\n    <p>This domain is for use in illustrative examples in documents. You may use this\\n    domain in literature without prior coordination or asking for permission.</p>\\n    <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\\n</div>\\n</body>\\n</html>\\n'\n"]}]},{"cell_type":"code","source":["paragraphs = tree.xpath('//p')\n","for p in paragraphs:\n","    print(p.text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yFNZGK_UFCyb","executionInfo":{"status":"ok","timestamp":1680165539039,"user_tz":-180,"elapsed":804,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"85b66568-3223-494e-8656-8e7781459c2c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["This domain is for use in illustrative examples in documents. You may use this\n","    domain in literature without prior coordination or asking for permission.\n","None\n"]}]},{"cell_type":"code","source":["for p in paragraphs:\n","    print(etree.tostring(p, pretty_print=True, method='html'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WrFtSrctFXTn","executionInfo":{"status":"ok","timestamp":1680165564241,"user_tz":-180,"elapsed":400,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"fb523bc6-6aca-4e5c-feff-458c891eaee4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["b'<p>This domain is for use in illustrative examples in documents. You may use this\\n    domain in literature without prior coordination or asking for permission.</p>\\n    \\n'\n","b'<p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>\\n\\n'\n"]}]},{"cell_type":"code","source":["hrefs = tree.xpath('//a')\n","for href in hrefs:\n","    print(href.text, href.attrib)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fuIaNICYFaAo","executionInfo":{"status":"ok","timestamp":1666809108115,"user_tz":-180,"elapsed":213,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"0669a940-2831-4e26-c397-859b0ada71b5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["More information... {'href': 'https://www.iana.org/domains/example'}\n"]}]},{"cell_type":"code","source":["specific_hrefs = tree.xpath('//a[@href=\"https://www.iana.org/domains/example\"]')\n","specific_hrefs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"67Q8B8oGFbon","executionInfo":{"status":"ok","timestamp":1666809147723,"user_tz":-180,"elapsed":5,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"11850c4b-5488-48a3-b5f6-6fc67a0730bc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<Element a at 0x7fb1806698c0>]"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["### BeautifulSoup"],"metadata":{"id":"f7WumoQCFg4s"}},{"cell_type":"markdown","source":["Ещё одна библиотека, которая хорошо подходит для парсинга HTML."],"metadata":{"id":"fE24EFv4FmSW"}},{"cell_type":"code","source":["from bs4 import BeautifulSoup"],"metadata":{"id":"d3NDqyEuFdzw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["soup = BeautifulSoup(html, 'lxml')"],"metadata":{"id":"ubwFc7ADFsnF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["paragraphs = soup.find_all('p')\n","paragraphs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"obvKxvuMFutb","executionInfo":{"status":"ok","timestamp":1680165671879,"user_tz":-180,"elapsed":421,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"2419a6de-d798-4297-84c2-f38e3a99acf2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<p>This domain is for use in illustrative examples in documents. You may use this\n","     domain in literature without prior coordination or asking for permission.</p>,\n"," <p><a href=\"https://www.iana.org/domains/example\">More information...</a></p>]"]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["hrefs = soup.find_all('a')\n","hrefs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VvXy4X4HFwDN","executionInfo":{"status":"ok","timestamp":1680165676145,"user_tz":-180,"elapsed":20,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"e0a8a615-7af7-44a7-b5b6-41dae7fec3cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<a href=\"https://www.iana.org/domains/example\">More information...</a>]"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["hrefs = soup.find_all('a', href='https://www.iana.org/domains/example')\n","hrefs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-5KVB1ygFxj-","executionInfo":{"status":"ok","timestamp":1680165686640,"user_tz":-180,"elapsed":15,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"22519508-9597-44d6-d684-85867ee30ad8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<a href=\"https://www.iana.org/domains/example\">More information...</a>]"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["hrefs = soup.find_all('a', href='https://www.other-website.org/domains/example')\n","hrefs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TE9ictXRF0Zj","executionInfo":{"status":"ok","timestamp":1680165688395,"user_tz":-180,"elapsed":9,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"0e0eeebe-16bf-4236-db69-160af4b8e500"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{},"execution_count":52}]},{"cell_type":"markdown","source":["### Extra\n","\n","Помимо рассмотренных библиотек есть удобный инструмент для тестирования веб-приложений [Selenium WebDriver](https://www.selenium.dev/documentation/webdriver/) и его питоновская обертка [selenium-python](https://selenium-python.readthedocs.io/).\n","\n","Классная вещь, для простого скрапинга и парсинга - перебор (создана не для этого по сути), но в некоторых случаях спасает."],"metadata":{"id":"Jjk8nwf9-p0X"}},{"cell_type":"markdown","source":["## Производительность"],"metadata":{"id":"AQ33RwTtF4xD"}},{"cell_type":"code","source":["%timeit re.findall(r'<p>([\\w\\W]*?)</p>', html)\n","%timeit tree.xpath('//p')\n","%timeit soup.find_all('p')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g2myor6yF2p2","executionInfo":{"status":"ok","timestamp":1680165800330,"user_tz":-180,"elapsed":34817,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8d667004-fd35-4edf-84d8-07fdd72f605c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8.74 µs ± 103 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n","15.1 µs ± 3.13 µs per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n","18.3 µs ± 4.59 µs per loop (mean ± std. dev. of 7 runs, 100000 loops each)\n"]}]},{"cell_type":"markdown","source":["**Мораль:** `regex` -- это быстро.\n","\n","`BeautifulSoup` чуть дольше `lxml`, т.к. он для удобства работы преобразует документ в свой внутренний формат -- собственно, суп."],"metadata":{"id":"OBBEg8xwGGir"}},{"cell_type":"markdown","source":["# Extra: `scrapy`"],"metadata":{"id":"fhtEFt0yjTCf"}},{"cell_type":"markdown","source":["Будем парсить сайт с архивом курсов криптовалют: https://coinmarketcap.com/.\n","\n","Хочется открыть [historical snapshots](https://coinmarketcap.com/historical/) и для каждой недели выгрузить полную табличку."],"metadata":{"id":"L9fPgyBLjkoO"}},{"cell_type":"markdown","metadata":{"id":"ILhuOBEOeY8R"},"source":[">**Важно!**\n",">\n",">Совершенно не обязательно понимать, что будет происходить дальше.\n",">\n",">**Мораль** - есть фреймворки, которые полностью берут на себя получение и парсинг HTML.\n",">\n",">А ещё они умеют распараллеливать процесс, вставлять случайные задержки (чтобы серверы не подумали, что вы робот и не заблокировали ваши запросы) и удобно экспортировать полученные данные (например, в базу данных). И многое другое. <br>И всё это контролируется `scrapy.cfg` -- одним конфигурационным файлом.\n",">\n",">Вам остаётся только указать, какие куски текста надо выцеплять. И в какую базу класть. Ну, почти. :)\n","\n"]},{"cell_type":"code","source":["%%bash\n","pip install scrapy"],"metadata":{"id":"nAkUDNzAj6Qk"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-4e6SoCgeY8R"},"outputs":[],"source":["import scrapy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LECNaxG5eY8S"},"outputs":[],"source":["%%bash\n","rm -rf coinmarketcap"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dqITVE3feY8S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1680165902364,"user_tz":-180,"elapsed":1838,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"a7616ec8-d2fa-41ac-9db2-a3d85bf7952d"},"outputs":[{"output_type":"stream","name":"stdout","text":["New Scrapy project 'coinmarketcap', using template directory '/usr/local/lib/python3.9/dist-packages/scrapy/templates/project', created in:\n","    /content/coinmarketcap\n","\n","You can start your first spider with:\n","    cd coinmarketcap\n","    scrapy genspider example example.com\n"]}],"source":["%%bash\n","scrapy startproject coinmarketcap"]},{"cell_type":"markdown","metadata":{"id":"deM1jiP1eY8S"},"source":["Что там внутри?"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qQAjgu-WeY8S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1680165911393,"user_tz":-180,"elapsed":501,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"8949ca2b-790e-4f71-960f-a6f3cd27b3eb"},"outputs":[{"output_type":"stream","name":"stdout","text":[".:\n","coinmarketcap\n","scrapy.cfg\n","\n","./coinmarketcap:\n","__init__.py\n","items.py\n","middlewares.py\n","pipelines.py\n","settings.py\n","spiders\n","\n","./coinmarketcap/spiders:\n","__init__.py\n"]}],"source":["%%bash\n","cd coinmarketcap\n","ls -R"]},{"cell_type":"markdown","metadata":{"id":"5NhsOeMteY8S"},"source":["Специальная функция, чтобы из ноутбука формировать код в проекте scrapy:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ItoL8ksZeY8S"},"outputs":[],"source":["def dump_to(path):\n","    with open(path, 'w') as f:\n","        f.write(_i)  # _i это \"последний выполненный Input\" в iPython"]},{"cell_type":"markdown","metadata":{"id":"Bz4ogygceY8S"},"source":[">**Внимание!**\n",">\n",">Следующие ячейки при выполнении не будут делать ничего полезного.\n",">Мы просто помещаем код в *Input*, а потом перекладываем его в нужный файл."]},{"cell_type":"markdown","metadata":{"id":"GEGGws9ZeY8S"},"source":["### Item"]},{"cell_type":"markdown","source":["Cперва определим, что хотим собирать"],"metadata":{"id":"SmC28FrkkfuK"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"aKTXbqCSeY8T"},"outputs":[],"source":["# -*- coding:utf8 -*-\n","\n","import scrapy\n","\n","\n","class CurrencyItem(scrapy.Item):\n","    date = scrapy.Field()\n","    name = scrapy.Field()\n","    symbol = scrapy.Field()\n","    market_cap = scrapy.Field()\n","    price = scrapy.Field()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Z0v8w2DoeY8T"},"outputs":[],"source":["dump_to('./coinmarketcap/coinmarketcap/items.py')"]},{"cell_type":"markdown","metadata":{"id":"KVUE_vTmeY8T"},"source":["### Spider"]},{"cell_type":"markdown","source":["Определим **спайдеры** - процессы, которые собирают Item'ы."],"metadata":{"id":"E4cai7yBkwa6"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Uuiq8dH5eY8T","colab":{"base_uri":"https://localhost:8080/","height":386},"executionInfo":{"status":"error","timestamp":1680166104012,"user_tz":-180,"elapsed":1280,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"45eae301-5129-4b95-c6f6-e99eb9aed0d6"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-62-28e6c7fc4090>\u001b[0m in \u001b[0;36m<cell line: 9>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mscrapy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mloader\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mItemLoader\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mscrapy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselector\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mSelector\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mcoinmarketcap\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCurrencyItem\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'coinmarketcap.items'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["# -*- coding:utf8 -*-\n","\n","from scrapy import Request\n","from scrapy.spiders import CrawlSpider, Rule\n","from scrapy.linkextractors import LinkExtractor\n","from scrapy.loader.processors import Join\n","from scrapy.loader import ItemLoader\n","from scrapy.selector import Selector\n","from coinmarketcap.items import CurrencyItem\n","\n","\n","class CurrencyLoader(ItemLoader):\n","    pass\n","\n","\n","class WeeklySpider(CrawlSpider):\n","    name = 'weekly'\n","    allowed_domains = ['coinmarketcap.com']\n","    start_urls = ['https://coinmarketcap.com/historical/']\n","    only_2018_april_regex = '/201904[0-9]{2}' # full history parsing takes ~4 hrs\n","\n","    rules = (\n","        Rule(LinkExtractor(allow=(only_2018_april_regex, )), callback='parse_weekly_report', follow=False),\n","    )\n","\n","    def parse_weekly_report(self, response):\n","\n","        hxs = Selector(response)\n","        items_html = hxs.xpath('//table//tr')\n","        #print(len(items_html),type(items_html),dir(items_html))\n","        #print(items_html)\n","        items = []\n","        item_names = items_html.xpath('//td[@class=\"cmc-table__cell cmc-table__cell--sticky cmc-table__cell--sortable cmc-table__cell--left cmc-table__cell--sort-by__name\"]//div//a/text()').extract()\n","        item_symbols = items_html.xpath('//td[@class=\"cmc-table__cell cmc-table__cell--sortable cmc-table__cell--left cmc-table__cell--sort-by__symbol\"]//div/text()').extract()\n","        item_caps = items_html.xpath('//td[@class=\"cmc-table__cell cmc-table__cell--sortable cmc-table__cell--right cmc-table__cell--sort-by__market-cap\"]//div/text()').extract()\n","        item_prices = items_html.xpath('//td[@class=\"cmc-table__cell cmc-table__cell--sortable cmc-table__cell--right cmc-table__cell--sort-by__price\"]//div/text()').extract()\n","        #print(response.request.url)\n","        #print(len(item_prices),item_prices)\n","\n","        for i in range(200):\n","\n","            item = CurrencyItem()\n","            item['date'] = response.request.url.split('/')[-2]\n","            item['name'] = item_names[i]\n","            item['symbol'] = item_symbols[i]\n","            item['market_cap'] = item_caps[i]\n","            item['price'] = item_prices[i]\n","\n","            yield item\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wQDe5ufeeY8T"},"outputs":[],"source":["dump_to('./coinmarketcap/coinmarketcap/spiders/weekly.py')"]},{"cell_type":"markdown","metadata":{"id":"dad5I6K_eY8T"},"source":["### Pipeline"]},{"cell_type":"markdown","source":["Определяем конвейер, в котором будем делать с данными что-то полезное, например, экспорт в БД."],"metadata":{"id":"DC3l2Sj3lUsq"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"GTRvY69KeY8T","colab":{"base_uri":"https://localhost:8080/","height":386},"executionInfo":{"status":"error","timestamp":1680166136370,"user_tz":-180,"elapsed":527,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"65b71676-0cbc-4585-94fc-b5505538b626"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-64-41997e59d35e>\u001b[0m in \u001b[0;36m<cell line: 11>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mscrapy\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexceptions\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mDropItem\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mscrapy\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0msignals\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mcoinmarketcap\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCurrencyItem\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mcollections\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mCounter\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'coinmarketcap.items'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["# -*- coding: utf-8 -*-\n","\n","import os, logging\n","from sqlalchemy.ext.declarative import declarative_base\n","from sqlalchemy import create_engine, Table, Column, Integer, String, Date, MetaData, ForeignKey\n","from sqlalchemy.engine.url import URL\n","from sqlalchemy.orm import sessionmaker\n","from sqlalchemy.pool import NullPool\n","from scrapy.exceptions import DropItem\n","from scrapy import signals\n","from coinmarketcap.items import CurrencyItem\n","import pandas as pd\n","from collections import Counter\n","\n","logger = logging.getLogger(__name__)\n","\n","DeclarativeBase = declarative_base()\n","\n","class Currency(DeclarativeBase):\n","    __tablename__ = 'currency'\n","    __table_args__ = {'sqlite_autoincrement': True}\n","\n","    id = Column('id', Integer, primary_key=True)\n","    date = Column('date', Date)\n","    name = Column('name', String)\n","    symbol = Column('symbol', String)\n","    market_cap = Column('market_cap', String)\n","    price = Column('price', String)\n","\n","    def __init__(self, item):\n","        self.date = pd.to_datetime(item['date'], format='%Y%m%d')\n","        self.name = item['name']\n","        self.symbol = item['symbol']\n","        self.market_cap = item['market_cap']\n","        self.price = item['price']\n","\n","    def __repr__(self):\n","        return \"<Currency({0}, {1}, {2})>\".format(self.id, self.symbol, self.market_cap)\n","\n","\n","class SqlitePipeline(object):\n","    def __init__(self, settings):\n","        self.database = settings.get('DATABASE')\n","        self.sessions = {}\n","\n","    @classmethod\n","    def from_crawler(cls, crawler):\n","        pipeline = cls(crawler.settings)\n","        crawler.signals.connect(pipeline.spider_closed, signals.spider_closed)\n","        crawler.signals.connect(pipeline.spider_opened, signals.spider_opened)\n","        return pipeline\n","\n","    def create_engine(self):\n","        engine = create_engine(URL(**self.database), poolclass=NullPool)\n","        return engine\n","\n","    def create_tables(self, engine):\n","        DeclarativeBase.metadata.create_all(engine, checkfirst=True)\n","\n","    def create_session(self, engine):\n","        session = sessionmaker(bind=engine)()\n","        return session\n","\n","    def spider_opened(self, spider):\n","        engine = self.create_engine()\n","        self.create_tables(engine)\n","        session = self.create_session(engine)\n","        self.sessions[spider] = session\n","\n","    def spider_closed(self, spider):\n","        session = self.sessions.pop(spider)\n","        session.close()\n","\n","    def process_item(self, item, spider):\n","        session = self.sessions[spider]\n","        currency = Currency(item)\n","        link_exists = session.query(Currency).filter_by(symbol=item['symbol'], date=item['date']).first() is not None\n","\n","        if link_exists:\n","            logger.info('Item {} is in db'.format(currency))\n","            return item\n","\n","        try:\n","            session.add(currency)\n","            session.commit()\n","            logger.info('Item {} stored in db'.format(currency))\n","        except Exception as e:\n","            logger.info('Failed to add {} to db'.format(currency))\n","            session.rollback()\n","            raise e\n","\n","        return item"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HPpSqepSeY8U"},"outputs":[],"source":["dump_to('./coinmarketcap/coinmarketcap/pipelines.py')"]},{"cell_type":"markdown","metadata":{"id":"qs6PAPjCeY8U"},"source":["### Settings"]},{"cell_type":"markdown","source":["Указываем общие настройки `scrapy`."],"metadata":{"id":"Gu6s8H4jlakR"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"mi2en6ixeY8U"},"outputs":[],"source":["# -*- coding: utf-8 -*-\n","\n","# Scrapy settings for coinmarketcap project\n","#\n","# For simplicity, this file contains only settings considered important or\n","# commonly used. You can find more settings consulting the documentation:\n","#\n","#     https://doc.scrapy.org/en/latest/topics/settings.html\n","#     https://doc.scrapy.org/en/latest/topics/downloader-middleware.html\n","#     https://doc.scrapy.org/en/latest/topics/spider-middleware.html\n","\n","BOT_NAME = 'coinmarketcap'\n","\n","SPIDER_MODULES = ['coinmarketcap.spiders']\n","NEWSPIDER_MODULE = 'coinmarketcap.spiders'\n","\n","DATABASE = {\n","    'drivername': 'sqlite',\n","    # 'host': 'localhost',\n","    # 'port': '5432',\n","    # 'username': 'YOUR_USERNAME',\n","    # 'password': 'YOUR_PASSWORD',\n","    'database': 'weekly.sqlite'\n","}\n","\n","# Crawl responsibly by identifying yourself (and your website) on the user-agent\n","USER_AGENT = '%s' % (BOT_NAME)\n","\n","# Obey robots.txt rules\n","# ROBOTSTXT_OBEY = True\n","\n","# Configure maximum concurrent requests performed by Scrapy (default: 16)\n","CONCURRENT_REQUESTS = 1\n","\n","# Configure a delay for requests for the same website (default: 0)\n","# See https://doc.scrapy.org/en/latest/topics/settings.html#download-delay\n","# See also autothrottle settings and docs\n","#DOWNLOAD_DELAY = 3\n","# The download delay setting will honor only one of:\n","#CONCURRENT_REQUESTS_PER_DOMAIN = 16\n","#CONCURRENT_REQUESTS_PER_IP = 16\n","\n","# Disable cookies (enabled by default)\n","#COOKIES_ENABLED = False\n","\n","# Disable Telnet Console (enabled by default)\n","#TELNETCONSOLE_ENABLED = False\n","\n","# Override the default request headers:\n","#DEFAULT_REQUEST_HEADERS = {\n","#   'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n","#   'Accept-Language': 'en',\n","#}\n","\n","# Enable or disable spider middlewares\n","# See https://doc.scrapy.org/en/latest/topics/spider-middleware.html\n","#SPIDER_MIDDLEWARES = {\n","#    'coinmarketcap.middlewares.CoinmarketcapSpiderMiddleware': 543,\n","#}\n","\n","# Enable or disable downloader middlewares\n","# See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html\n","#DOWNLOADER_MIDDLEWARES = {\n","#    'coinmarketcap.middlewares.CoinmarketcapDownloaderMiddleware': 543,\n","#}\n","\n","# Enable or disable extensions\n","# See https://doc.scrapy.org/en/latest/topics/extensions.html\n","#EXTENSIONS = {\n","#    'scrapy.extensions.telnet.TelnetConsole': None,\n","#}\n","\n","# Configure item pipelines\n","# See https://doc.scrapy.org/en/latest/topics/item-pipeline.html\n","ITEM_PIPELINES = {\n","   'coinmarketcap.pipelines.SqlitePipeline': 300,\n","}\n","\n","# Enable and configure the AutoThrottle extension (disabled by default)\n","# See https://doc.scrapy.org/en/latest/topics/autothrottle.html\n","AUTOTHROTTLE_ENABLED = False\n","# The initial download delay\n","AUTOTHROTTLE_START_DELAY = 5\n","# The maximum download delay to be set in case of high latencies\n","AUTOTHROTTLE_MAX_DELAY = 60\n","# The average number of requests Scrapy should be sending in parallel to\n","# each remote server\n","#AUTOTHROTTLE_TARGET_CONCURRENCY = 1.0\n","# Enable showing throttling stats for every response received:\n","#AUTOTHROTTLE_DEBUG = False\n","\n","# Enable and configure HTTP caching (disabled by default)\n","# See https://doc.scrapy.org/en/latest/topics/downloader-middleware.html#httpcache-middleware-settings\n","#HTTPCACHE_ENABLED = True\n","#HTTPCACHE_EXPIRATION_SECS = 0\n","#HTTPCACHE_DIR = 'httpcache'\n","#HTTPCACHE_IGNORE_HTTP_CODES = []\n","#HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage'\n","\n","LOG_FILE = 'crawling.log'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BrUkjUtJeY8V"},"outputs":[],"source":["dump_to('./coinmarketcap/coinmarketcap/settings.py')"]},{"cell_type":"markdown","metadata":{"id":"pjp0iEcLeY8V"},"source":["Посмотрим на структуру scrapy проекта ещё раз"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3gtgezdLeY8V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1680166152042,"user_tz":-180,"elapsed":17,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"93d91146-f4fe-49fd-ec83-8b4e94e1d019"},"outputs":[{"output_type":"stream","name":"stdout","text":[".:\n","coinmarketcap\n","scrapy.cfg\n","\n","./coinmarketcap:\n","__init__.py\n","items.py\n","middlewares.py\n","pipelines.py\n","settings.py\n","spiders\n","\n","./coinmarketcap/spiders:\n","__init__.py\n","weekly.py\n"]}],"source":["%%bash\n","cd coinmarketcap\n","ls -R"]},{"cell_type":"markdown","metadata":{"id":"Sqo9tHBVeY8V"},"source":["### Запуск"]},{"cell_type":"markdown","source":["Все подготовили, теперь запустим паука!"],"metadata":{"id":"VZuiHpymlkfZ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"qfgf9BxpeY8V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1680166177948,"user_tz":-180,"elapsed":17009,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"58041801-a397-409d-e155-64ce6020467b"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/scrapy/utils/request.py:232: ScrapyDeprecationWarning: '2.6' is a deprecated value for the 'REQUEST_FINGERPRINTER_IMPLEMENTATION' setting.\n","\n","It is also the default value. In other words, it is normal to get this warning if you have not defined a value for the 'REQUEST_FINGERPRINTER_IMPLEMENTATION' setting. This is so for backward compatibility reasons, but it will change in a future version of Scrapy.\n","\n","See the documentation of the 'REQUEST_FINGERPRINTER_IMPLEMENTATION' setting for information on how to handle this deprecation.\n","  return cls(crawler)\n"]},{"output_type":"stream","name":"stdout","text":["15.8 s ± 0 ns per loop (mean ± std. dev. of 1 run, 1 loop each)\n"]}],"source":["%%timeit -n 1 -r 1\n","%%bash\n","cd coinmarketcap;\n","scrapy crawl weekly"]},{"cell_type":"markdown","metadata":{"id":"-2DQrtWjeY8V"},"source":["Посмотрим, что получилось:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kNLjyWTUeY8V","colab":{"base_uri":"https://localhost:8080/","height":224},"executionInfo":{"status":"ok","timestamp":1680166198645,"user_tz":-180,"elapsed":548,"user":{"displayName":"Nikita Chestnov","userId":"16607095869821949390"}},"outputId":"779c8d8f-0026-4fe6-dd7a-4c1165b74b22"},"outputs":[{"output_type":"stream","name":"stdout","text":["(800, 6)\n"]},{"output_type":"execute_result","data":{"text/plain":["   id        date      name symbol          market_cap      price\n","0   1  2019-04-07       BTC    BTC  $91,674,230,185.93  $5,198.90\n","1   2  2019-04-07   Bitcoin    ETH  $18,424,576,820.42    $174.53\n","2   3  2019-04-07       ETH    XRP  $15,021,731,304.72    $0.3599\n","3   4  2019-04-07  Ethereum    BCH   $5,662,007,844.39    $319.60\n","4   5  2019-04-07       XRP    LTC   $5,653,406,711.33     $92.31"],"text/html":["\n","  <div id=\"df-1f9f312f-d39d-4a16-b810-3fa271c3eab8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>date</th>\n","      <th>name</th>\n","      <th>symbol</th>\n","      <th>market_cap</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2019-04-07</td>\n","      <td>BTC</td>\n","      <td>BTC</td>\n","      <td>$91,674,230,185.93</td>\n","      <td>$5,198.90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2019-04-07</td>\n","      <td>Bitcoin</td>\n","      <td>ETH</td>\n","      <td>$18,424,576,820.42</td>\n","      <td>$174.53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2019-04-07</td>\n","      <td>ETH</td>\n","      <td>XRP</td>\n","      <td>$15,021,731,304.72</td>\n","      <td>$0.3599</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2019-04-07</td>\n","      <td>Ethereum</td>\n","      <td>BCH</td>\n","      <td>$5,662,007,844.39</td>\n","      <td>$319.60</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2019-04-07</td>\n","      <td>XRP</td>\n","      <td>LTC</td>\n","      <td>$5,653,406,711.33</td>\n","      <td>$92.31</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1f9f312f-d39d-4a16-b810-3fa271c3eab8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1f9f312f-d39d-4a16-b810-3fa271c3eab8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1f9f312f-d39d-4a16-b810-3fa271c3eab8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":70}],"source":["import sqlite3\n","import pandas as pd\n","\n","connection = sqlite3.connect('./coinmarketcap/weekly.sqlite')\n","\n","df = pd.read_sql_query(\"SELECT * FROM currency\", connection)\n","print(df.shape)\n","df.head()"]},{"cell_type":"code","source":[],"metadata":{"id":"MhcLUl72tZUj"},"execution_count":null,"outputs":[]}],"metadata":{"celltoolbar":"Slideshow","kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.5"},"colab":{"provenance":[{"file_id":"1bAtfugTlLwrsBh8mZPXsDUltl62xbYl9","timestamp":1697982604286},{"file_id":"1-ZOzki-4bYOZ5SjLU3-tK4dB_THLKXgp","timestamp":1680004682515},{"file_id":"1Q8xjlwqnSlVUFxH3SyVy8mRcfxtZzUue","timestamp":1670330819696}],"toc_visible":true}},"nbformat":4,"nbformat_minor":0}